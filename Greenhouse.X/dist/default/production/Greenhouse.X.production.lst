

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jun 03 00:16:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45  0000                     
    46                           ; Version 2.05
    47                           ; Generated 20/12/2018 GMT
    48                           ; 
    49                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     _TRISCbits	set	3988
    81  0000                     _LATB	set	3978
    82  0000                     _TRISD	set	3989
    83  0000                     _TRISB	set	3987
    84  0000                     _ADCON0bits	set	4034
    85  0000                     _ADCON0	set	4034
    86  0000                     _ADRESL	set	4035
    87  0000                     _ADRESH	set	4036
    88  0000                     _ADCON2	set	4032
    89  0000                     _ADCON1	set	4033
    90  0000                     _LATAbits	set	3977
    91  0000                     _TRISAbits	set	3986
    92  0000                     _TRISA	set	3986
    93  0000                     _OSCCON	set	4051
    94  0000                     _LATD1	set	31841
    95  0000                     _LATD0	set	31840
    96  0000                     _GO	set	32273
    97  0000                     _ADON	set	32272
    98                           
    99                           	psect	smallconst
   100  0000'                    __psmallconst:
   101                           	opt callstack 0
   102  0000' 00                 	db	0
   103  0001'                    STR_1:
   104  0001' 25                 	db	37
   105  0002' 64                 	db	100	;'d'
   106  0003' 25                 	db	37
   107  0004' 63                 	db	99	;'c'
   108  0005' 43                 	db	67	;'C'
   109  0006' 00                 	db	0
   110  0007'                    STR_2:
   111  0007' 25                 	db	37
   112  0008' 64                 	db	100	;'d'
   113  0009' 25                 	db	37
   114  000A' 25                 	db	37
   115  000B' 00                 	db	0
   116  000C'                    STR_4:
   117  000C' 48                 	db	72	;'H'
   118  000D' 3A                 	db	58	;':'
   119  000E' 20                 	db	32
   120  000F' 00                 	db	0
   121  0010'                    STR_3:
   122  0010' 54                 	db	84	;'T'
   123  0011' 3A                 	db	58	;':'
   124  0012' 20                 	db	32
   125  0013' 00                 	db	0
   126                           
   127                           ; #config settings
   128  0014' 00                 	db	0	; dummy byte at the end
   129  0000                     
   130                           	psect	cinit
   131  0000'                    __pcinit:
   132                           	opt callstack 0
   133  0000'                    start_initialization:
   134                           	opt callstack 0
   135  0000'                    __initialization:
   136                           	opt callstack 0
   137                           
   138                           ; Clear objects allocated to BANK0 (36 bytes)
   139  0000' EE00' F000'        	lfsr	0,__pbssBANK0
   140  0004' 0E24               	movlw	36
   141  0006'                    clear_0:
   142  0006' 6AEE               	clrf	postinc0,c
   143  0008' 06E8               	decf	wreg,f,c
   144  000A' E1FD               	bnz	clear_0
   145                           
   146                           ; Clear objects allocated to COMRAM (4 bytes)
   147  000C' 6A00'              	clrf	(__pbssCOMRAM+3)& (0+255),c
   148  000E' 6A00'              	clrf	(__pbssCOMRAM+2)& (0+255),c
   149  0010' 6A00'              	clrf	(__pbssCOMRAM+1)& (0+255),c
   150  0012' 6A00'              	clrf	__pbssCOMRAM& (0+255),c
   151  0014'                    end_of_initialization:
   152                           	opt callstack 0
   153  0014'                    __end_of__initialization:
   154                           	opt callstack 0
   155  0014' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   156  0016' 6EF8               	movwf	tblptru,c
   157  0018' 0100               	movlb	0
   158  001A' EF00' F000'        	goto	_main	;jump to C main() function
   159                           
   160                           	psect	bssCOMRAM
   161  0000'                    __pbssCOMRAM:
   162                           	opt callstack 0
   163  0000'                    _width:
   164                           	opt callstack 0
   165  0000'                    	ds	2
   166  0002'                    _flags:
   167                           	opt callstack 0
   168  0002'                    	ds	2
   169                           
   170                           	psect	bssBANK0
   171  0000'                    __pbssBANK0:
   172                           	opt callstack 0
   173  0000'                    _nout:
   174                           	opt callstack 0
   175  0000'                    	ds	2
   176  0002'                    _prec:
   177                           	opt callstack 0
   178  0002'                    	ds	2
   179  0004'                    _dbuf:
   180                           	opt callstack 0
   181  0004'                    	ds	32
   182                           
   183                           	psect	cstackBANK0
   184  0000'                    __pcstackBANK0:
   185                           	opt callstack 0
   186  0000'                    ?_sprintf:
   187                           	opt callstack 0
   188  0000'                    sprintf@s:
   189                           	opt callstack 0
   190                           
   191                           ; 2 bytes @ 0x0
   192  0000'                    	ds	2
   193  0002'                    sprintf@fmt:
   194                           	opt callstack 0
   195                           
   196                           ; 2 bytes @ 0x2
   197  0002'                    	ds	8
   198  000A'                    sprintf@ap:
   199                           	opt callstack 0
   200                           
   201                           ; 2 bytes @ 0xA
   202  000A'                    	ds	2
   203  000C'                    sprintf@f:
   204                           	opt callstack 0
   205                           
   206                           ; 6 bytes @ 0xC
   207  000C'                    	ds	6
   208  0012'                    main@Temperature:
   209                           	opt callstack 0
   210                           
   211                           ; 10 bytes @ 0x12
   212  0012'                    	ds	10
   213  001C'                    main@Soil:
   214                           	opt callstack 0
   215                           
   216                           ; 10 bytes @ 0x1C
   217  001C'                    	ds	10
   218  0026'                    main@soil:
   219                           	opt callstack 0
   220                           
   221                           ; 4 bytes @ 0x26
   222  0026'                    	ds	4
   223  002A'                    main@temp:
   224                           	opt callstack 0
   225                           
   226                           ; 4 bytes @ 0x2A
   227  002A'                    	ds	4
   228                           
   229                           	psect	cstackCOMRAM
   230  0000'                    __pcstackCOMRAM:
   231                           	opt callstack 0
   232  0000'                    ??_servoRotate0:
   233  0000'                    ??_servoRotate90:
   234  0000'                    ?_ADC_Read:
   235                           	opt callstack 0
   236  0000'                    ?_strlen:
   237                           	opt callstack 0
   238  0000'                    ?___fltol:
   239                           	opt callstack 0
   240  0000'                    ?___aodiv:
   241                           	opt callstack 0
   242  0000'                    ?___aomod:
   243                           	opt callstack 0
   244  0000'                    LCD_Command@cmd:
   245                           	opt callstack 0
   246  0000'                    LCD_Char@dat:
   247                           	opt callstack 0
   248  0000'                    ADC_Read@channel:
   249                           	opt callstack 0
   250  0000'                    memset@dest:
   251                           	opt callstack 0
   252  0000'                    fputc@c:
   253                           	opt callstack 0
   254  0000'                    strlen@s:
   255                           	opt callstack 0
   256  0000'                    ___flge@ff1:
   257                           	opt callstack 0
   258  0000'                    ___fltol@f1:
   259                           	opt callstack 0
   260  0000'                    ___aodiv@dividend:
   261                           	opt callstack 0
   262  0000'                    ___aomod@dividend:
   263                           	opt callstack 0
   264                           
   265                           ; 8 bytes @ 0x0
   266  0000'                    	ds	1
   267  0001'                    LCD_String@msg:
   268                           	opt callstack 0
   269  0001'                    servoRotate0@i:
   270                           	opt callstack 0
   271  0001'                    servoRotate90@i:
   272                           	opt callstack 0
   273                           
   274                           ; 2 bytes @ 0x1
   275  0001'                    	ds	1
   276  0002'                    ??_ADC_Read:
   277  0002'                    memset@c:
   278                           	opt callstack 0
   279  0002'                    fputc@fp:
   280                           	opt callstack 0
   281  0002'                    strlen@a:
   282                           	opt callstack 0
   283                           
   284                           ; 2 bytes @ 0x2
   285  0002'                    	ds	1
   286  0003'                    LCD_String_xy@pos:
   287                           	opt callstack 0
   288                           
   289                           ; 1 bytes @ 0x3
   290  0003'                    	ds	1
   291  0004'                    ??_fputc:
   292  0004'                    ??___fltol:
   293  0004'                    LCD_String_xy@msg:
   294                           	opt callstack 0
   295  0004'                    memset@n:
   296                           	opt callstack 0
   297  0004'                    ___flge@ff2:
   298                           	opt callstack 0
   299                           
   300                           ; 4 bytes @ 0x4
   301  0004'                    	ds	2
   302  0006'                    ??_memset:
   303  0006'                    LCD_String_xy@row:
   304                           	opt callstack 0
   305  0006'                    ADC_Read@digital:
   306                           	opt callstack 0
   307                           
   308                           ; 2 bytes @ 0x6
   309  0006'                    	ds	1
   310  0007'                    LCD_String_xy@location:
   311                           	opt callstack 0
   312                           
   313                           ; 1 bytes @ 0x7
   314  0007'                    	ds	1
   315  0008'                    ??___flge:
   316  0008'                    ?___wmul:
   317                           	opt callstack 0
   318  0008'                    ___fltol@sign1:
   319                           	opt callstack 0
   320  0008'                    ___wmul@multiplier:
   321                           	opt callstack 0
   322  0008'                    memset@k:
   323                           	opt callstack 0
   324  0008'                    ___aodiv@divisor:
   325                           	opt callstack 0
   326  0008'                    ___aomod@divisor:
   327                           	opt callstack 0
   328                           
   329                           ; 8 bytes @ 0x8
   330  0008'                    	ds	1
   331  0009'                    ___fltol@exp1:
   332                           	opt callstack 0
   333  0009'                    fputs@s:
   334                           	opt callstack 0
   335                           
   336                           ; 2 bytes @ 0x9
   337  0009'                    	ds	1
   338  000A'                    ___wmul@multiplicand:
   339                           	opt callstack 0
   340  000A'                    memset@s:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0xA
   344  000A'                    	ds	1
   345  000B'                    fputs@fp:
   346                           	opt callstack 0
   347                           
   348                           ; 2 bytes @ 0xB
   349  000B'                    	ds	1
   350  000C'                    ___wmul@product:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0xC
   354  000C'                    	ds	1
   355  000D'                    fputs@c:
   356                           	opt callstack 0
   357                           
   358                           ; 1 bytes @ 0xD
   359  000D'                    	ds	1
   360  000E'                    ?___awdiv:
   361                           	opt callstack 0
   362  000E'                    ___awdiv@dividend:
   363                           	opt callstack 0
   364  000E'                    fputs@i:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0xE
   368  000E'                    	ds	2
   369  0010'                    ?_pad:
   370                           	opt callstack 0
   371  0010'                    ___aodiv@counter:
   372                           	opt callstack 0
   373  0010'                    ___aomod@counter:
   374                           	opt callstack 0
   375  0010'                    pad@fp:
   376                           	opt callstack 0
   377  0010'                    ___awdiv@divisor:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x10
   381  0010'                    	ds	1
   382  0011'                    ___aodiv@sign:
   383                           	opt callstack 0
   384  0011'                    ___aomod@sign:
   385                           	opt callstack 0
   386                           
   387                           ; 1 bytes @ 0x11
   388  0011'                    	ds	1
   389  0012'                    ?_abs:
   390                           	opt callstack 0
   391  0012'                    ___awdiv@counter:
   392                           	opt callstack 0
   393  0012'                    pad@buf:
   394                           	opt callstack 0
   395  0012'                    abs@a:
   396                           	opt callstack 0
   397  0012'                    ___aodiv@quotient:
   398                           	opt callstack 0
   399                           
   400                           ; 8 bytes @ 0x12
   401  0012'                    	ds	1
   402  0013'                    ___awdiv@sign:
   403                           	opt callstack 0
   404                           
   405                           ; 1 bytes @ 0x13
   406  0013'                    	ds	1
   407  0014'                    ??_abs:
   408  0014'                    pad@p:
   409                           	opt callstack 0
   410  0014'                    ___awdiv@quotient:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x14
   414  0014'                    	ds	2
   415  0016'                    ??_pad:
   416  0016'                    ?___xxtofl:
   417                           	opt callstack 0
   418  0016'                    ___xxtofl@val:
   419                           	opt callstack 0
   420                           
   421                           ; 4 bytes @ 0x16
   422  0016'                    	ds	1
   423  0017'                    pad@i:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x17
   427  0017'                    	ds	2
   428  0019'                    pad@w:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x19
   432  0019'                    	ds	1
   433  001A'                    ??___xxtofl:
   434                           
   435                           ; 1 bytes @ 0x1A
   436  001A'                    	ds	1
   437  001B'                    ?_ctoa:
   438                           	opt callstack 0
   439  001B'                    ?_dtoa:
   440                           	opt callstack 0
   441  001B'                    ctoa@fp:
   442                           	opt callstack 0
   443  001B'                    dtoa@fp:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0x1B
   447  001B'                    	ds	2
   448  001D'                    ctoa@c:
   449                           	opt callstack 0
   450  001D'                    dtoa@d:
   451                           	opt callstack 0
   452                           
   453                           ; 8 bytes @ 0x1D
   454  001D'                    	ds	1
   455  001E'                    ___xxtofl@sign:
   456                           	opt callstack 0
   457  001E'                    ctoa@w:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x1E
   461  001E'                    	ds	1
   462  001F'                    ___xxtofl@exp:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x1F
   466  001F'                    	ds	1
   467  0020'                    ___xxtofl@arg:
   468                           	opt callstack 0
   469                           
   470                           ; 4 bytes @ 0x20
   471  0020'                    	ds	4
   472  0024'                    ?___flmul:
   473                           	opt callstack 0
   474  0024'                    ___flmul@b:
   475                           	opt callstack 0
   476                           
   477                           ; 4 bytes @ 0x24
   478  0024'                    	ds	1
   479  0025'                    ??_dtoa:
   480                           
   481                           ; 1 bytes @ 0x25
   482  0025'                    	ds	3
   483  0028'                    ___flmul@a:
   484                           	opt callstack 0
   485                           
   486                           ; 4 bytes @ 0x28
   487  0028'                    	ds	4
   488  002C'                    ??___flmul:
   489                           
   490                           ; 1 bytes @ 0x2C
   491  002C'                    	ds	1
   492  002D'                    _dtoa$393:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x2D
   496  002D'                    	ds	2
   497  002F'                    dtoa@p:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x2F
   501  002F'                    	ds	1
   502  0030'                    ___flmul@sign:
   503                           	opt callstack 0
   504                           
   505                           ; 1 bytes @ 0x30
   506  0030'                    	ds	1
   507  0031'                    dtoa@w:
   508                           	opt callstack 0
   509  0031'                    ___flmul@grs:
   510                           	opt callstack 0
   511                           
   512                           ; 4 bytes @ 0x31
   513  0031'                    	ds	2
   514  0033'                    dtoa@s:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x33
   518  0033'                    	ds	2
   519  0035'                    ___flmul@aexp:
   520                           	opt callstack 0
   521  0035'                    dtoa@n:
   522                           	opt callstack 0
   523                           
   524                           ; 8 bytes @ 0x35
   525  0035'                    	ds	1
   526  0036'                    ___flmul@bexp:
   527                           	opt callstack 0
   528                           
   529                           ; 1 bytes @ 0x36
   530  0036'                    	ds	1
   531  0037'                    ___flmul@prod:
   532                           	opt callstack 0
   533                           
   534                           ; 4 bytes @ 0x37
   535  0037'                    	ds	4
   536  003B'                    ___flmul@temp:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x3B
   540  003B'                    	ds	2
   541  003D'                    ?___fldiv:
   542                           	opt callstack 0
   543  003D'                    dtoa@i:
   544                           	opt callstack 0
   545  003D'                    ___fldiv@b:
   546                           	opt callstack 0
   547                           
   548                           ; 4 bytes @ 0x3D
   549  003D'                    	ds	2
   550  003F'                    ?_vfpfcnvrt:
   551                           	opt callstack 0
   552  003F'                    vfpfcnvrt@fp:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x3F
   556  003F'                    	ds	2
   557  0041'                    vfpfcnvrt@fmt:
   558                           	opt callstack 0
   559  0041'                    ___fldiv@a:
   560                           	opt callstack 0
   561                           
   562                           ; 4 bytes @ 0x41
   563  0041'                    	ds	2
   564  0043'                    vfpfcnvrt@ap:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0x43
   568  0043'                    	ds	2
   569  0045'                    ??___fldiv:
   570  0045'                    ??_vfpfcnvrt:
   571                           
   572                           ; 1 bytes @ 0x45
   573  0045'                    	ds	2
   574  0047'                    vfpfcnvrt@ll:
   575                           	opt callstack 0
   576                           
   577                           ; 8 bytes @ 0x47
   578  0047'                    	ds	2
   579  0049'                    ___fldiv@rem:
   580                           	opt callstack 0
   581                           
   582                           ; 4 bytes @ 0x49
   583  0049'                    	ds	4
   584  004D'                    ___fldiv@sign:
   585                           	opt callstack 0
   586                           
   587                           ; 1 bytes @ 0x4D
   588  004D'                    	ds	1
   589  004E'                    ___fldiv@new_exp:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x4E
   593  004E'                    	ds	1
   594  004F'                    vfpfcnvrt@c:
   595                           	opt callstack 0
   596                           
   597                           ; 1 bytes @ 0x4F
   598  004F'                    	ds	1
   599  0050'                    ?_vfprintf:
   600                           	opt callstack 0
   601  0050'                    vfprintf@fp:
   602                           	opt callstack 0
   603  0050'                    ___fldiv@grs:
   604                           	opt callstack 0
   605                           
   606                           ; 4 bytes @ 0x50
   607  0050'                    	ds	2
   608  0052'                    vfprintf@fmt:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x52
   612  0052'                    	ds	2
   613  0054'                    ___fldiv@bexp:
   614                           	opt callstack 0
   615  0054'                    vfprintf@ap:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0x54
   619  0054'                    	ds	1
   620  0055'                    ___fldiv@aexp:
   621                           	opt callstack 0
   622                           
   623                           ; 1 bytes @ 0x55
   624  0055'                    	ds	1
   625  0056'                    vfprintf@cfmt:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x56
   629  0056'                    	ds	2
   630  0058'                    ??_main:
   631                           
   632                           ; 1 bytes @ 0x58
   633  0058'                    	ds	2
   634                           
   635 ;;
   636 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   637 ;;
   638 ;; *************** function _main *****************
   639 ;; Defined at:
   640 ;;		line 19 in file "main.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  Soil           10   28[BANK0 ] unsigned char [10]
   645 ;;  Temperature    10   18[BANK0 ] unsigned char [10]
   646 ;;  temp            4   42[BANK0 ] float 
   647 ;;  soil            4   38[BANK0 ] float 
   648 ;;  Duty_Scale      4    0        float 
   649 ;;  Period          2    0        int 
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   659 ;;      Params:         0       0       0       0       0       0       0       0       0
   660 ;;      Locals:         0      28       0       0       0       0       0       0       0
   661 ;;      Temps:          2       0       0       0       0       0       0       0       0
   662 ;;      Totals:         2      28       0       0       0       0       0       0       0
   663 ;;Total ram usage:       30 bytes
   664 ;; Hardware stack levels required when called:    8
   665 ;; This function calls:
   666 ;;		_ADC_Init
   667 ;;		_ADC_Read
   668 ;;		_LCD_Clear
   669 ;;		_LCD_Init
   670 ;;		_LCD_String_xy
   671 ;;		_PWM_Init
   672 ;;		___awdiv
   673 ;;		___fldiv
   674 ;;		___flge
   675 ;;		___flmul
   676 ;;		___fltol
   677 ;;		___wmul
   678 ;;		___xxtofl
   679 ;;		_memset
   680 ;;		_servoRotate0
   681 ;;		_servoRotate90
   682 ;;		_sprintf
   683 ;; This function is called by:
   684 ;;		Startup code after reset
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text0
   689  0000'                    __ptext0:
   690                           	opt callstack 0
   691  0000'                    _main:
   692                           	opt callstack 23
   693                           
   694                           ;main.c: 21:     char Temperature[10];;main.c: 22:     char Soil[10];;main.c: 23:     fl
      +                          oat temp;;main.c: 24:     float soil;;main.c: 25:     float Duty_Scale;;main.c: 26:     
      +                          int Period;;main.c: 27:     PWM_Init();
   695                           
   696                           ;incstack = 0
   697  0000' EC00' F000'        	call	_PWM_Init	;wreg free
   698                           
   699                           ;main.c: 28:     OSCCON=0x72;
   700  0004' 0E72               	movlw	114
   701  0006' 6ED3               	movwf	4051,c	;volatile
   702                           
   703                           ;main.c: 29:     TRISA = 0x3C;
   704  0008' 0E3C               	movlw	60
   705  000A' 6E92               	movwf	3986,c	;volatile
   706                           
   707                           ;main.c: 30:     ADC_Init();
   708  000C' EC00' F000'        	call	_ADC_Init	;wreg free
   709                           
   710                           ;main.c: 31:     LCD_Init();
   711  0010' EC00' F000'        	call	_LCD_Init	;wreg free
   712                           
   713                           ;main.c: 32:     LCD_Clear();
   714  0014' EC00' F000'        	call	_LCD_Clear	;wreg free
   715                           
   716                           ;main.c: 35:     TRISAbits.RA2 = 0;
   717  0018' 9492               	bcf	3986,2,c	;volatile
   718                           
   719                           ;main.c: 36:     TRISAbits.RA3 = 0;
   720  001A' 9692               	bcf	3986,3,c	;volatile
   721                           
   722                           ;main.c: 37:     TRISAbits.RA4 = 0;
   723  001C' 9892               	bcf	3986,4,c	;volatile
   724                           
   725                           ;main.c: 38:     TRISAbits.RA5 = 0;
   726  001E' 9A92               	bcf	3986,5,c	;volatile
   727  0020'                    l2693:
   728                           
   729                           ;main.c: 40:     {;main.c: 42:         temp = (ADC_Read(0)*4.88)/10.00;
   730  0020' 0EF6               	movlw	246
   731  0022' 6E28'              	movwf	___flmul@a,c
   732  0024' 0E28               	movlw	40
   733  0026' 6E29'              	movwf	___flmul@a+1,c
   734  0028' 0E9C               	movlw	156
   735  002A' 6E2A'              	movwf	___flmul@a+2,c
   736  002C' 0E40               	movlw	64
   737  002E' 6E2B'              	movwf	___flmul@a+3,c
   738  0030' 0E00               	movlw	0
   739  0032' 6E01'              	movwf	ADC_Read@channel+1,c
   740  0034' 0E00               	movlw	0
   741  0036' 6E00'              	movwf	ADC_Read@channel,c
   742  0038' EC00' F000'        	call	_ADC_Read	;wreg free
   743  003C' C000' F016'        	movff	?_ADC_Read,___xxtofl@val
   744  0040' C001' F017'        	movff	?_ADC_Read+1,___xxtofl@val+1
   745  0044' 0E00               	movlw	0
   746  0046' BE17'              	btfsc	___xxtofl@val+1,7,c
   747  0048' 0EFF               	movlw	-1
   748  004A' 6E18'              	movwf	___xxtofl@val+2,c
   749  004C' 6E19'              	movwf	___xxtofl@val+3,c
   750  004E' 0E01               	movlw	1
   751  0050' EC00' F000'        	call	___xxtofl
   752  0054' C016' F024'        	movff	?___xxtofl,___flmul@b
   753  0058' C017' F025'        	movff	?___xxtofl+1,___flmul@b+1
   754  005C' C018' F026'        	movff	?___xxtofl+2,___flmul@b+2
   755  0060' C019' F027'        	movff	?___xxtofl+3,___flmul@b+3
   756  0064' EC00' F000'        	call	___flmul	;wreg free
   757  0068' C024' F03D'        	movff	?___flmul,___fldiv@b
   758  006C' C025' F03E'        	movff	?___flmul+1,___fldiv@b+1
   759  0070' C026' F03F'        	movff	?___flmul+2,___fldiv@b+2
   760  0074' C027' F040'        	movff	?___flmul+3,___fldiv@b+3
   761  0078' 0E00               	movlw	0
   762  007A' 6E41'              	movwf	___fldiv@a,c
   763  007C' 0E00               	movlw	0
   764  007E' 6E42'              	movwf	___fldiv@a+1,c
   765  0080' 0E20               	movlw	32
   766  0082' 6E43'              	movwf	___fldiv@a+2,c
   767  0084' 0E41               	movlw	65
   768  0086' 6E44'              	movwf	___fldiv@a+3,c
   769  0088' EC00' F000'        	call	___fldiv	;wreg free
   770  008C' C03D' F02A'        	movff	?___fldiv,main@temp
   771  0090' C03E' F02B'        	movff	?___fldiv+1,main@temp+1
   772  0094' C03F' F02C'        	movff	?___fldiv+2,main@temp+2
   773  0098' C040' F02D'        	movff	?___fldiv+3,main@temp+3
   774                           
   775                           ;main.c: 43:         soil = (ADC_Read(1)*100/1024);
   776  009C' 0E04               	movlw	4
   777  009E' 6E11'              	movwf	___awdiv@divisor+1,c
   778  00A0' 0E00               	movlw	0
   779  00A2' 6E10'              	movwf	___awdiv@divisor,c
   780  00A4' 0E00               	movlw	0
   781  00A6' 6E01'              	movwf	ADC_Read@channel+1,c
   782  00A8' 0E01               	movlw	1
   783  00AA' 6E00'              	movwf	ADC_Read@channel,c
   784  00AC' EC00' F000'        	call	_ADC_Read	;wreg free
   785  00B0' C000' F008'        	movff	?_ADC_Read,___wmul@multiplier
   786  00B4' C001' F009'        	movff	?_ADC_Read+1,___wmul@multiplier+1
   787  00B8' 0E00               	movlw	0
   788  00BA' 6E0B'              	movwf	___wmul@multiplicand+1,c
   789  00BC' 0E64               	movlw	100
   790  00BE' 6E0A'              	movwf	___wmul@multiplicand,c
   791  00C0' EC00' F000'        	call	___wmul	;wreg free
   792  00C4' C008' F00E'        	movff	?___wmul,___awdiv@dividend
   793  00C8' C009' F00F'        	movff	?___wmul+1,___awdiv@dividend+1
   794  00CC' EC00' F000'        	call	___awdiv	;wreg free
   795  00D0' C00E' F016'        	movff	?___awdiv,___xxtofl@val
   796  00D4' C00F' F017'        	movff	?___awdiv+1,___xxtofl@val+1
   797  00D8' 0E00               	movlw	0
   798  00DA' BE17'              	btfsc	___xxtofl@val+1,7,c
   799  00DC' 0EFF               	movlw	-1
   800  00DE' 6E18'              	movwf	___xxtofl@val+2,c
   801  00E0' 6E19'              	movwf	___xxtofl@val+3,c
   802  00E2' 0E01               	movlw	1
   803  00E4' EC00' F000'        	call	___xxtofl
   804  00E8' C016' F026'        	movff	?___xxtofl,main@soil
   805  00EC' C017' F027'        	movff	?___xxtofl+1,main@soil+1
   806  00F0' C018' F028'        	movff	?___xxtofl+2,main@soil+2
   807  00F4' C019' F029'        	movff	?___xxtofl+3,main@soil+3
   808                           
   809                           ;main.c: 45:         LATAbits.LATA4 = soil < 40 ? 1 : 0;
   810  00F8' C026' F000'        	movff	main@soil,___flge@ff1
   811  00FC' C027' F001'        	movff	main@soil+1,___flge@ff1+1
   812  0100' C028' F002'        	movff	main@soil+2,___flge@ff1+2
   813  0104' C029' F003'        	movff	main@soil+3,___flge@ff1+3
   814  0108' 0E00               	movlw	0
   815  010A' 6E04'              	movwf	___flge@ff2,c
   816  010C' 0E00               	movlw	0
   817  010E' 6E05'              	movwf	___flge@ff2+1,c
   818  0110' 0E20               	movlw	32
   819  0112' 6E06'              	movwf	___flge@ff2+2,c
   820  0114' 0E42               	movlw	66
   821  0116' 6E07'              	movwf	___flge@ff2+3,c
   822  0118' EC00' F000'        	call	___flge	;wreg free
   823  011C' B0D8               	btfsc	status,0,c
   824  011E' D003               	goto	u2740
   825  0120' 6A00'              	clrf	??_main& (0+255),c
   826  0122' 2A00'              	incf	??_main& (0+255),f,c
   827  0124' D001               	goto	u2758
   828  0126'                    u2740:
   829  0126' 6A00'              	clrf	??_main& (0+255),c
   830  0128'                    u2758:
   831  0128' 3A58'              	swapf	??_main,f,c
   832  012A' 5089               	movf	3977,w,c	;volatile
   833  012C' 1858'              	xorwf	??_main,w,c
   834  012E' 0BEF               	andlw	-17
   835  0130' 1858'              	xorwf	??_main,w,c
   836  0132' 6E89               	movwf	3977,c	;volatile
   837                           
   838                           ;main.c: 47:         LATAbits.LATA2 = temp < 25 ? 1 : 0;
   839  0134' C02A' F000'        	movff	main@temp,___flge@ff1
   840  0138' C02B' F001'        	movff	main@temp+1,___flge@ff1+1
   841  013C' C02C' F002'        	movff	main@temp+2,___flge@ff1+2
   842  0140' C02D' F003'        	movff	main@temp+3,___flge@ff1+3
   843  0144' 0E00               	movlw	0
   844  0146' 6E04'              	movwf	___flge@ff2,c
   845  0148' 0E00               	movlw	0
   846  014A' 6E05'              	movwf	___flge@ff2+1,c
   847  014C' 0EC8               	movlw	200
   848  014E' 6E06'              	movwf	___flge@ff2+2,c
   849  0150' 0E41               	movlw	65
   850  0152' 6E07'              	movwf	___flge@ff2+3,c
   851  0154' EC00' F000'        	call	___flge	;wreg free
   852  0158' B0D8               	btfsc	status,0,c
   853  015A' D003               	goto	u2760
   854  015C' 6A00'              	clrf	??_main& (0+255),c
   855  015E' 2A00'              	incf	??_main& (0+255),f,c
   856  0160' D001               	goto	u2778
   857  0162'                    u2760:
   858  0162' 6A00'              	clrf	??_main& (0+255),c
   859  0164'                    u2778:
   860  0164' 4658'              	rlncf	??_main,f,c
   861  0166' 4658'              	rlncf	??_main,f,c
   862  0168' 5089               	movf	3977,w,c	;volatile
   863  016A' 1858'              	xorwf	??_main,w,c
   864  016C' 0BFB               	andlw	-5
   865  016E' 1858'              	xorwf	??_main,w,c
   866  0170' 6E89               	movwf	3977,c	;volatile
   867                           
   868                           ;main.c: 49:         temp < 35 ? servoRotate0() : servoRotate90();
   869  0172' C02A' F000'        	movff	main@temp,___flge@ff1
   870  0176' C02B' F001'        	movff	main@temp+1,___flge@ff1+1
   871  017A' C02C' F002'        	movff	main@temp+2,___flge@ff1+2
   872  017E' C02D' F003'        	movff	main@temp+3,___flge@ff1+3
   873  0182' 0E00               	movlw	0
   874  0184' 6E04'              	movwf	___flge@ff2,c
   875  0186' 0E00               	movlw	0
   876  0188' 6E05'              	movwf	___flge@ff2+1,c
   877  018A' 0E0C               	movlw	12
   878  018C' 6E06'              	movwf	___flge@ff2+2,c
   879  018E' 0E42               	movlw	66
   880  0190' 6E07'              	movwf	___flge@ff2+3,c
   881  0192' EC00' F000'        	call	___flge	;wreg free
   882  0196' B0D8               	btfsc	status,0,c
   883  0198' D003               	goto	l2705
   884  019A' EC00' F000'        	call	_servoRotate0	;wreg free
   885  019E' D002               	goto	l2707
   886  01A0'                    l2705:
   887  01A0' EC00' F000'        	call	_servoRotate90	;wreg free
   888  01A4'                    l2707:
   889                           
   890                           ;main.c: 51:         sprintf(Temperature, "%d%cC", (int)temp,0xdf);
   891  01A4' 0E00'              	movlw	low main@Temperature
   892  01A6' 0100               	movlb	0	; () banked
   893  01A8' 6F00'              	movwf	sprintf@s& (0+255),b
   894  01AA' 0E00'              	movlw	high main@Temperature
   895  01AC' 6F00'              	movwf	(sprintf@s+1)& (0+255),b
   896  01AE' 0E00'              	movlw	low STR_1
   897  01B0' 6F00'              	movwf	sprintf@fmt& (0+255),b
   898  01B2' 0E00'              	movlw	high STR_1
   899  01B4' 6F00'              	movwf	(sprintf@fmt+1)& (0+255),b
   900  01B6' C02A' F000'        	movff	main@temp,___fltol@f1
   901  01BA' C02B' F001'        	movff	main@temp+1,___fltol@f1+1
   902  01BE' C02C' F002'        	movff	main@temp+2,___fltol@f1+2
   903  01C2' C02D' F003'        	movff	main@temp+3,___fltol@f1+3
   904  01C6' EC00' F000'        	call	___fltol	;wreg free
   905  01CA' C000' F004'        	movff	?___fltol,?_sprintf+4
   906  01CE' C001' F005'        	movff	?___fltol+1,?_sprintf+5
   907  01D2' 0E00               	movlw	0
   908  01D4' 0100               	movlb	0	; () banked
   909  01D6' 6F00'              	movwf	(?_sprintf+7)& (0+255),b
   910  01D8' 0EDF               	movlw	223
   911  01DA' 6F00'              	movwf	(?_sprintf+6)& (0+255),b
   912  01DC' EC00' F000'        	call	_sprintf	;wreg free
   913                           
   914                           ;main.c: 52:         sprintf(Soil, "%d%%", (int)soil,0xdf);
   915  01E0' 0E00'              	movlw	low main@Soil
   916  01E2' 0100               	movlb	0	; () banked
   917  01E4' 6F00'              	movwf	sprintf@s& (0+255),b
   918  01E6' 0E00'              	movlw	high main@Soil
   919  01E8' 6F00'              	movwf	(sprintf@s+1)& (0+255),b
   920  01EA' 0E00'              	movlw	low STR_2
   921  01EC' 6F00'              	movwf	sprintf@fmt& (0+255),b
   922  01EE' 0E00'              	movlw	high STR_2
   923  01F0' 6F00'              	movwf	(sprintf@fmt+1)& (0+255),b
   924  01F2' C026' F000'        	movff	main@soil,___fltol@f1
   925  01F6' C027' F001'        	movff	main@soil+1,___fltol@f1+1
   926  01FA' C028' F002'        	movff	main@soil+2,___fltol@f1+2
   927  01FE' C029' F003'        	movff	main@soil+3,___fltol@f1+3
   928  0202' EC00' F000'        	call	___fltol	;wreg free
   929  0206' C000' F004'        	movff	?___fltol,?_sprintf+4
   930  020A' C001' F005'        	movff	?___fltol+1,?_sprintf+5
   931  020E' 0E00               	movlw	0
   932  0210' 0100               	movlb	0	; () banked
   933  0212' 6F00'              	movwf	(?_sprintf+7)& (0+255),b
   934  0214' 0EDF               	movlw	223
   935  0216' 6F00'              	movwf	(?_sprintf+6)& (0+255),b
   936  0218' EC00' F000'        	call	_sprintf	;wreg free
   937                           
   938                           ;main.c: 54:         LCD_String_xy(1,0,"T: ");
   939  021C' 0E00               	movlw	0
   940  021E' 6E03'              	movwf	LCD_String_xy@pos,c
   941  0220' 0E00'              	movlw	low STR_3
   942  0222' 6E04'              	movwf	LCD_String_xy@msg,c
   943  0224' 0E00'              	movlw	high STR_3
   944  0226' 6E05'              	movwf	LCD_String_xy@msg+1,c
   945  0228' 0E01               	movlw	1
   946  022A' EC00' F000'        	call	_LCD_String_xy
   947                           
   948                           ;main.c: 55:         LCD_String_xy(1,4, Temperature);
   949  022E' 0E04               	movlw	4
   950  0230' 6E03'              	movwf	LCD_String_xy@pos,c
   951  0232' 0E00'              	movlw	low main@Temperature
   952  0234' 6E04'              	movwf	LCD_String_xy@msg,c
   953  0236' 0E00'              	movlw	high main@Temperature
   954  0238' 6E05'              	movwf	LCD_String_xy@msg+1,c
   955  023A' 0E01               	movlw	1
   956  023C' EC00' F000'        	call	_LCD_String_xy
   957                           
   958                           ;main.c: 56:         LCD_String_xy(2,0,"H: ");
   959  0240' 0E00               	movlw	0
   960  0242' 6E03'              	movwf	LCD_String_xy@pos,c
   961  0244' 0E00'              	movlw	low STR_4
   962  0246' 6E04'              	movwf	LCD_String_xy@msg,c
   963  0248' 0E00'              	movlw	high STR_4
   964  024A' 6E05'              	movwf	LCD_String_xy@msg+1,c
   965  024C' 0E02               	movlw	2
   966  024E' EC00' F000'        	call	_LCD_String_xy
   967                           
   968                           ;main.c: 57:         LCD_String_xy(2,4, Soil);
   969  0252' 0E04               	movlw	4
   970  0254' 6E03'              	movwf	LCD_String_xy@pos,c
   971  0256' 0E00'              	movlw	low main@Soil
   972  0258' 6E04'              	movwf	LCD_String_xy@msg,c
   973  025A' 0E00'              	movlw	high main@Soil
   974  025C' 6E05'              	movwf	LCD_String_xy@msg+1,c
   975  025E' 0E02               	movlw	2
   976  0260' EC00' F000'        	call	_LCD_String_xy
   977                           
   978                           ;main.c: 59:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   979  0264' 0E06               	movlw	6
   980  0266' 6E00'              	movwf	(??_main+1)& (0+255),c
   981  0268' 0E13               	movlw	19
   982  026A' 6E00'              	movwf	??_main& (0+255),c
   983  026C' 0EAE               	movlw	174
   984  026E'                    u2797:
   985  026E' 2EE8               	decfsz	wreg,f,c
   986  0270' D7FE               	bra	u2797
   987  0272' 2E00'              	decfsz	??_main& (0+255),f,c
   988  0274' D7FC               	bra	u2797
   989  0276' 2E00'              	decfsz	(??_main+1)& (0+255),f,c
   990  0278' D7FA               	bra	u2797
   991                           
   992                           ;main.c: 61:         memset(Temperature,0,10);
   993  027A' 0E00'              	movlw	low main@Temperature
   994  027C' 6E00'              	movwf	memset@dest,c
   995  027E' 0E00'              	movlw	high main@Temperature
   996  0280' 6E01'              	movwf	memset@dest+1,c
   997  0282' 0E00               	movlw	0
   998  0284' 6E03'              	movwf	memset@c+1,c
   999  0286' 0E00               	movlw	0
  1000  0288' 6E02'              	movwf	memset@c,c
  1001  028A' 0E00               	movlw	0
  1002  028C' 6E05'              	movwf	memset@n+1,c
  1003  028E' 0E0A               	movlw	10
  1004  0290' 6E04'              	movwf	memset@n,c
  1005  0292' EC00' F000'        	call	_memset	;wreg free
  1006                           
  1007                           ;main.c: 62:         memset(Soil,0,10);
  1008  0296' 0E00'              	movlw	low main@Soil
  1009  0298' 6E00'              	movwf	memset@dest,c
  1010  029A' 0E00'              	movlw	high main@Soil
  1011  029C' 6E01'              	movwf	memset@dest+1,c
  1012  029E' 0E00               	movlw	0
  1013  02A0' 6E03'              	movwf	memset@c+1,c
  1014  02A2' 0E00               	movlw	0
  1015  02A4' 6E02'              	movwf	memset@c,c
  1016  02A6' 0E00               	movlw	0
  1017  02A8' 6E05'              	movwf	memset@n+1,c
  1018  02AA' 0E0A               	movlw	10
  1019  02AC' 6E04'              	movwf	memset@n,c
  1020  02AE' EC00' F000'        	call	_memset	;wreg free
  1021                           
  1022                           ;main.c: 63:         LCD_Clear();
  1023  02B2' EC00' F000'        	call	_LCD_Clear	;wreg free
  1024  02B6' D6B4               	goto	l2693
  1025  02B8'                    __end_of_main:
  1026                           	opt callstack 0
  1027                           
  1028 ;; *************** function _sprintf *****************
  1029 ;; Defined at:
  1030 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1033 ;;		 -> main@Soil(10), main@Temperature(10), 
  1034 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1035 ;;		 -> STR_2(5), STR_1(6), 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  f               6   12[BANK0 ] struct _IO_FILE
  1038 ;;  ap              2   10[BANK0 ] PTR void [1]
  1039 ;;		 -> ?_sprintf(2), 
  1040 ;;  ret             2    0        int 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  2    0[BANK0 ] int 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1050 ;;      Params:         0       8       0       0       0       0       0       0       0
  1051 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1053 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1054 ;;Total ram usage:       18 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    7
  1057 ;; This function calls:
  1058 ;;		_vfprintf
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text1
  1065  0000'                    __ptext1:
  1066                           	opt callstack 0
  1067  0000'                    _sprintf:
  1068                           	opt callstack 23
  1069                           
  1070                           ;incstack = 0
  1071  0000' 0E00'              	movlw	low (?_sprintf+4)
  1072  0002' 0100               	movlb	0	; () banked
  1073  0004' 6F00'              	movwf	sprintf@ap& (0+255),b
  1074  0006' 0E00'              	movlw	high (?_sprintf+4)
  1075  0008' 6F00'              	movwf	(sprintf@ap+1)& (0+255),b
  1076  000A' C000' F00C'        	movff	sprintf@s,sprintf@f
  1077  000E' C001' F00D'        	movff	sprintf@s+1,sprintf@f+1
  1078                           
  1079                           ; BSR set to: 0
  1080  0012' 0E00               	movlw	0
  1081  0014' 6F00'              	movwf	(sprintf@f+3)& (0+255),b
  1082  0016' 0E00               	movlw	0
  1083  0018' 6F00'              	movwf	(sprintf@f+2)& (0+255),b
  1084                           
  1085                           ; BSR set to: 0
  1086  001A' 0E00               	movlw	0
  1087  001C' 6F00'              	movwf	(sprintf@f+5)& (0+255),b
  1088  001E' 0E00               	movlw	0
  1089  0020' 6F00'              	movwf	(sprintf@f+4)& (0+255),b
  1090                           
  1091                           ; BSR set to: 0
  1092  0022' 0E00'              	movlw	low sprintf@f
  1093  0024' 6E50'              	movwf	vfprintf@fp,c
  1094  0026' 0E00'              	movlw	high sprintf@f
  1095  0028' 6E51'              	movwf	vfprintf@fp+1,c
  1096  002A' C002' F052'        	movff	sprintf@fmt,vfprintf@fmt
  1097  002E' C003' F053'        	movff	sprintf@fmt+1,vfprintf@fmt+1
  1098  0032' 0E00'              	movlw	low sprintf@ap
  1099  0034' 6E54'              	movwf	vfprintf@ap,c
  1100  0036' 0E00'              	movlw	high sprintf@ap
  1101  0038' 6E55'              	movwf	vfprintf@ap+1,c
  1102  003A' EC00' F000'        	call	_vfprintf	;wreg free
  1103  003E' 0100               	movlb	0	; () banked
  1104  0040' 5100'              	movf	(sprintf@f+2)& (0+255),w,b
  1105  0042' 2500'              	addwf	sprintf@s& (0+255),w,b
  1106  0044' 6ED9               	movwf	fsr2l,c
  1107  0046' 5100'              	movf	(sprintf@f+3)& (0+255),w,b
  1108  0048' 2100'              	addwfc	(sprintf@s+1)& (0+255),w,b
  1109  004A' 6EDA               	movwf	fsr2h,c
  1110  004C' 0E00               	movlw	0
  1111  004E' 6EDF               	movwf	indf2,c
  1112                           
  1113                           ; BSR set to: 0
  1114  0050' 0012               	return		;funcret
  1115  0052'                    __end_of_sprintf:
  1116                           	opt callstack 0
  1117                           
  1118 ;; *************** function _vfprintf *****************
  1119 ;; Defined at:
  1120 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1123 ;;		 -> sprintf@f(6), 
  1124 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1125 ;;		 -> STR_2(5), STR_1(6), 
  1126 ;;  ap              2   84[COMRAM] PTR PTR void 
  1127 ;;		 -> sprintf@ap(2), 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1130 ;;		 -> STR_2(5), STR_1(6), 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2   80[COMRAM] int 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1140 ;;      Params:         6       0       0       0       0       0       0       0       0
  1141 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1143 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1144 ;;Total ram usage:        8 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    6
  1147 ;; This function calls:
  1148 ;;		_vfpfcnvrt
  1149 ;; This function is called by:
  1150 ;;		_sprintf
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text2
  1155  0000'                    __ptext2:
  1156                           	opt callstack 0
  1157  0000'                    _vfprintf:
  1158                           	opt callstack 23
  1159                           
  1160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;incstack = 0
  1164  0000' C052' F056'        	movff	vfprintf@fmt,vfprintf@cfmt
  1165  0004' C053' F057'        	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1166                           
  1167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1168  0008' 0E00               	movlw	0
  1169  000A' 0100               	movlb	0	; () banked
  1170  000C' 6F00'              	movwf	(_nout+1)& (0+255),b
  1171  000E' 0E00               	movlw	0
  1172  0010' 6F00'              	movwf	_nout& (0+255),b
  1173                           
  1174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1175  0012' D013               	goto	l2131
  1176  0014'                    l2129:
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1180  0014' C050' F03F'        	movff	vfprintf@fp,vfpfcnvrt@fp
  1181  0018' C051' F040'        	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1182  001C' 0E00'              	movlw	low vfprintf@cfmt
  1183  001E' 6E41'              	movwf	vfpfcnvrt@fmt,c
  1184  0020' 0E00'              	movlw	high vfprintf@cfmt
  1185  0022' 6E42'              	movwf	vfpfcnvrt@fmt+1,c
  1186  0024' C054' F043'        	movff	vfprintf@ap,vfpfcnvrt@ap
  1187  0028' C055' F044'        	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1188  002C' EC00' F000'        	call	_vfpfcnvrt	;wreg free
  1189  0030' 503F'              	movf	?_vfpfcnvrt,w,c
  1190  0032' 0100               	movlb	0	; () banked
  1191  0034' 2700'              	addwf	_nout& (0+255),f,b
  1192  0036' 5040'              	movf	?_vfpfcnvrt+1,w,c
  1193  0038' 2300'              	addwfc	(_nout+1)& (0+255),f,b
  1194  003A'                    l2131:
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1198  003A' C056' FFF6         	movff	vfprintf@cfmt,tblptrl
  1199  003E' C057' FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1200  0042'                    	if	0	;tblptru may be non-zero
  1201  0042'                    	endif
  1202  0042'                    	if	0	;tblptru may be non-zero
  1203  0042'                    	endif
  1204  0042' 0008               	tblrd		*
  1205  0044' 50F5               	movf	tablat,w,c
  1206  0046' 0900               	iorlw	0
  1207  0048' A4D8               	btfss	status,2,c
  1208  004A' D7E4               	goto	l2129
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1212  004C' C000' F050'        	movff	_nout,?_vfprintf
  1213  0050' C001' F051'        	movff	_nout+1,?_vfprintf+1
  1214                           
  1215                           ; BSR set to: 0
  1216  0054' 0012               	return		;funcret
  1217  0056'                    __end_of_vfprintf:
  1218                           	opt callstack 0
  1219                           
  1220 ;; *************** function _vfpfcnvrt *****************
  1221 ;; Defined at:
  1222 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1225 ;;		 -> sprintf@f(6), 
  1226 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1227 ;;		 -> vfprintf@cfmt(2), 
  1228 ;;  ap              2   67[COMRAM] PTR PTR void 
  1229 ;;		 -> sprintf@ap(2), 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  ll              8   71[COMRAM] long long 
  1232 ;;  llu             8    0        unsigned long long 
  1233 ;;  f               4    0        unsigned long long 
  1234 ;;  vp              3    0        PTR void 
  1235 ;;  ct              3    0        unsigned char [3]
  1236 ;;  cp              3    0        PTR unsigned char 
  1237 ;;  i               2    0        int 
  1238 ;;  done            2    0        int 
  1239 ;;  c               1   79[COMRAM] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  2   63[COMRAM] int 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1249 ;;      Params:         6       0       0       0       0       0       0       0       0
  1250 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1251 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1252 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1253 ;;Total ram usage:       17 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    5
  1256 ;; This function calls:
  1257 ;;		_ctoa
  1258 ;;		_dtoa
  1259 ;;		_fputc
  1260 ;; This function is called by:
  1261 ;;		_vfprintf
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text3
  1266  0000'                    __ptext3:
  1267                           	opt callstack 0
  1268  0000'                    _vfpfcnvrt:
  1269                           	opt callstack 23
  1270                           
  1271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;incstack = 0
  1275  0000' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1276  0004' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1277  0008' CFDE FFF6          	movff	postinc2,tblptrl
  1278  000C' CFDD FFF7          	movff	postdec2,tblptrh
  1279  0010'                    	if	0	;tblptru may be non-zero
  1280  0010'                    	endif
  1281  0010'                    	if	0	;tblptru may be non-zero
  1282  0010'                    	endif
  1283  0010' 0008               	tblrd		*
  1284  0012' 50F5               	movf	tablat,w,c
  1285  0014' 0A25               	xorlw	37
  1286  0016' A4D8               	btfss	status,2,c
  1287  0018' D0CD               	goto	l2097
  1288                           
  1289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1290  001A' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1291  001E' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1292  0022' 2ADE               	incf	postinc2,f,c
  1293  0024' 0E00               	movlw	0
  1294  0026' 22DD               	addwfc	postdec2,f,c
  1295                           
  1296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1297  0028' 0E00               	movlw	0
  1298  002A' 6E01'              	movwf	_width+1,c
  1299  002C' 0E00               	movlw	0
  1300  002E' 6E00'              	movwf	_width,c
  1301  0030' C000' F002'        	movff	_width,_flags
  1302  0034' C001' F003'        	movff	_width+1,_flags+1
  1303                           
  1304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1305  0038' 0100               	movlb	0	; () banked
  1306  003A' 6900'              	setf	_prec& (0+255),b
  1307  003C' 6900'              	setf	(_prec+1)& (0+255),b
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  1311  003E' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1312  0042' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1313  0046' CFDE FFF6          	movff	postinc2,tblptrl
  1314  004A' CFDD FFF7          	movff	postdec2,tblptrh
  1315  004E'                    	if	0	;tblptru may be non-zero
  1316  004E'                    	endif
  1317  004E'                    	if	0	;tblptru may be non-zero
  1318  004E'                    	endif
  1319  004E' 0008               	tblrd		*
  1320  0050' 50F5               	movf	tablat,w,c
  1321  0052' 0A63               	xorlw	99
  1322  0054' A4D8               	btfss	status,2,c
  1323  0056' D026               	goto	l2071
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  1327  0058' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1328  005C' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1329  0060' 2ADE               	incf	postinc2,f,c
  1330  0062' 0E00               	movlw	0
  1331  0064' 22DD               	addwfc	postdec2,f,c
  1332                           
  1333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1334  0066' C043' FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1335  006A' C044' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1336  006E' CFDF F045'         	movff	indf2,??_vfpfcnvrt
  1337  0072' 0E02               	movlw	2
  1338  0074' 26DE               	addwf	postinc2,f,c
  1339  0076' CFDF F046'         	movff	indf2,??_vfpfcnvrt+1
  1340  007A' 0E00               	movlw	0
  1341  007C' 22DD               	addwfc	postdec2,f,c
  1342  007E' C045' FFD9         	movff	??_vfpfcnvrt,fsr2l
  1343  0082' C046' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1344  0086' 50DF               	movf	indf2,w,c
  1345  0088' 6E4F'              	movwf	vfpfcnvrt@c,c
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  1349  008A' C03F' F01B'        	movff	vfpfcnvrt@fp,ctoa@fp
  1350  008E' C040' F01C'        	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1351  0092' C04F' F01D'        	movff	vfpfcnvrt@c,ctoa@c
  1352  0096' EC00' F000'        	call	_ctoa	;wreg free
  1353  009A' C01B' F03F'        	movff	?_ctoa,?_vfpfcnvrt
  1354  009E' C01C' F040'        	movff	?_ctoa+1,?_vfpfcnvrt+1
  1355  00A2' 0012               	return	
  1356  00A4'                    l2071:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1360  00A4' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1361  00A8' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1362  00AC' CFDE FFF6          	movff	postinc2,tblptrl
  1363  00B0' CFDD FFF7          	movff	postdec2,tblptrh
  1364  00B4'                    	if	0	;tblptru may be non-zero
  1365  00B4'                    	endif
  1366  00B4'                    	if	0	;tblptru may be non-zero
  1367  00B4'                    	endif
  1368  00B4' 0008               	tblrd		*
  1369  00B6' 50F5               	movf	tablat,w,c
  1370  00B8' 0A64               	xorlw	100
  1371  00BA' B4D8               	btfsc	status,2,c
  1372  00BC' D00D               	goto	u1830
  1373                           
  1374                           ; BSR set to: 0
  1375  00BE' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1376  00C2' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1377  00C6' CFDE FFF6          	movff	postinc2,tblptrl
  1378  00CA' CFDD FFF7          	movff	postdec2,tblptrh
  1379  00CE'                    	if	0	;tblptru may be non-zero
  1380  00CE'                    	endif
  1381  00CE'                    	if	0	;tblptru may be non-zero
  1382  00CE'                    	endif
  1383  00CE' 0008               	tblrd		*
  1384  00D0' 50F5               	movf	tablat,w,c
  1385  00D2' 0A69               	xorlw	105
  1386  00D4' A4D8               	btfss	status,2,c
  1387  00D6' D03F               	goto	l2081
  1388  00D8'                    u1830:
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1392  00D8' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1393  00DC' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1394  00E0' 2ADE               	incf	postinc2,f,c
  1395  00E2' 0E00               	movlw	0
  1396  00E4' 22DD               	addwfc	postdec2,f,c
  1397                           
  1398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1399  00E6' C043' FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1400  00EA' C044' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1401  00EE' CFDF F045'         	movff	indf2,??_vfpfcnvrt
  1402  00F2' 0E02               	movlw	2
  1403  00F4' 26DE               	addwf	postinc2,f,c
  1404  00F6' CFDF F046'         	movff	indf2,??_vfpfcnvrt+1
  1405  00FA' 0E00               	movlw	0
  1406  00FC' 22DD               	addwfc	postdec2,f,c
  1407  00FE' C045' FFD9         	movff	??_vfpfcnvrt,fsr2l
  1408  0102' C046' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1409  0106' CFDE F047'         	movff	postinc2,vfpfcnvrt@ll
  1410  010A' CFDD F048'         	movff	postdec2,vfpfcnvrt@ll+1
  1411  010E' 0E00               	movlw	0
  1412  0110' BE48'              	btfsc	vfpfcnvrt@ll+1,7,c
  1413  0112' 0EFF               	movlw	-1
  1414  0114' 6E49'              	movwf	vfpfcnvrt@ll+2,c
  1415  0116' 6E4A'              	movwf	vfpfcnvrt@ll+3,c
  1416  0118' 6E4B'              	movwf	vfpfcnvrt@ll+4,c
  1417  011A' 6E4C'              	movwf	vfpfcnvrt@ll+5,c
  1418  011C' 6E4D'              	movwf	vfpfcnvrt@ll+6,c
  1419  011E' 6E4E'              	movwf	vfpfcnvrt@ll+7,c
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1423  0120' C03F' F01B'        	movff	vfpfcnvrt@fp,dtoa@fp
  1424  0124' C040' F01C'        	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1425  0128' C047' F01D'        	movff	vfpfcnvrt@ll,dtoa@d
  1426  012C' C048' F01E'        	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1427  0130' C049' F01F'        	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1428  0134' C04A' F020'        	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1429  0138' C04B' F021'        	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1430  013C' C04C' F022'        	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1431  0140' C04D' F023'        	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1432  0144' C04E' F024'        	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1433  0148' EC00' F000'        	call	_dtoa	;wreg free
  1434  014C' C01B' F03F'        	movff	?_dtoa,?_vfpfcnvrt
  1435  0150' C01C' F040'        	movff	?_dtoa+1,?_vfpfcnvrt+1
  1436  0154' 0012               	return	
  1437  0156'                    l2081:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1441  0156' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1442  015A' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1443  015E' CFDE FFF6          	movff	postinc2,tblptrl
  1444  0162' CFDD FFF7          	movff	postdec2,tblptrh
  1445  0166'                    	if	0	;tblptru may be non-zero
  1446  0166'                    	endif
  1447  0166'                    	if	0	;tblptru may be non-zero
  1448  0166'                    	endif
  1449  0166' 0008               	tblrd		*
  1450  0168' 50F5               	movf	tablat,w,c
  1451  016A' 0A25               	xorlw	37
  1452  016C' A4D8               	btfss	status,2,c
  1453  016E' D016               	goto	l2091
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1457  0170' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1458  0174' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1459  0178' 2ADE               	incf	postinc2,f,c
  1460  017A' 0E00               	movlw	0
  1461  017C' 22DD               	addwfc	postdec2,f,c
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1465  017E' 0E00               	movlw	0
  1466  0180' 6E01'              	movwf	fputc@c+1,c
  1467  0182' 0E25               	movlw	37
  1468  0184' 6E00'              	movwf	fputc@c,c
  1469  0186' C03F' F002'        	movff	vfpfcnvrt@fp,fputc@fp
  1470  018A' C040' F003'        	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1471  018E' EC00' F000'        	call	_fputc	;wreg free
  1472  0192'                    l2087:
  1473                           
  1474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1475  0192' 0E00               	movlw	0
  1476  0194' 6E40'              	movwf	?_vfpfcnvrt+1,c
  1477  0196' 0E01               	movlw	1
  1478  0198' 6E3F'              	movwf	?_vfpfcnvrt,c
  1479  019A' 0012               	return	
  1480  019C'                    l2091:
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1484  019C' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1485  01A0' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1486  01A4' 2ADE               	incf	postinc2,f,c
  1487  01A6' 0E00               	movlw	0
  1488  01A8' 22DD               	addwfc	postdec2,f,c
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1492  01AA' 0E00               	movlw	0
  1493  01AC' 6E40'              	movwf	?_vfpfcnvrt+1,c
  1494  01AE' 0E00               	movlw	0
  1495  01B0' 6E3F'              	movwf	?_vfpfcnvrt,c
  1496  01B2' 0012               	return	
  1497  01B4'                    l2097:
  1498                           
  1499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1500  01B4' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1501  01B8' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1502  01BC' CFDE FFF6          	movff	postinc2,tblptrl
  1503  01C0' CFDD FFF7          	movff	postdec2,tblptrh
  1504  01C4'                    	if	0	;tblptru may be non-zero
  1505  01C4'                    	endif
  1506  01C4'                    	if	0	;tblptru may be non-zero
  1507  01C4'                    	endif
  1508  01C4' 0008               	tblrd		*
  1509  01C6' 50F5               	movf	tablat,w,c
  1510  01C8' 6E00'              	movwf	fputc@c,c
  1511  01CA' 6A01'              	clrf	fputc@c+1,c
  1512  01CC' C03F' F002'        	movff	vfpfcnvrt@fp,fputc@fp
  1513  01D0' C040' F003'        	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1514  01D4' EC00' F000'        	call	_fputc	;wreg free
  1515                           
  1516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1517  01D8' C041' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1518  01DC' C042' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1519  01E0' 2ADE               	incf	postinc2,f,c
  1520  01E2' 0E00               	movlw	0
  1521  01E4' 22DD               	addwfc	postdec2,f,c
  1522  01E6' D7D5               	goto	l2087
  1523  01E8'                    __end_of_vfpfcnvrt:
  1524                           	opt callstack 0
  1525                           
  1526 ;; *************** function _dtoa *****************
  1527 ;; Defined at:
  1528 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1531 ;;		 -> sprintf@f(6), 
  1532 ;;  d               8   29[COMRAM] long long 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  n               8   53[COMRAM] long long 
  1535 ;;  i               2   61[COMRAM] int 
  1536 ;;  s               2   51[COMRAM] int 
  1537 ;;  w               2   49[COMRAM] int 
  1538 ;;  p               2   47[COMRAM] int 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  2   27[COMRAM] int 
  1541 ;; Registers used:
  1542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1548 ;;      Params:        10       0       0       0       0       0       0       0       0
  1549 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1550 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1551 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1552 ;;Total ram usage:       36 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    4
  1555 ;; This function calls:
  1556 ;;		___aodiv
  1557 ;;		___aomod
  1558 ;;		_abs
  1559 ;;		_pad
  1560 ;; This function is called by:
  1561 ;;		_vfpfcnvrt
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text4
  1566  0000'                    __ptext4:
  1567                           	opt callstack 0
  1568  0000'                    _dtoa:
  1569                           	opt callstack 23
  1570                           
  1571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1572                           
  1573                           ;incstack = 0
  1574  0000' C01D' F035'        	movff	dtoa@d,dtoa@n
  1575  0004' C01E' F036'        	movff	dtoa@d+1,dtoa@n+1
  1576  0008' C01F' F037'        	movff	dtoa@d+2,dtoa@n+2
  1577  000C' C020' F038'        	movff	dtoa@d+3,dtoa@n+3
  1578  0010' C021' F039'        	movff	dtoa@d+4,dtoa@n+4
  1579  0014' C022' F03A'        	movff	dtoa@d+5,dtoa@n+5
  1580  0018' C023' F03B'        	movff	dtoa@d+6,dtoa@n+6
  1581  001C' C024' F03C'        	movff	dtoa@d+7,dtoa@n+7
  1582                           
  1583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1584  0020' AE3C'              	btfss	dtoa@n+7,7,c
  1585  0022' D002               	goto	u1650
  1586  0024' 0E01               	movlw	1
  1587  0026' D001               	goto	u1660
  1588  0028'                    u1650:
  1589  0028' 0E00               	movlw	0
  1590  002A'                    u1660:
  1591  002A' 6E33'              	movwf	dtoa@s,c
  1592  002C' 6A34'              	clrf	dtoa@s+1,c
  1593                           
  1594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1595  002E' 5033'              	movf	dtoa@s,w,c
  1596  0030' 1034'              	iorwf	dtoa@s+1,w,c
  1597  0032' B4D8               	btfsc	status,2,c
  1598  0034' D010               	goto	l1987
  1599                           
  1600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1601  0036' 1E3C'              	comf	dtoa@n+7,f,c
  1602  0038' 1E3B'              	comf	dtoa@n+6,f,c
  1603  003A' 1E3A'              	comf	dtoa@n+5,f,c
  1604  003C' 1E39'              	comf	dtoa@n+4,f,c
  1605  003E' 1E38'              	comf	dtoa@n+3,f,c
  1606  0040' 1E37'              	comf	dtoa@n+2,f,c
  1607  0042' 1E36'              	comf	dtoa@n+1,f,c
  1608  0044' 6C35'              	negf	dtoa@n,c
  1609  0046' 0E00               	movlw	0
  1610  0048' 2236'              	addwfc	dtoa@n+1,f,c
  1611  004A' 2237'              	addwfc	dtoa@n+2,f,c
  1612  004C' 2238'              	addwfc	dtoa@n+3,f,c
  1613  004E' 2239'              	addwfc	dtoa@n+4,f,c
  1614  0050' 223A'              	addwfc	dtoa@n+5,f,c
  1615  0052' 223B'              	addwfc	dtoa@n+6,f,c
  1616  0054' 223C'              	addwfc	dtoa@n+7,f,c
  1617  0056'                    l1987:
  1618                           
  1619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1620  0056' 0100               	movlb	0	; () banked
  1621  0058' AF00'              	btfss	(_prec+1)& (0+255),7,b
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1625  005A' 9202'              	bcf	_flags,1,c
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1629  005C' BF00'              	btfsc	(_prec+1)& (0+255),7,b
  1630  005E' D005               	goto	u1690
  1631  0060' 5100'              	movf	(_prec+1)& (0+255),w,b
  1632  0062' E108               	bnz	l167
  1633  0064' 0500'              	decf	_prec& (0+255),w,b
  1634  0066' B0D8               	btfsc	status,0,c
  1635  0068' D005               	goto	l167
  1636  006A'                    u1690:
  1637                           
  1638                           ; BSR set to: 0
  1639  006A' 0E00               	movlw	0
  1640  006C' 6E30'              	movwf	dtoa@p+1,c
  1641  006E' 0E01               	movlw	1
  1642  0070' 6E2F'              	movwf	dtoa@p,c
  1643  0072' D004               	goto	l169
  1644  0074'                    l167:
  1645                           
  1646                           ; BSR set to: 0
  1647  0074' C002' F02F'        	movff	_prec,dtoa@p
  1648  0078' C003' F030'        	movff	_prec+1,dtoa@p+1
  1649  007C'                    l169:
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1653  007C' C000' F031'        	movff	_width,dtoa@w
  1654  0080' C001' F032'        	movff	_width+1,dtoa@w+1
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1658  0084' 5033'              	movf	dtoa@s,w,c
  1659  0086' 1034'              	iorwf	dtoa@s+1,w,c
  1660  0088' A4D8               	btfss	status,2,c
  1661  008A' D002               	goto	u1710
  1662                           
  1663                           ; BSR set to: 0
  1664  008C' A402'              	btfss	_flags,2,c
  1665  008E' D003               	goto	l2001
  1666  0090'                    u1710:
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1670  0090' 0631'              	decf	dtoa@w,f,c
  1671  0092' A0D8               	btfss	status,0,c
  1672  0094' 0632'              	decf	dtoa@w+1,f,c
  1673  0096'                    l2001:
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1677  0096' 0E00               	movlw	0
  1678  0098' 6E3E'              	movwf	dtoa@i+1,c
  1679  009A' 0E1F               	movlw	31
  1680  009C' 6E3D'              	movwf	dtoa@i,c
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1684  009E' 0E00               	movlw	0
  1685  00A0' 6F00'              	movwf	(_dbuf+31)& (0+255),b
  1686                           
  1687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1688  00A2' D07C               	goto	l2015
  1689  00A4'                    l2005:
  1690                           
  1691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1692  00A4' 063D'              	decf	dtoa@i,f,c
  1693  00A6' A0D8               	btfss	status,0,c
  1694  00A8' 063E'              	decf	dtoa@i+1,f,c
  1695                           
  1696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1697  00AA' 0E00'              	movlw	low _dbuf
  1698  00AC' 243D'              	addwf	dtoa@i,w,c
  1699  00AE' 6ED9               	movwf	fsr2l,c
  1700  00B0' 0E00'              	movlw	high _dbuf
  1701  00B2' 203E'              	addwfc	dtoa@i+1,w,c
  1702  00B4' 6EDA               	movwf	fsr2h,c
  1703  00B6' C035' F000'        	movff	dtoa@n,___aomod@dividend
  1704  00BA' C036' F001'        	movff	dtoa@n+1,___aomod@dividend+1
  1705  00BE' C037' F002'        	movff	dtoa@n+2,___aomod@dividend+2
  1706  00C2' C038' F003'        	movff	dtoa@n+3,___aomod@dividend+3
  1707  00C6' C039' F004'        	movff	dtoa@n+4,___aomod@dividend+4
  1708  00CA' C03A' F005'        	movff	dtoa@n+5,___aomod@dividend+5
  1709  00CE' C03B' F006'        	movff	dtoa@n+6,___aomod@dividend+6
  1710  00D2' C03C' F007'        	movff	dtoa@n+7,___aomod@dividend+7
  1711  00D6' 0E0A               	movlw	10
  1712  00D8' 6E08'              	movwf	___aomod@divisor,c
  1713  00DA' 0E00               	movlw	0
  1714  00DC' 6E09'              	movwf	___aomod@divisor+1,c
  1715  00DE' 0E00               	movlw	0
  1716  00E0' 6E0A'              	movwf	___aomod@divisor+2,c
  1717  00E2' 0E00               	movlw	0
  1718  00E4' 6E0B'              	movwf	___aomod@divisor+3,c
  1719  00E6' 0E00               	movlw	0
  1720  00E8' 6E0C'              	movwf	___aomod@divisor+4,c
  1721  00EA' 0E00               	movlw	0
  1722  00EC' 6E0D'              	movwf	___aomod@divisor+5,c
  1723  00EE' 0E00               	movlw	0
  1724  00F0' 6E0E'              	movwf	___aomod@divisor+6,c
  1725  00F2' 0E00               	movlw	0
  1726  00F4' 6E0F'              	movwf	___aomod@divisor+7,c
  1727  00F6' EC00' F000'        	call	___aomod	;wreg free
  1728  00FA' C000' F025'        	movff	?___aomod,??_dtoa
  1729  00FE' C001' F026'        	movff	?___aomod+1,??_dtoa+1
  1730  0102' C002' F027'        	movff	?___aomod+2,??_dtoa+2
  1731  0106' C003' F028'        	movff	?___aomod+3,??_dtoa+3
  1732  010A' C004' F029'        	movff	?___aomod+4,??_dtoa+4
  1733  010E' C005' F02A'        	movff	?___aomod+5,??_dtoa+5
  1734  0112' C006' F02B'        	movff	?___aomod+6,??_dtoa+6
  1735  0116' C007' F02C'        	movff	?___aomod+7,??_dtoa+7
  1736  011A' C025' F012'        	movff	??_dtoa,abs@a
  1737  011E' C027' F013'        	movff	??_dtoa+2,abs@a+1
  1738  0122' EC00' F000'        	call	_abs	;wreg free
  1739  0126' 5012'              	movf	?_abs,w,c
  1740  0128' 0F30               	addlw	48
  1741  012A' 6EDF               	movwf	indf2,c
  1742                           
  1743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1744  012C' 062F'              	decf	dtoa@p,f,c
  1745  012E' A0D8               	btfss	status,0,c
  1746  0130' 0630'              	decf	dtoa@p+1,f,c
  1747                           
  1748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1749  0132' 0631'              	decf	dtoa@w,f,c
  1750  0134' A0D8               	btfss	status,0,c
  1751  0136' 0632'              	decf	dtoa@w+1,f,c
  1752                           
  1753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1754  0138' C035' F000'        	movff	dtoa@n,___aodiv@dividend
  1755  013C' C036' F001'        	movff	dtoa@n+1,___aodiv@dividend+1
  1756  0140' C037' F002'        	movff	dtoa@n+2,___aodiv@dividend+2
  1757  0144' C038' F003'        	movff	dtoa@n+3,___aodiv@dividend+3
  1758  0148' C039' F004'        	movff	dtoa@n+4,___aodiv@dividend+4
  1759  014C' C03A' F005'        	movff	dtoa@n+5,___aodiv@dividend+5
  1760  0150' C03B' F006'        	movff	dtoa@n+6,___aodiv@dividend+6
  1761  0154' C03C' F007'        	movff	dtoa@n+7,___aodiv@dividend+7
  1762  0158' 0E0A               	movlw	10
  1763  015A' 6E08'              	movwf	___aodiv@divisor,c
  1764  015C' 0E00               	movlw	0
  1765  015E' 6E09'              	movwf	___aodiv@divisor+1,c
  1766  0160' 0E00               	movlw	0
  1767  0162' 6E0A'              	movwf	___aodiv@divisor+2,c
  1768  0164' 0E00               	movlw	0
  1769  0166' 6E0B'              	movwf	___aodiv@divisor+3,c
  1770  0168' 0E00               	movlw	0
  1771  016A' 6E0C'              	movwf	___aodiv@divisor+4,c
  1772  016C' 0E00               	movlw	0
  1773  016E' 6E0D'              	movwf	___aodiv@divisor+5,c
  1774  0170' 0E00               	movlw	0
  1775  0172' 6E0E'              	movwf	___aodiv@divisor+6,c
  1776  0174' 0E00               	movlw	0
  1777  0176' 6E0F'              	movwf	___aodiv@divisor+7,c
  1778  0178' EC00' F000'        	call	___aodiv	;wreg free
  1779  017C' C000' F035'        	movff	?___aodiv,dtoa@n
  1780  0180' C001' F036'        	movff	?___aodiv+1,dtoa@n+1
  1781  0184' C002' F037'        	movff	?___aodiv+2,dtoa@n+2
  1782  0188' C003' F038'        	movff	?___aodiv+3,dtoa@n+3
  1783  018C' C004' F039'        	movff	?___aodiv+4,dtoa@n+4
  1784  0190' C005' F03A'        	movff	?___aodiv+5,dtoa@n+5
  1785  0194' C006' F03B'        	movff	?___aodiv+6,dtoa@n+6
  1786  0198' C007' F03C'        	movff	?___aodiv+7,dtoa@n+7
  1787  019C'                    l2015:
  1788                           
  1789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1790  019C' BE3E'              	btfsc	dtoa@i+1,7,c
  1791  019E' D01F               	goto	u1760
  1792  01A0' 503E'              	movf	dtoa@i+1,w,c
  1793  01A2' E103               	bnz	u1720
  1794  01A4' 043D'              	decf	dtoa@i,w,c
  1795  01A6' A0D8               	btfss	status,0,c
  1796  01A8' D01A               	goto	u1760
  1797  01AA'                    u1720:
  1798  01AA' 5035'              	movf	dtoa@n,w,c
  1799  01AC' 1036'              	iorwf	dtoa@n+1,w,c
  1800  01AE' 1037'              	iorwf	dtoa@n+2,w,c
  1801  01B0' 1038'              	iorwf	dtoa@n+3,w,c
  1802  01B2' 1039'              	iorwf	dtoa@n+4,w,c
  1803  01B4' 103A'              	iorwf	dtoa@n+5,w,c
  1804  01B6' 103B'              	iorwf	dtoa@n+6,w,c
  1805  01B8' 103C'              	iorwf	dtoa@n+7,w,c
  1806  01BA' A4D8               	btfss	status,2,c
  1807  01BC' D773               	goto	l2005
  1808  01BE' BE30'              	btfsc	dtoa@p+1,7,c
  1809  01C0' D005               	goto	u1740
  1810  01C2' 5030'              	movf	dtoa@p+1,w,c
  1811  01C4' E102               	bnz	u1741
  1812  01C6' 042F'              	decf	dtoa@p,w,c
  1813  01C8' B0D8               	btfsc	status,0,c
  1814  01CA'                    u1741:
  1815  01CA' D76C               	goto	l2005
  1816  01CC'                    u1740:
  1817  01CC' BE32'              	btfsc	dtoa@w+1,7,c
  1818  01CE' D007               	goto	u1760
  1819  01D0' 5032'              	movf	dtoa@w+1,w,c
  1820  01D2' E103               	bnz	u1750
  1821  01D4' 0431'              	decf	dtoa@w,w,c
  1822  01D6' A0D8               	btfss	status,0,c
  1823  01D8' D002               	goto	u1760
  1824  01DA'                    u1750:
  1825  01DA' B202'              	btfsc	_flags,1,c
  1826  01DC' D763               	goto	l2005
  1827  01DE'                    u1760:
  1828                           
  1829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1830  01DE' 5033'              	movf	dtoa@s,w,c
  1831  01E0' 1034'              	iorwf	dtoa@s+1,w,c
  1832  01E2' A4D8               	btfss	status,2,c
  1833  01E4' D002               	goto	u1780
  1834  01E6' A402'              	btfss	_flags,2,c
  1835  01E8' D017               	goto	l2039
  1836  01EA'                    u1780:
  1837                           
  1838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1839  01EA' 063D'              	decf	dtoa@i,f,c
  1840  01EC' A0D8               	btfss	status,0,c
  1841  01EE' 063E'              	decf	dtoa@i+1,f,c
  1842                           
  1843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1844  01F0' 5033'              	movf	dtoa@s,w,c
  1845  01F2' 1034'              	iorwf	dtoa@s+1,w,c
  1846  01F4' A4D8               	btfss	status,2,c
  1847  01F6' D004               	goto	l2035
  1848  01F8' 0E00               	movlw	0
  1849  01FA' 6E2E'              	movwf	_dtoa$393+1,c
  1850  01FC' 0E2B               	movlw	43
  1851  01FE' D003               	goto	L1
  1852  0200'                    l2035:
  1853  0200' 0E00               	movlw	0
  1854  0202' 6E2E'              	movwf	_dtoa$393+1,c
  1855  0204' 0E2D               	movlw	45
  1856  0206'                    L1:
  1857  0206' 6E2D'              	movwf	_dtoa$393,c
  1858  0208' 0E00'              	movlw	low _dbuf
  1859  020A' 243D'              	addwf	dtoa@i,w,c
  1860  020C' 6ED9               	movwf	fsr2l,c
  1861  020E' 0E00'              	movlw	high _dbuf
  1862  0210' 203E'              	addwfc	dtoa@i+1,w,c
  1863  0212' 6EDA               	movwf	fsr2h,c
  1864  0214' C02D' FFDF         	movff	_dtoa$393,indf2
  1865  0218'                    l2039:
  1866                           
  1867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1868  0218' C01B' F010'        	movff	dtoa@fp,pad@fp
  1869  021C' C01C' F011'        	movff	dtoa@fp+1,pad@fp+1
  1870  0220' 0E00'              	movlw	low _dbuf
  1871  0222' 243D'              	addwf	dtoa@i,w,c
  1872  0224' 6E12'              	movwf	pad@buf,c
  1873  0226' 0E00'              	movlw	high _dbuf
  1874  0228' 203E'              	addwfc	dtoa@i+1,w,c
  1875  022A' 6E13'              	movwf	pad@buf+1,c
  1876  022C' C031' F014'        	movff	dtoa@w,pad@p
  1877  0230' C032' F015'        	movff	dtoa@w+1,pad@p+1
  1878  0234' EC00' F000'        	call	_pad	;wreg free
  1879  0238' C010' F01B'        	movff	?_pad,?_dtoa
  1880  023C' C011' F01C'        	movff	?_pad+1,?_dtoa+1
  1881  0240' 0012               	return		;funcret
  1882  0242'                    __end_of_dtoa:
  1883                           	opt callstack 0
  1884                           
  1885 ;; *************** function _abs *****************
  1886 ;; Defined at:
  1887 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  a               2   18[COMRAM] int 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  2   18[COMRAM] int 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1901 ;;      Params:         2       0       0       0       0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1903 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1904 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1905 ;;Total ram usage:        4 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_dtoa
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text5
  1915  0000'                    __ptext5:
  1916                           	opt callstack 0
  1917  0000'                    _abs:
  1918                           	opt callstack 26
  1919                           
  1920                           ;incstack = 0
  1921  0000' BE13'              	btfsc	abs@a+1,7,c
  1922  0002' D005               	goto	u1500
  1923  0004' 5013'              	movf	abs@a+1,w,c
  1924  0006' E110               	bnz	l880
  1925  0008' 0412'              	decf	abs@a,w,c
  1926  000A' B0D8               	btfsc	status,0,c
  1927  000C' D00D               	goto	l880
  1928  000E'                    u1500:
  1929  000E' C012' F014'        	movff	abs@a,??_abs
  1930  0012' C013' F015'        	movff	abs@a+1,??_abs+1
  1931  0016' 1E14'              	comf	??_abs,f,c
  1932  0018' 1E15'              	comf	??_abs+1,f,c
  1933  001A' 4A14'              	infsnz	??_abs,f,c
  1934  001C' 2A15'              	incf	??_abs+1,f,c
  1935  001E' C014' F012'        	movff	??_abs,?_abs
  1936  0022' C015' F013'        	movff	??_abs+1,?_abs+1
  1937  0026' 0012               	return	
  1938  0028'                    l880:
  1939  0028' C012' F012'        	movff	abs@a,?_abs
  1940  002C' C013' F013'        	movff	abs@a+1,?_abs+1
  1941  0030' 0012               	return		;funcret
  1942  0032'                    __end_of_abs:
  1943                           	opt callstack 0
  1944                           
  1945 ;; *************** function ___aomod *****************
  1946 ;; Defined at:
  1947 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  dividend        8    0[COMRAM] long long 
  1950 ;;  divisor         8    8[COMRAM] long long 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  sign            1   17[COMRAM] unsigned char 
  1953 ;;  counter         1   16[COMRAM] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  8    0[COMRAM] long long 
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1963 ;;      Params:        16       0       0       0       0       0       0       0       0
  1964 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1966 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1967 ;;Total ram usage:       18 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_dtoa
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text6
  1977  0000'                    __ptext6:
  1978                           	opt callstack 0
  1979  0000'                    ___aomod:
  1980                           	opt callstack 26
  1981                           
  1982                           ;incstack = 0
  1983  0000' 0E00               	movlw	0
  1984  0002' 6E11'              	movwf	___aomod@sign,c
  1985  0004' AE07'              	btfss	___aomod@dividend+7,7,c
  1986  0006' D012               	goto	l1939
  1987  0008' 1E07'              	comf	___aomod@dividend+7,f,c
  1988  000A' 1E06'              	comf	___aomod@dividend+6,f,c
  1989  000C' 1E05'              	comf	___aomod@dividend+5,f,c
  1990  000E' 1E04'              	comf	___aomod@dividend+4,f,c
  1991  0010' 1E03'              	comf	___aomod@dividend+3,f,c
  1992  0012' 1E02'              	comf	___aomod@dividend+2,f,c
  1993  0014' 1E01'              	comf	___aomod@dividend+1,f,c
  1994  0016' 6C00'              	negf	___aomod@dividend,c
  1995  0018' 0E00               	movlw	0
  1996  001A' 2201'              	addwfc	___aomod@dividend+1,f,c
  1997  001C' 2202'              	addwfc	___aomod@dividend+2,f,c
  1998  001E' 2203'              	addwfc	___aomod@dividend+3,f,c
  1999  0020' 2204'              	addwfc	___aomod@dividend+4,f,c
  2000  0022' 2205'              	addwfc	___aomod@dividend+5,f,c
  2001  0024' 2206'              	addwfc	___aomod@dividend+6,f,c
  2002  0026' 2207'              	addwfc	___aomod@dividend+7,f,c
  2003  0028' 0E01               	movlw	1
  2004  002A' 6E11'              	movwf	___aomod@sign,c
  2005  002C'                    l1939:
  2006  002C' AE0F'              	btfss	___aomod@divisor+7,7,c
  2007  002E' D010               	goto	l1943
  2008  0030' 1E0F'              	comf	___aomod@divisor+7,f,c
  2009  0032' 1E0E'              	comf	___aomod@divisor+6,f,c
  2010  0034' 1E0D'              	comf	___aomod@divisor+5,f,c
  2011  0036' 1E0C'              	comf	___aomod@divisor+4,f,c
  2012  0038' 1E0B'              	comf	___aomod@divisor+3,f,c
  2013  003A' 1E0A'              	comf	___aomod@divisor+2,f,c
  2014  003C' 1E09'              	comf	___aomod@divisor+1,f,c
  2015  003E' 6C08'              	negf	___aomod@divisor,c
  2016  0040' 0E00               	movlw	0
  2017  0042' 2209'              	addwfc	___aomod@divisor+1,f,c
  2018  0044' 220A'              	addwfc	___aomod@divisor+2,f,c
  2019  0046' 220B'              	addwfc	___aomod@divisor+3,f,c
  2020  0048' 220C'              	addwfc	___aomod@divisor+4,f,c
  2021  004A' 220D'              	addwfc	___aomod@divisor+5,f,c
  2022  004C' 220E'              	addwfc	___aomod@divisor+6,f,c
  2023  004E' 220F'              	addwfc	___aomod@divisor+7,f,c
  2024  0050'                    l1943:
  2025  0050' 5008'              	movf	___aomod@divisor,w,c
  2026  0052' 1009'              	iorwf	___aomod@divisor+1,w,c
  2027  0054' 100A'              	iorwf	___aomod@divisor+2,w,c
  2028  0056' 100B'              	iorwf	___aomod@divisor+3,w,c
  2029  0058' 100C'              	iorwf	___aomod@divisor+4,w,c
  2030  005A' 100D'              	iorwf	___aomod@divisor+5,w,c
  2031  005C' 100E'              	iorwf	___aomod@divisor+6,w,c
  2032  005E' 100F'              	iorwf	___aomod@divisor+7,w,c
  2033  0060' B4D8               	btfsc	status,2,c
  2034  0062' D03C               	goto	l1959
  2035  0064' 0E01               	movlw	1
  2036  0066' 6E10'              	movwf	___aomod@counter,c
  2037  0068' D00A               	goto	l1949
  2038  006A'                    l1947:
  2039  006A' 90D8               	bcf	status,0,c
  2040  006C' 3608'              	rlcf	___aomod@divisor,f,c
  2041  006E' 3609'              	rlcf	___aomod@divisor+1,f,c
  2042  0070' 360A'              	rlcf	___aomod@divisor+2,f,c
  2043  0072' 360B'              	rlcf	___aomod@divisor+3,f,c
  2044  0074' 360C'              	rlcf	___aomod@divisor+4,f,c
  2045  0076' 360D'              	rlcf	___aomod@divisor+5,f,c
  2046  0078' 360E'              	rlcf	___aomod@divisor+6,f,c
  2047  007A' 360F'              	rlcf	___aomod@divisor+7,f,c
  2048  007C' 2A10'              	incf	___aomod@counter,f,c
  2049  007E'                    l1949:
  2050  007E' AE0F'              	btfss	___aomod@divisor+7,7,c
  2051  0080' D7F4               	goto	l1947
  2052  0082'                    u1610:
  2053  0082' 5008'              	movf	___aomod@divisor,w,c
  2054  0084' 5C00'              	subwf	___aomod@dividend,w,c
  2055  0086' 5009'              	movf	___aomod@divisor+1,w,c
  2056  0088' 5801'              	subwfb	___aomod@dividend+1,w,c
  2057  008A' 500A'              	movf	___aomod@divisor+2,w,c
  2058  008C' 5802'              	subwfb	___aomod@dividend+2,w,c
  2059  008E' 500B'              	movf	___aomod@divisor+3,w,c
  2060  0090' 5803'              	subwfb	___aomod@dividend+3,w,c
  2061  0092' 500C'              	movf	___aomod@divisor+4,w,c
  2062  0094' 5804'              	subwfb	___aomod@dividend+4,w,c
  2063  0096' 500D'              	movf	___aomod@divisor+5,w,c
  2064  0098' 5805'              	subwfb	___aomod@dividend+5,w,c
  2065  009A' 500E'              	movf	___aomod@divisor+6,w,c
  2066  009C' 5806'              	subwfb	___aomod@dividend+6,w,c
  2067  009E' 500F'              	movf	___aomod@divisor+7,w,c
  2068  00A0' 5807'              	subwfb	___aomod@dividend+7,w,c
  2069  00A2' A0D8               	btfss	status,0,c
  2070  00A4' D010               	goto	l1955
  2071  00A6' 5008'              	movf	___aomod@divisor,w,c
  2072  00A8' 5E00'              	subwf	___aomod@dividend,f,c
  2073  00AA' 5009'              	movf	___aomod@divisor+1,w,c
  2074  00AC' 5A01'              	subwfb	___aomod@dividend+1,f,c
  2075  00AE' 500A'              	movf	___aomod@divisor+2,w,c
  2076  00B0' 5A02'              	subwfb	___aomod@dividend+2,f,c
  2077  00B2' 500B'              	movf	___aomod@divisor+3,w,c
  2078  00B4' 5A03'              	subwfb	___aomod@dividend+3,f,c
  2079  00B6' 500C'              	movf	___aomod@divisor+4,w,c
  2080  00B8' 5A04'              	subwfb	___aomod@dividend+4,f,c
  2081  00BA' 500D'              	movf	___aomod@divisor+5,w,c
  2082  00BC' 5A05'              	subwfb	___aomod@dividend+5,f,c
  2083  00BE' 500E'              	movf	___aomod@divisor+6,w,c
  2084  00C0' 5A06'              	subwfb	___aomod@dividend+6,f,c
  2085  00C2' 500F'              	movf	___aomod@divisor+7,w,c
  2086  00C4' 5A07'              	subwfb	___aomod@dividend+7,f,c
  2087  00C6'                    l1955:
  2088  00C6' 90D8               	bcf	status,0,c
  2089  00C8' 320F'              	rrcf	___aomod@divisor+7,f,c
  2090  00CA' 320E'              	rrcf	___aomod@divisor+6,f,c
  2091  00CC' 320D'              	rrcf	___aomod@divisor+5,f,c
  2092  00CE' 320C'              	rrcf	___aomod@divisor+4,f,c
  2093  00D0' 320B'              	rrcf	___aomod@divisor+3,f,c
  2094  00D2' 320A'              	rrcf	___aomod@divisor+2,f,c
  2095  00D4' 3209'              	rrcf	___aomod@divisor+1,f,c
  2096  00D6' 3208'              	rrcf	___aomod@divisor,f,c
  2097  00D8' 2E10'              	decfsz	___aomod@counter,f,c
  2098  00DA' D7D3               	goto	u1610
  2099  00DC'                    l1959:
  2100  00DC' 5011'              	movf	___aomod@sign,w,c
  2101  00DE' B4D8               	btfsc	status,2,c
  2102  00E0' D010               	goto	l1963
  2103  00E2' 1E07'              	comf	___aomod@dividend+7,f,c
  2104  00E4' 1E06'              	comf	___aomod@dividend+6,f,c
  2105  00E6' 1E05'              	comf	___aomod@dividend+5,f,c
  2106  00E8' 1E04'              	comf	___aomod@dividend+4,f,c
  2107  00EA' 1E03'              	comf	___aomod@dividend+3,f,c
  2108  00EC' 1E02'              	comf	___aomod@dividend+2,f,c
  2109  00EE' 1E01'              	comf	___aomod@dividend+1,f,c
  2110  00F0' 6C00'              	negf	___aomod@dividend,c
  2111  00F2' 0E00               	movlw	0
  2112  00F4' 2201'              	addwfc	___aomod@dividend+1,f,c
  2113  00F6' 2202'              	addwfc	___aomod@dividend+2,f,c
  2114  00F8' 2203'              	addwfc	___aomod@dividend+3,f,c
  2115  00FA' 2204'              	addwfc	___aomod@dividend+4,f,c
  2116  00FC' 2205'              	addwfc	___aomod@dividend+5,f,c
  2117  00FE' 2206'              	addwfc	___aomod@dividend+6,f,c
  2118  0100' 2207'              	addwfc	___aomod@dividend+7,f,c
  2119  0102'                    l1963:
  2120  0102' C000' F000'        	movff	___aomod@dividend,?___aomod
  2121  0106' C001' F001'        	movff	___aomod@dividend+1,?___aomod+1
  2122  010A' C002' F002'        	movff	___aomod@dividend+2,?___aomod+2
  2123  010E' C003' F003'        	movff	___aomod@dividend+3,?___aomod+3
  2124  0112' C004' F004'        	movff	___aomod@dividend+4,?___aomod+4
  2125  0116' C005' F005'        	movff	___aomod@dividend+5,?___aomod+5
  2126  011A' C006' F006'        	movff	___aomod@dividend+6,?___aomod+6
  2127  011E' C007' F007'        	movff	___aomod@dividend+7,?___aomod+7
  2128  0122' 0012               	return		;funcret
  2129  0124'                    __end_of___aomod:
  2130                           	opt callstack 0
  2131                           
  2132 ;; *************** function ___aodiv *****************
  2133 ;; Defined at:
  2134 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  dividend        8    0[COMRAM] long long 
  2137 ;;  divisor         8    8[COMRAM] long long 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  quotient        8   18[COMRAM] long long 
  2140 ;;  sign            1   17[COMRAM] unsigned char 
  2141 ;;  counter         1   16[COMRAM] unsigned char 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  8    0[COMRAM] long long 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2151 ;;      Params:        16       0       0       0       0       0       0       0       0
  2152 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2154 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2155 ;;Total ram usage:       26 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_dtoa
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text7
  2165  0000'                    __ptext7:
  2166                           	opt callstack 0
  2167  0000'                    ___aodiv:
  2168                           	opt callstack 26
  2169                           
  2170                           ;incstack = 0
  2171  0000' 0E00               	movlw	0
  2172  0002' 6E11'              	movwf	___aodiv@sign,c
  2173  0004' AE0F'              	btfss	___aodiv@divisor+7,7,c
  2174  0006' D012               	goto	l1895
  2175  0008' 1E0F'              	comf	___aodiv@divisor+7,f,c
  2176  000A' 1E0E'              	comf	___aodiv@divisor+6,f,c
  2177  000C' 1E0D'              	comf	___aodiv@divisor+5,f,c
  2178  000E' 1E0C'              	comf	___aodiv@divisor+4,f,c
  2179  0010' 1E0B'              	comf	___aodiv@divisor+3,f,c
  2180  0012' 1E0A'              	comf	___aodiv@divisor+2,f,c
  2181  0014' 1E09'              	comf	___aodiv@divisor+1,f,c
  2182  0016' 6C08'              	negf	___aodiv@divisor,c
  2183  0018' 0E00               	movlw	0
  2184  001A' 2209'              	addwfc	___aodiv@divisor+1,f,c
  2185  001C' 220A'              	addwfc	___aodiv@divisor+2,f,c
  2186  001E' 220B'              	addwfc	___aodiv@divisor+3,f,c
  2187  0020' 220C'              	addwfc	___aodiv@divisor+4,f,c
  2188  0022' 220D'              	addwfc	___aodiv@divisor+5,f,c
  2189  0024' 220E'              	addwfc	___aodiv@divisor+6,f,c
  2190  0026' 220F'              	addwfc	___aodiv@divisor+7,f,c
  2191  0028' 0E01               	movlw	1
  2192  002A' 6E11'              	movwf	___aodiv@sign,c
  2193  002C'                    l1895:
  2194  002C' AE07'              	btfss	___aodiv@dividend+7,7,c
  2195  002E' D012               	goto	l1901
  2196  0030' 1E07'              	comf	___aodiv@dividend+7,f,c
  2197  0032' 1E06'              	comf	___aodiv@dividend+6,f,c
  2198  0034' 1E05'              	comf	___aodiv@dividend+5,f,c
  2199  0036' 1E04'              	comf	___aodiv@dividend+4,f,c
  2200  0038' 1E03'              	comf	___aodiv@dividend+3,f,c
  2201  003A' 1E02'              	comf	___aodiv@dividend+2,f,c
  2202  003C' 1E01'              	comf	___aodiv@dividend+1,f,c
  2203  003E' 6C00'              	negf	___aodiv@dividend,c
  2204  0040' 0E00               	movlw	0
  2205  0042' 2201'              	addwfc	___aodiv@dividend+1,f,c
  2206  0044' 2202'              	addwfc	___aodiv@dividend+2,f,c
  2207  0046' 2203'              	addwfc	___aodiv@dividend+3,f,c
  2208  0048' 2204'              	addwfc	___aodiv@dividend+4,f,c
  2209  004A' 2205'              	addwfc	___aodiv@dividend+5,f,c
  2210  004C' 2206'              	addwfc	___aodiv@dividend+6,f,c
  2211  004E' 2207'              	addwfc	___aodiv@dividend+7,f,c
  2212  0050' 0E01               	movlw	1
  2213  0052' 1A11'              	xorwf	___aodiv@sign,f,c
  2214  0054'                    l1901:
  2215  0054' EE20' F000'        	lfsr	2,___aodiv@quotient
  2216  0058' 0E07               	movlw	7
  2217  005A'                    u1531:
  2218  005A' 6ADE               	clrf	postinc2,c
  2219  005C' 06E8               	decf	wreg,f,c
  2220  005E' E2FD               	bc	u1531
  2221  0060' 5008'              	movf	___aodiv@divisor,w,c
  2222  0062' 1009'              	iorwf	___aodiv@divisor+1,w,c
  2223  0064' 100A'              	iorwf	___aodiv@divisor+2,w,c
  2224  0066' 100B'              	iorwf	___aodiv@divisor+3,w,c
  2225  0068' 100C'              	iorwf	___aodiv@divisor+4,w,c
  2226  006A' 100D'              	iorwf	___aodiv@divisor+5,w,c
  2227  006C' 100E'              	iorwf	___aodiv@divisor+6,w,c
  2228  006E' 100F'              	iorwf	___aodiv@divisor+7,w,c
  2229  0070' B4D8               	btfsc	status,2,c
  2230  0072' D046               	goto	l1923
  2231  0074' 0E01               	movlw	1
  2232  0076' 6E10'              	movwf	___aodiv@counter,c
  2233  0078' D00A               	goto	l1909
  2234  007A'                    l1907:
  2235  007A' 90D8               	bcf	status,0,c
  2236  007C' 3608'              	rlcf	___aodiv@divisor,f,c
  2237  007E' 3609'              	rlcf	___aodiv@divisor+1,f,c
  2238  0080' 360A'              	rlcf	___aodiv@divisor+2,f,c
  2239  0082' 360B'              	rlcf	___aodiv@divisor+3,f,c
  2240  0084' 360C'              	rlcf	___aodiv@divisor+4,f,c
  2241  0086' 360D'              	rlcf	___aodiv@divisor+5,f,c
  2242  0088' 360E'              	rlcf	___aodiv@divisor+6,f,c
  2243  008A' 360F'              	rlcf	___aodiv@divisor+7,f,c
  2244  008C' 2A10'              	incf	___aodiv@counter,f,c
  2245  008E'                    l1909:
  2246  008E' AE0F'              	btfss	___aodiv@divisor+7,7,c
  2247  0090' D7F4               	goto	l1907
  2248  0092'                    u1550:
  2249  0092' 90D8               	bcf	status,0,c
  2250  0094' 3612'              	rlcf	___aodiv@quotient,f,c
  2251  0096' 3613'              	rlcf	___aodiv@quotient+1,f,c
  2252  0098' 3614'              	rlcf	___aodiv@quotient+2,f,c
  2253  009A' 3615'              	rlcf	___aodiv@quotient+3,f,c
  2254  009C' 3616'              	rlcf	___aodiv@quotient+4,f,c
  2255  009E' 3617'              	rlcf	___aodiv@quotient+5,f,c
  2256  00A0' 3618'              	rlcf	___aodiv@quotient+6,f,c
  2257  00A2' 3619'              	rlcf	___aodiv@quotient+7,f,c
  2258  00A4' 5008'              	movf	___aodiv@divisor,w,c
  2259  00A6' 5C00'              	subwf	___aodiv@dividend,w,c
  2260  00A8' 5009'              	movf	___aodiv@divisor+1,w,c
  2261  00AA' 5801'              	subwfb	___aodiv@dividend+1,w,c
  2262  00AC' 500A'              	movf	___aodiv@divisor+2,w,c
  2263  00AE' 5802'              	subwfb	___aodiv@dividend+2,w,c
  2264  00B0' 500B'              	movf	___aodiv@divisor+3,w,c
  2265  00B2' 5803'              	subwfb	___aodiv@dividend+3,w,c
  2266  00B4' 500C'              	movf	___aodiv@divisor+4,w,c
  2267  00B6' 5804'              	subwfb	___aodiv@dividend+4,w,c
  2268  00B8' 500D'              	movf	___aodiv@divisor+5,w,c
  2269  00BA' 5805'              	subwfb	___aodiv@dividend+5,w,c
  2270  00BC' 500E'              	movf	___aodiv@divisor+6,w,c
  2271  00BE' 5806'              	subwfb	___aodiv@dividend+6,w,c
  2272  00C0' 500F'              	movf	___aodiv@divisor+7,w,c
  2273  00C2' 5807'              	subwfb	___aodiv@dividend+7,w,c
  2274  00C4' A0D8               	btfss	status,0,c
  2275  00C6' D011               	goto	l1919
  2276  00C8' 5008'              	movf	___aodiv@divisor,w,c
  2277  00CA' 5E00'              	subwf	___aodiv@dividend,f,c
  2278  00CC' 5009'              	movf	___aodiv@divisor+1,w,c
  2279  00CE' 5A01'              	subwfb	___aodiv@dividend+1,f,c
  2280  00D0' 500A'              	movf	___aodiv@divisor+2,w,c
  2281  00D2' 5A02'              	subwfb	___aodiv@dividend+2,f,c
  2282  00D4' 500B'              	movf	___aodiv@divisor+3,w,c
  2283  00D6' 5A03'              	subwfb	___aodiv@dividend+3,f,c
  2284  00D8' 500C'              	movf	___aodiv@divisor+4,w,c
  2285  00DA' 5A04'              	subwfb	___aodiv@dividend+4,f,c
  2286  00DC' 500D'              	movf	___aodiv@divisor+5,w,c
  2287  00DE' 5A05'              	subwfb	___aodiv@dividend+5,f,c
  2288  00E0' 500E'              	movf	___aodiv@divisor+6,w,c
  2289  00E2' 5A06'              	subwfb	___aodiv@dividend+6,f,c
  2290  00E4' 500F'              	movf	___aodiv@divisor+7,w,c
  2291  00E6' 5A07'              	subwfb	___aodiv@dividend+7,f,c
  2292  00E8' 8012'              	bsf	___aodiv@quotient,0,c
  2293  00EA'                    l1919:
  2294  00EA' 90D8               	bcf	status,0,c
  2295  00EC' 320F'              	rrcf	___aodiv@divisor+7,f,c
  2296  00EE' 320E'              	rrcf	___aodiv@divisor+6,f,c
  2297  00F0' 320D'              	rrcf	___aodiv@divisor+5,f,c
  2298  00F2' 320C'              	rrcf	___aodiv@divisor+4,f,c
  2299  00F4' 320B'              	rrcf	___aodiv@divisor+3,f,c
  2300  00F6' 320A'              	rrcf	___aodiv@divisor+2,f,c
  2301  00F8' 3209'              	rrcf	___aodiv@divisor+1,f,c
  2302  00FA' 3208'              	rrcf	___aodiv@divisor,f,c
  2303  00FC' 2E10'              	decfsz	___aodiv@counter,f,c
  2304  00FE' D7C9               	goto	u1550
  2305  0100'                    l1923:
  2306  0100' 5011'              	movf	___aodiv@sign,w,c
  2307  0102' B4D8               	btfsc	status,2,c
  2308  0104' D010               	goto	l1927
  2309  0106' 1E19'              	comf	___aodiv@quotient+7,f,c
  2310  0108' 1E18'              	comf	___aodiv@quotient+6,f,c
  2311  010A' 1E17'              	comf	___aodiv@quotient+5,f,c
  2312  010C' 1E16'              	comf	___aodiv@quotient+4,f,c
  2313  010E' 1E15'              	comf	___aodiv@quotient+3,f,c
  2314  0110' 1E14'              	comf	___aodiv@quotient+2,f,c
  2315  0112' 1E13'              	comf	___aodiv@quotient+1,f,c
  2316  0114' 6C12'              	negf	___aodiv@quotient,c
  2317  0116' 0E00               	movlw	0
  2318  0118' 2213'              	addwfc	___aodiv@quotient+1,f,c
  2319  011A' 2214'              	addwfc	___aodiv@quotient+2,f,c
  2320  011C' 2215'              	addwfc	___aodiv@quotient+3,f,c
  2321  011E' 2216'              	addwfc	___aodiv@quotient+4,f,c
  2322  0120' 2217'              	addwfc	___aodiv@quotient+5,f,c
  2323  0122' 2218'              	addwfc	___aodiv@quotient+6,f,c
  2324  0124' 2219'              	addwfc	___aodiv@quotient+7,f,c
  2325  0126'                    l1927:
  2326  0126' C012' F000'        	movff	___aodiv@quotient,?___aodiv
  2327  012A' C013' F001'        	movff	___aodiv@quotient+1,?___aodiv+1
  2328  012E' C014' F002'        	movff	___aodiv@quotient+2,?___aodiv+2
  2329  0132' C015' F003'        	movff	___aodiv@quotient+3,?___aodiv+3
  2330  0136' C016' F004'        	movff	___aodiv@quotient+4,?___aodiv+4
  2331  013A' C017' F005'        	movff	___aodiv@quotient+5,?___aodiv+5
  2332  013E' C018' F006'        	movff	___aodiv@quotient+6,?___aodiv+6
  2333  0142' C019' F007'        	movff	___aodiv@quotient+7,?___aodiv+7
  2334  0146' 0012               	return		;funcret
  2335  0148'                    __end_of___aodiv:
  2336                           	opt callstack 0
  2337                           
  2338 ;; *************** function _ctoa *****************
  2339 ;; Defined at:
  2340 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2343 ;;		 -> sprintf@f(6), 
  2344 ;;  c               1   29[COMRAM] unsigned char 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  w               2   30[COMRAM] int 
  2347 ;;  l               2    0        int 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  2   27[COMRAM] int 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2357 ;;      Params:         3       0       0       0       0       0       0       0       0
  2358 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2360 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2361 ;;Total ram usage:        5 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    4
  2364 ;; This function calls:
  2365 ;;		_pad
  2366 ;; This function is called by:
  2367 ;;		_vfpfcnvrt
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text8
  2372  0000'                    __ptext8:
  2373                           	opt callstack 0
  2374  0000'                    _ctoa:
  2375                           	opt callstack 23
  2376                           
  2377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  2378                           
  2379                           ;incstack = 0
  2380  0000' 5000'              	movf	_width,w,c
  2381  0002' 1001'              	iorwf	_width+1,w,c
  2382  0004' A4D8               	btfss	status,2,c
  2383  0006' D005               	goto	l1971
  2384  0008' C000' F01E'        	movff	_width,ctoa@w
  2385  000C' C001' F01F'        	movff	_width+1,ctoa@w+1
  2386  0010' D006               	goto	l1973
  2387  0012'                    l1971:
  2388  0012' 0EFF               	movlw	255
  2389  0014' 2400'              	addwf	_width,w,c
  2390  0016' 6E1E'              	movwf	ctoa@w,c
  2391  0018' 0EFF               	movlw	255
  2392  001A' 2001'              	addwfc	_width+1,w,c
  2393  001C' 6E1F'              	movwf	ctoa@w+1,c
  2394  001E'                    l1973:
  2395                           
  2396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  2397  001E' C01D' F004'        	movff	ctoa@c,_dbuf
  2398                           
  2399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  2400  0022' 0E00               	movlw	0
  2401  0024' 0100               	movlb	0	; () banked
  2402  0026' 6F00'              	movwf	(_dbuf+1)& (0+255),b
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  2406  0028' C01B' F010'        	movff	ctoa@fp,pad@fp
  2407  002C' C01C' F011'        	movff	ctoa@fp+1,pad@fp+1
  2408  0030' 0E00'              	movlw	low _dbuf
  2409  0032' 6E12'              	movwf	pad@buf,c
  2410  0034' 0E00'              	movlw	high _dbuf
  2411  0036' 6E13'              	movwf	pad@buf+1,c
  2412  0038' C01E' F014'        	movff	ctoa@w,pad@p
  2413  003C' C01F' F015'        	movff	ctoa@w+1,pad@p+1
  2414  0040' EC00' F000'        	call	_pad	;wreg free
  2415  0044' C010' F01B'        	movff	?_pad,?_ctoa
  2416  0048' C011' F01C'        	movff	?_pad+1,?_ctoa+1
  2417  004C' 0012               	return		;funcret
  2418  004E'                    __end_of_ctoa:
  2419                           	opt callstack 0
  2420                           
  2421 ;; *************** function _pad *****************
  2422 ;; Defined at:
  2423 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2426 ;;		 -> sprintf@f(6), 
  2427 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2428 ;;		 -> dbuf(32), 
  2429 ;;  p               2   20[COMRAM] int 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  w               2   25[COMRAM] int 
  2432 ;;  i               2   23[COMRAM] int 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  2   16[COMRAM] int 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2442 ;;      Params:         6       0       0       0       0       0       0       0       0
  2443 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2444 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2445 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2446 ;;Total ram usage:       11 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    3
  2449 ;; This function calls:
  2450 ;;		_fputc
  2451 ;;		_fputs
  2452 ;;		_strlen
  2453 ;; This function is called by:
  2454 ;;		_ctoa
  2455 ;;		_dtoa
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text9
  2460  0000'                    __ptext9:
  2461                           	opt callstack 0
  2462  0000'                    _pad:
  2463                           	opt callstack 23
  2464                           
  2465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2466                           
  2467                           ;incstack = 0
  2468  0000' A002'              	btfss	_flags,0,c
  2469  0002' D00A               	goto	l1865
  2470                           
  2471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2472  0004' C012' F009'        	movff	pad@buf,fputs@s
  2473  0008' C013' F00A'        	movff	pad@buf+1,fputs@s+1
  2474  000C' C010' F00B'        	movff	pad@fp,fputs@fp
  2475  0010' C011' F00C'        	movff	pad@fp+1,fputs@fp+1
  2476  0014' EC00' F000'        	call	_fputs	;wreg free
  2477  0018'                    l1865:
  2478                           
  2479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2480  0018' BE15'              	btfsc	pad@p+1,7,c
  2481  001A' D005               	goto	l1869
  2482  001C' C014' F019'        	movff	pad@p,pad@w
  2483  0020' C015' F01A'        	movff	pad@p+1,pad@w+1
  2484  0024' D004               	goto	l149
  2485  0026'                    l1869:
  2486  0026' 0E00               	movlw	0
  2487  0028' 6E1A'              	movwf	pad@w+1,c
  2488  002A' 0E00               	movlw	0
  2489  002C' 6E19'              	movwf	pad@w,c
  2490  002E'                    l149:
  2491                           
  2492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2493  002E' 0E00               	movlw	0
  2494  0030' 6E18'              	movwf	pad@i+1,c
  2495  0032' 0E00               	movlw	0
  2496  0034' 6E17'              	movwf	pad@i,c
  2497                           
  2498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2499  0036' D00C               	goto	l1875
  2500  0038'                    l1871:
  2501                           
  2502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2503  0038' 0E00               	movlw	0
  2504  003A' 6E01'              	movwf	fputc@c+1,c
  2505  003C' 0E20               	movlw	32
  2506  003E' 6E00'              	movwf	fputc@c,c
  2507  0040' C010' F002'        	movff	pad@fp,fputc@fp
  2508  0044' C011' F003'        	movff	pad@fp+1,fputc@fp+1
  2509  0048' EC00' F000'        	call	_fputc	;wreg free
  2510                           
  2511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2512  004C' 4A17'              	infsnz	pad@i,f,c
  2513  004E' 2A18'              	incf	pad@i+1,f,c
  2514  0050'                    l1875:
  2515                           
  2516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2517  0050' 5019'              	movf	pad@w,w,c
  2518  0052' 5C17'              	subwf	pad@i,w,c
  2519  0054' 5018'              	movf	pad@i+1,w,c
  2520  0056' 0A80               	xorlw	128
  2521  0058' 6E00'              	movwf	??_pad& (0+255),c
  2522  005A' 501A'              	movf	pad@w+1,w,c
  2523  005C' 0A80               	xorlw	128
  2524  005E' 5800'              	subwfb	??_pad& (0+255),w,c
  2525  0060' A0D8               	btfss	status,0,c
  2526  0062' D7EA               	goto	l1871
  2527                           
  2528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2529  0064' B002'              	btfsc	_flags,0,c
  2530  0066' D00A               	goto	l1879
  2531                           
  2532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2533  0068' C012' F009'        	movff	pad@buf,fputs@s
  2534  006C' C013' F00A'        	movff	pad@buf+1,fputs@s+1
  2535  0070' C010' F00B'        	movff	pad@fp,fputs@fp
  2536  0074' C011' F00C'        	movff	pad@fp+1,fputs@fp+1
  2537  0078' EC00' F000'        	call	_fputs	;wreg free
  2538  007C'                    l1879:
  2539                           
  2540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2541  007C' C012' F000'        	movff	pad@buf,strlen@s
  2542  0080' C013' F001'        	movff	pad@buf+1,strlen@s+1
  2543  0084' EC00' F000'        	call	_strlen	;wreg free
  2544  0088' 5019'              	movf	pad@w,w,c
  2545  008A' 2400'              	addwf	?_strlen,w,c
  2546  008C' 6E10'              	movwf	?_pad,c
  2547  008E' 501A'              	movf	pad@w+1,w,c
  2548  0090' 2001'              	addwfc	?_strlen+1,w,c
  2549  0092' 6E11'              	movwf	?_pad+1,c
  2550  0094' 0012               	return		;funcret
  2551  0096'                    __end_of_pad:
  2552                           	opt callstack 0
  2553                           
  2554 ;; *************** function _strlen *****************
  2555 ;; Defined at:
  2556 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2559 ;;		 -> dbuf(32), 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2562 ;;		 -> dbuf(32), 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  2    0[COMRAM] unsigned int 
  2565 ;; Registers used:
  2566 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2572 ;;      Params:         2       0       0       0       0       0       0       0       0
  2573 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2575 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2576 ;;Total ram usage:        4 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_pad
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text10
  2586  0000'                    __ptext10:
  2587                           	opt callstack 0
  2588  0000'                    _strlen:
  2589                           	opt callstack 25
  2590                           
  2591                           ;incstack = 0
  2592  0000' C000' F002'        	movff	strlen@s,strlen@a
  2593  0004' C001' F003'        	movff	strlen@s+1,strlen@a+1
  2594  0008' D002               	goto	l1855
  2595  000A'                    l1853:
  2596  000A' 4A00'              	infsnz	strlen@s,f,c
  2597  000C' 2A01'              	incf	strlen@s+1,f,c
  2598  000E'                    l1855:
  2599  000E' C000' FFD9         	movff	strlen@s,fsr2l
  2600  0012' C001' FFDA         	movff	strlen@s+1,fsr2h
  2601  0016' 50DF               	movf	indf2,w,c
  2602  0018' A4D8               	btfss	status,2,c
  2603  001A' D7F7               	goto	l1853
  2604  001C' 5002'              	movf	strlen@a,w,c
  2605  001E' 5C00'              	subwf	strlen@s,w,c
  2606  0020' 6E00'              	movwf	?_strlen,c
  2607  0022' 5003'              	movf	strlen@a+1,w,c
  2608  0024' 5801'              	subwfb	strlen@s+1,w,c
  2609  0026' 6E01'              	movwf	?_strlen+1,c
  2610  0028' 0012               	return		;funcret
  2611  002A'                    __end_of_strlen:
  2612                           	opt callstack 0
  2613                           
  2614 ;; *************** function _fputs *****************
  2615 ;; Defined at:
  2616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2619 ;;		 -> dbuf(32), 
  2620 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2621 ;;		 -> sprintf@f(6), 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  i               2   14[COMRAM] int 
  2624 ;;  c               1   13[COMRAM] unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  2    9[COMRAM] int 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2634 ;;      Params:         4       0       0       0       0       0       0       0       0
  2635 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2637 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2638 ;;Total ram usage:        7 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    2
  2641 ;; This function calls:
  2642 ;;		_fputc
  2643 ;; This function is called by:
  2644 ;;		_pad
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text11
  2649  0000'                    __ptext11:
  2650                           	opt callstack 0
  2651  0000'                    _fputs:
  2652                           	opt callstack 23
  2653                           
  2654                           ;incstack = 0
  2655  0000' 0E00               	movlw	0
  2656  0002' 6E0F'              	movwf	fputs@i+1,c
  2657  0004' 0E00               	movlw	0
  2658  0006' 6E0E'              	movwf	fputs@i,c
  2659  0008' D00B               	goto	l1849
  2660  000A'                    l1845:
  2661  000A' C00D' F000'        	movff	fputs@c,fputc@c
  2662  000E' 6A01'              	clrf	fputc@c+1,c
  2663  0010' C00B' F002'        	movff	fputs@fp,fputc@fp
  2664  0014' C00C' F003'        	movff	fputs@fp+1,fputc@fp+1
  2665  0018' EC00' F000'        	call	_fputc	;wreg free
  2666  001C' 4A0E'              	infsnz	fputs@i,f,c
  2667  001E' 2A0F'              	incf	fputs@i+1,f,c
  2668  0020'                    l1849:
  2669  0020' 500E'              	movf	fputs@i,w,c
  2670  0022' 2409'              	addwf	fputs@s,w,c
  2671  0024' 6ED9               	movwf	fsr2l,c
  2672  0026' 500F'              	movf	fputs@i+1,w,c
  2673  0028' 200A'              	addwfc	fputs@s+1,w,c
  2674  002A' 6EDA               	movwf	fsr2h,c
  2675  002C' 50DF               	movf	indf2,w,c
  2676  002E' 6E0D'              	movwf	fputs@c,c
  2677  0030' 500D'              	movf	fputs@c,w,c
  2678  0032' B4D8               	btfsc	status,2,c
  2679  0034' 0012               	return	
  2680  0036' D7E9               	goto	l1845
  2681  0038'                    __end_of_fputs:
  2682                           	opt callstack 0
  2683                           
  2684 ;; *************** function _fputc *****************
  2685 ;; Defined at:
  2686 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  c               2    0[COMRAM] int 
  2689 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2690 ;;		 -> sprintf@f(6), 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  2    0[COMRAM] int 
  2695 ;; Registers used:
  2696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2702 ;;      Params:         4       0       0       0       0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2704 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2705 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2706 ;;Total ram usage:        9 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    1
  2709 ;; This function calls:
  2710 ;;		_putch
  2711 ;; This function is called by:
  2712 ;;		_pad
  2713 ;;		_vfpfcnvrt
  2714 ;;		_fputs
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text12
  2719  0000'                    __ptext12:
  2720                           	opt callstack 0
  2721  0000'                    _fputc:
  2722                           	opt callstack 26
  2723                           
  2724                           ;incstack = 0
  2725  0000' 5002'              	movf	fputc@fp,w,c
  2726  0002' 1003'              	iorwf	fputc@fp+1,w,c
  2727  0004' B4D8               	btfsc	status,2,c
  2728  0006' D004               	goto	u1410
  2729  0008' 5002'              	movf	fputc@fp,w,c
  2730  000A' 1003'              	iorwf	fputc@fp+1,w,c
  2731  000C' A4D8               	btfss	status,2,c
  2732  000E' D004               	goto	l1835
  2733  0010'                    u1410:
  2734  0010' 5000'              	movf	fputc@c,w,c
  2735  0012' EC00' F000'        	call	_putch
  2736  0016' 0012               	return	
  2737  0018'                    l1835:
  2738  0018' EE20 F004          	lfsr	2,4
  2739  001C' 5002'              	movf	fputc@fp,w,c
  2740  001E' 26D9               	addwf	fsr2l,f,c
  2741  0020' 5003'              	movf	fputc@fp+1,w,c
  2742  0022' 22DA               	addwfc	fsr2h,f,c
  2743  0024' 50DE               	movf	postinc2,w,c
  2744  0026' 10DE               	iorwf	postinc2,w,c
  2745  0028' B4D8               	btfsc	status,2,c
  2746  002A' D016               	goto	u1430
  2747  002C' EE20 F004          	lfsr	2,4
  2748  0030' 5002'              	movf	fputc@fp,w,c
  2749  0032' 26D9               	addwf	fsr2l,f,c
  2750  0034' 5003'              	movf	fputc@fp+1,w,c
  2751  0036' 22DA               	addwfc	fsr2h,f,c
  2752  0038' EE10 F002          	lfsr	1,2
  2753  003C' 5002'              	movf	fputc@fp,w,c
  2754  003E' 26E1               	addwf	fsr1l,f,c
  2755  0040' 5003'              	movf	fputc@fp+1,w,c
  2756  0042' 22E2               	addwfc	fsr1h,f,c
  2757  0044' 50DE               	movf	postinc2,w,c
  2758  0046' 5CE6               	subwf	postinc1,w,c
  2759  0048' 50E6               	movf	postinc1,w,c
  2760  004A' 0A80               	xorlw	128
  2761  004C' 6E00'              	movwf	(??_fputc+4)& (0+255),c
  2762  004E' 50DE               	movf	postinc2,w,c
  2763  0050' 0A80               	xorlw	128
  2764  0052' 5800'              	subwfb	(??_fputc+4)& (0+255),w,c
  2765  0054' B0D8               	btfsc	status,0,c
  2766  0056' 0012               	return	
  2767  0058'                    u1430:
  2768  0058' EE20 F002          	lfsr	2,2
  2769  005C' 5002'              	movf	fputc@fp,w,c
  2770  005E' 26D9               	addwf	fsr2l,f,c
  2771  0060' 5003'              	movf	fputc@fp+1,w,c
  2772  0062' 22DA               	addwfc	fsr2h,f,c
  2773  0064' CFDE F004'         	movff	postinc2,??_fputc
  2774  0068' CFDD F005'         	movff	postdec2,??_fputc+1
  2775  006C' C002' FFD9         	movff	fputc@fp,fsr2l
  2776  0070' C003' FFDA         	movff	fputc@fp+1,fsr2h
  2777  0074' CFDE F006'         	movff	postinc2,??_fputc+2
  2778  0078' CFDD F007'         	movff	postdec2,??_fputc+3
  2779  007C' 5004'              	movf	??_fputc,w,c
  2780  007E' 2406'              	addwf	??_fputc+2,w,c
  2781  0080' 6ED9               	movwf	fsr2l,c
  2782  0082' 5005'              	movf	??_fputc+1,w,c
  2783  0084' 2007'              	addwfc	??_fputc+3,w,c
  2784  0086' 6EDA               	movwf	fsr2h,c
  2785  0088' C000' FFDF         	movff	fputc@c,indf2
  2786  008C' EE20 F002          	lfsr	2,2
  2787  0090' 5002'              	movf	fputc@fp,w,c
  2788  0092' 26D9               	addwf	fsr2l,f,c
  2789  0094' 5003'              	movf	fputc@fp+1,w,c
  2790  0096' 22DA               	addwfc	fsr2h,f,c
  2791  0098' 2ADE               	incf	postinc2,f,c
  2792  009A' 0E00               	movlw	0
  2793  009C' 22DD               	addwfc	postdec2,f,c
  2794  009E' 0012               	return		;funcret
  2795  00A0'                    __end_of_fputc:
  2796                           	opt callstack 0
  2797                           
  2798 ;; *************** function _putch *****************
  2799 ;; Defined at:
  2800 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  c               1    wreg     unsigned char 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  c               1    0[COMRAM] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2814 ;;      Params:         0       0       0       0       0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2817 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_fputc
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text13
  2828  0000'                    __ptext13:
  2829                           	opt callstack 0
  2830  0000'                    _putch:
  2831                           	opt callstack 26
  2832                           
  2833                           ;incstack = 0
  2834  0000' 0012               	return		;funcret
  2835  0002'                    __end_of_putch:
  2836                           	opt callstack 0
  2837                           
  2838 ;; *************** function _servoRotate90 *****************
  2839 ;; Defined at:
  2840 ;;		line 16 in file "servo.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  i               2    1[COMRAM] unsigned int 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0
  2855 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2856 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2857 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2858 ;;Total ram usage:        3 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text14
  2868  0000'                    __ptext14:
  2869                           	opt callstack 0
  2870  0000'                    _servoRotate90:
  2871                           	opt callstack 30
  2872                           
  2873                           ;servo.c: 18:   unsigned int i;;servo.c: 19:   for(i=0;i<50;i++)
  2874                           
  2875                           ;incstack = 0
  2876  0000' 0E00               	movlw	0
  2877  0002' 6E02'              	movwf	servoRotate90@i+1,c
  2878  0004' 0E00               	movlw	0
  2879  0006' 6E01'              	movwf	servoRotate90@i,c
  2880  0008'                    l120:
  2881                           
  2882                           ;servo.c: 20:   {;servo.c: 21:     TRISCbits.TRISC2 = 1;
  2883  0008' 8494               	bsf	3988,2,c	;volatile
  2884                           
  2885                           ;servo.c: 22:       _delay((unsigned long)((1500)*(4000000/4000000.0)));
  2886  000A' 0ED6               	movlw	214
  2887  000C'                    u2807:
  2888  000C' D000               	nop2	
  2889  000E' D000               	nop2	
  2890  0010' 2EE8               	decfsz	wreg,f,c
  2891  0012' D7FC               	bra	u2807
  2892  0014' D000               	nop2	
  2893                           
  2894                           ;servo.c: 23:     TRISCbits.TRISC2 = 0;
  2895  0016' 9494               	bcf	3988,2,c	;volatile
  2896                           
  2897                           ;servo.c: 24:     _delay((unsigned long)((18500)*(4000000/4000000.0)));
  2898  0018' 0E19               	movlw	25
  2899  001A' 6E00'              	movwf	??_servoRotate90& (0+255),c
  2900  001C' 0E05               	movlw	5
  2901  001E'                    u2817:
  2902  001E' 2EE8               	decfsz	wreg,f,c
  2903  0020' D7FE               	bra	u2817
  2904  0022' 2E00'              	decfsz	??_servoRotate90& (0+255),f,c
  2905  0024' D7FC               	bra	u2817
  2906  0026' F000               	nop	
  2907                           
  2908                           ;servo.c: 25:   }
  2909  0028' 4A01'              	infsnz	servoRotate90@i,f,c
  2910  002A' 2A02'              	incf	servoRotate90@i+1,f,c
  2911  002C' 5002'              	movf	servoRotate90@i+1,w,c
  2912  002E' E105               	bnz	u1970
  2913  0030' 0E32               	movlw	50
  2914  0032' 5C01'              	subwf	servoRotate90@i,w,c
  2915  0034' B0D8               	btfsc	status,0,c
  2916  0036' 0012               	return	
  2917  0038' D7E7               	goto	l120
  2918  003A'                    u1970:
  2919  003A' 0012               	return		;funcret
  2920  003C'                    __end_of_servoRotate90:
  2921                           	opt callstack 0
  2922                           
  2923 ;; *************** function _servoRotate0 *****************
  2924 ;; Defined at:
  2925 ;;		line 5 in file "servo.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  i               2    1[COMRAM] unsigned int 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0
  2940 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2941 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2942 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2943 ;;Total ram usage:        3 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_main
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text15
  2953  0000'                    __ptext15:
  2954                           	opt callstack 0
  2955  0000'                    _servoRotate0:
  2956                           	opt callstack 30
  2957                           
  2958                           ;servo.c: 6:   unsigned int i;;servo.c: 7:   for(i=0;i<50;i++)
  2959                           
  2960                           ;incstack = 0
  2961  0000' 0E00               	movlw	0
  2962  0002' 6E02'              	movwf	servoRotate0@i+1,c
  2963  0004' 0E00               	movlw	0
  2964  0006' 6E01'              	movwf	servoRotate0@i,c
  2965  0008'                    l115:
  2966                           
  2967                           ;servo.c: 8:   {;servo.c: 9:     TRISCbits.TRISC2 = 1;
  2968  0008' 8494               	bsf	3988,2,c	;volatile
  2969                           
  2970                           ;servo.c: 10:     _delay((unsigned long)((800)*(4000000/4000000.0)));
  2971  000A' 0EA0               	movlw	160
  2972  000C'                    u2827:
  2973  000C' D000               	nop2	
  2974  000E' 2EE8               	decfsz	wreg,f,c
  2975  0010' D7FD               	bra	u2827
  2976                           
  2977                           ;servo.c: 11:     TRISCbits.TRISC2 = 0;
  2978  0012' 9494               	bcf	3988,2,c	;volatile
  2979                           
  2980                           ;servo.c: 12:     _delay((unsigned long)((19200)*(4000000/4000000.0)));
  2981  0014' 0E19               	movlw	25
  2982  0016' 6E00'              	movwf	??_servoRotate0& (0+255),c
  2983  0018' 0EEE               	movlw	238
  2984  001A'                    u2837:
  2985  001A' 2EE8               	decfsz	wreg,f,c
  2986  001C' D7FE               	bra	u2837
  2987  001E' 2E00'              	decfsz	??_servoRotate0& (0+255),f,c
  2988  0020' D7FC               	bra	u2837
  2989  0022' D000               	nop2	
  2990                           
  2991                           ;servo.c: 13:   }
  2992  0024' 4A01'              	infsnz	servoRotate0@i,f,c
  2993  0026' 2A02'              	incf	servoRotate0@i+1,f,c
  2994  0028' 5002'              	movf	servoRotate0@i+1,w,c
  2995  002A' E105               	bnz	u1960
  2996  002C' 0E32               	movlw	50
  2997  002E' 5C01'              	subwf	servoRotate0@i,w,c
  2998  0030' B0D8               	btfsc	status,0,c
  2999  0032' 0012               	return	
  3000  0034' D7E9               	goto	l115
  3001  0036'                    u1960:
  3002  0036' 0012               	return		;funcret
  3003  0038'                    __end_of_servoRotate0:
  3004                           	opt callstack 0
  3005                           
  3006 ;; *************** function _memset *****************
  3007 ;; Defined at:
  3008 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  dest            2    0[COMRAM] PTR void 
  3011 ;;		 -> main@Soil(10), main@Temperature(10), 
  3012 ;;  c               2    2[COMRAM] int 
  3013 ;;  n               2    4[COMRAM] unsigned int 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  s               2   10[COMRAM] PTR unsigned char 
  3016 ;;		 -> main@Soil(10), main@Temperature(10), 
  3017 ;;  k               2    8[COMRAM] unsigned int 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  2    0[COMRAM] PTR void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3027 ;;      Params:         6       0       0       0       0       0       0       0       0
  3028 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3029 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3030 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3031 ;;Total ram usage:       12 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text16
  3041  0000'                    __ptext16:
  3042                           	opt callstack 0
  3043  0000'                    _memset:
  3044                           	opt callstack 30
  3045                           
  3046                           ;incstack = 0
  3047  0000' C000' F00A'        	movff	memset@dest,memset@s
  3048  0004' C001' F00B'        	movff	memset@dest+1,memset@s+1
  3049  0008' 5004'              	movf	memset@n,w,c
  3050  000A' 1005'              	iorwf	memset@n+1,w,c
  3051  000C' B4D8               	btfsc	status,2,c
  3052  000E' 0012               	return	
  3053  0010' C00A' FFD9         	movff	memset@s,fsr2l
  3054  0014' C00B' FFDA         	movff	memset@s+1,fsr2h
  3055  0018' C002' FFDF         	movff	memset@c,indf2
  3056  001C' 5004'              	movf	memset@n,w,c
  3057  001E' 240A'              	addwf	memset@s,w,c
  3058  0020' 6E00'              	movwf	??_memset& (0+255),c
  3059  0022' 5005'              	movf	memset@n+1,w,c
  3060  0024' 200B'              	addwfc	memset@s+1,w,c
  3061  0026' 6E00'              	movwf	(??_memset+1)& (0+255),c
  3062  0028' 0EFF               	movlw	255
  3063  002A' 2406'              	addwf	??_memset,w,c
  3064  002C' 6ED9               	movwf	fsr2l,c
  3065  002E' 0EFF               	movlw	255
  3066  0030' 2007'              	addwfc	??_memset+1,w,c
  3067  0032' 6EDA               	movwf	fsr2h,c
  3068  0034' C002' FFDF         	movff	memset@c,indf2
  3069  0038' 5005'              	movf	memset@n+1,w,c
  3070  003A' E104               	bnz	l2221
  3071  003C' 0E03               	movlw	3
  3072  003E' 5C04'              	subwf	memset@n,w,c
  3073  0040' A0D8               	btfss	status,0,c
  3074  0042' 0012               	return	
  3075  0044'                    l2221:
  3076  0044' EE20 F001          	lfsr	2,1
  3077  0048' 500A'              	movf	memset@s,w,c
  3078  004A' 26D9               	addwf	fsr2l,f,c
  3079  004C' 500B'              	movf	memset@s+1,w,c
  3080  004E' 22DA               	addwfc	fsr2h,f,c
  3081  0050' C002' FFDF         	movff	memset@c,indf2
  3082  0054' EE20 F002          	lfsr	2,2
  3083  0058' 500A'              	movf	memset@s,w,c
  3084  005A' 26D9               	addwf	fsr2l,f,c
  3085  005C' 500B'              	movf	memset@s+1,w,c
  3086  005E' 22DA               	addwfc	fsr2h,f,c
  3087  0060' C002' FFDF         	movff	memset@c,indf2
  3088  0064' 5004'              	movf	memset@n,w,c
  3089  0066' 240A'              	addwf	memset@s,w,c
  3090  0068' 6E00'              	movwf	??_memset& (0+255),c
  3091  006A' 5005'              	movf	memset@n+1,w,c
  3092  006C' 200B'              	addwfc	memset@s+1,w,c
  3093  006E' 6E00'              	movwf	(??_memset+1)& (0+255),c
  3094  0070' 0EFE               	movlw	254
  3095  0072' 2406'              	addwf	??_memset,w,c
  3096  0074' 6ED9               	movwf	fsr2l,c
  3097  0076' 0EFF               	movlw	255
  3098  0078' 2007'              	addwfc	??_memset+1,w,c
  3099  007A' 6EDA               	movwf	fsr2h,c
  3100  007C' C002' FFDF         	movff	memset@c,indf2
  3101  0080' 5004'              	movf	memset@n,w,c
  3102  0082' 240A'              	addwf	memset@s,w,c
  3103  0084' 6E00'              	movwf	??_memset& (0+255),c
  3104  0086' 5005'              	movf	memset@n+1,w,c
  3105  0088' 200B'              	addwfc	memset@s+1,w,c
  3106  008A' 6E00'              	movwf	(??_memset+1)& (0+255),c
  3107  008C' 0EFD               	movlw	253
  3108  008E' 2406'              	addwf	??_memset,w,c
  3109  0090' 6ED9               	movwf	fsr2l,c
  3110  0092' 0EFF               	movlw	255
  3111  0094' 2007'              	addwfc	??_memset+1,w,c
  3112  0096' 6EDA               	movwf	fsr2h,c
  3113  0098' C002' FFDF         	movff	memset@c,indf2
  3114  009C' 5005'              	movf	memset@n+1,w,c
  3115  009E' E104               	bnz	l2227
  3116  00A0' 0E07               	movlw	7
  3117  00A2' 5C04'              	subwf	memset@n,w,c
  3118  00A4' A0D8               	btfss	status,0,c
  3119  00A6' 0012               	return	
  3120  00A8'                    l2227:
  3121  00A8' EE20 F003          	lfsr	2,3
  3122  00AC' 500A'              	movf	memset@s,w,c
  3123  00AE' 26D9               	addwf	fsr2l,f,c
  3124  00B0' 500B'              	movf	memset@s+1,w,c
  3125  00B2' 22DA               	addwfc	fsr2h,f,c
  3126  00B4' C002' FFDF         	movff	memset@c,indf2
  3127  00B8' 5004'              	movf	memset@n,w,c
  3128  00BA' 240A'              	addwf	memset@s,w,c
  3129  00BC' 6E00'              	movwf	??_memset& (0+255),c
  3130  00BE' 5005'              	movf	memset@n+1,w,c
  3131  00C0' 200B'              	addwfc	memset@s+1,w,c
  3132  00C2' 6E00'              	movwf	(??_memset+1)& (0+255),c
  3133  00C4' 0EFC               	movlw	252
  3134  00C6' 2406'              	addwf	??_memset,w,c
  3135  00C8' 6ED9               	movwf	fsr2l,c
  3136  00CA' 0EFF               	movlw	255
  3137  00CC' 2007'              	addwfc	??_memset+1,w,c
  3138  00CE' 6EDA               	movwf	fsr2h,c
  3139  00D0' C002' FFDF         	movff	memset@c,indf2
  3140  00D4' 5005'              	movf	memset@n+1,w,c
  3141  00D6' E104               	bnz	l2233
  3142  00D8' 0E09               	movlw	9
  3143  00DA' 5C04'              	subwf	memset@n,w,c
  3144  00DC' A0D8               	btfss	status,0,c
  3145  00DE' 0012               	return	
  3146  00E0'                    l2233:
  3147  00E0' C00A' F006'        	movff	memset@s,??_memset
  3148  00E4' C00B' F007'        	movff	memset@s+1,??_memset+1
  3149  00E8' 1E06'              	comf	??_memset,f,c
  3150  00EA' 1E07'              	comf	??_memset+1,f,c
  3151  00EC' 4A06'              	infsnz	??_memset,f,c
  3152  00EE' 2A07'              	incf	??_memset+1,f,c
  3153  00F0' 0E03               	movlw	3
  3154  00F2' 1406'              	andwf	??_memset,w,c
  3155  00F4' 6E08'              	movwf	memset@k,c
  3156  00F6' 6A09'              	clrf	memset@k+1,c
  3157  00F8' 5008'              	movf	memset@k,w,c
  3158  00FA' 260A'              	addwf	memset@s,f,c
  3159  00FC' 5009'              	movf	memset@k+1,w,c
  3160  00FE' 220B'              	addwfc	memset@s+1,f,c
  3161  0100' 5008'              	movf	memset@k,w,c
  3162  0102' 5E04'              	subwf	memset@n,f,c
  3163  0104' 5009'              	movf	memset@k+1,w,c
  3164  0106' 5A05'              	subwfb	memset@n+1,f,c
  3165  0108' 0EFC               	movlw	252
  3166  010A' 1604'              	andwf	memset@n,f,c
  3167  010C' 0EFF               	movlw	255
  3168  010E' 1605'              	andwf	memset@n+1,f,c
  3169  0110' D00B               	goto	l2241
  3170  0112'                    l2235:
  3171  0112' C00A' FFD9         	movff	memset@s,fsr2l
  3172  0116' C00B' FFDA         	movff	memset@s+1,fsr2h
  3173  011A' C002' FFDF         	movff	memset@c,indf2
  3174  011E' 0604'              	decf	memset@n,f,c
  3175  0120' A0D8               	btfss	status,0,c
  3176  0122' 0605'              	decf	memset@n+1,f,c
  3177  0124' 4A0A'              	infsnz	memset@s,f,c
  3178  0126' 2A0B'              	incf	memset@s+1,f,c
  3179  0128'                    l2241:
  3180  0128' 5004'              	movf	memset@n,w,c
  3181  012A' 1005'              	iorwf	memset@n+1,w,c
  3182  012C' B4D8               	btfsc	status,2,c
  3183  012E' 0012               	return	
  3184  0130' D7F0               	goto	l2235
  3185  0132'                    __end_of_memset:
  3186                           	opt callstack 0
  3187                           
  3188 ;; *************** function ___xxtofl *****************
  3189 ;; Defined at:
  3190 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  sign            1    wreg     unsigned char 
  3193 ;;  val             4   22[COMRAM] long 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  sign            1   30[COMRAM] unsigned char 
  3196 ;;  arg             4   32[COMRAM] unsigned long 
  3197 ;;  exp             1   31[COMRAM] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  4   22[COMRAM] unsigned char 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3207 ;;      Params:         4       0       0       0       0       0       0       0       0
  3208 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3209 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3210 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3211 ;;Total ram usage:       14 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_main
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text17
  3221  0000'                    __ptext17:
  3222                           	opt callstack 0
  3223  0000'                    ___xxtofl:
  3224                           	opt callstack 30
  3225                           
  3226                           ;incstack = 0
  3227                           ;___xxtofl@sign stored from wreg
  3228  0000' 6E1E'              	movwf	___xxtofl@sign,c
  3229  0002' 501E'              	movf	___xxtofl@sign,w,c
  3230  0004' A4D8               	btfss	status,2,c
  3231  0006' AE19'              	btfss	___xxtofl@val+3,7,c
  3232  0008' D01A               	goto	l860
  3233  000A' C016' F01A'        	movff	___xxtofl@val,??___xxtofl
  3234  000E' C017' F01B'        	movff	___xxtofl@val+1,??___xxtofl+1
  3235  0012' C018' F01C'        	movff	___xxtofl@val+2,??___xxtofl+2
  3236  0016' C019' F01D'        	movff	___xxtofl@val+3,??___xxtofl+3
  3237  001A' 1E1A'              	comf	??___xxtofl,f,c
  3238  001C' 1E1B'              	comf	??___xxtofl+1,f,c
  3239  001E' 1E1C'              	comf	??___xxtofl+2,f,c
  3240  0020' 1E1D'              	comf	??___xxtofl+3,f,c
  3241  0022' 2A1A'              	incf	??___xxtofl,f,c
  3242  0024' 0E00               	movlw	0
  3243  0026' 221B'              	addwfc	??___xxtofl+1,f,c
  3244  0028' 221C'              	addwfc	??___xxtofl+2,f,c
  3245  002A' 221D'              	addwfc	??___xxtofl+3,f,c
  3246  002C' C01A' F020'        	movff	??___xxtofl,___xxtofl@arg
  3247  0030' C01B' F021'        	movff	??___xxtofl+1,___xxtofl@arg+1
  3248  0034' C01C' F022'        	movff	??___xxtofl+2,___xxtofl@arg+2
  3249  0038' C01D' F023'        	movff	??___xxtofl+3,___xxtofl@arg+3
  3250  003C' D008               	goto	l2633
  3251  003E'                    l860:
  3252  003E' C016' F020'        	movff	___xxtofl@val,___xxtofl@arg
  3253  0042' C017' F021'        	movff	___xxtofl@val+1,___xxtofl@arg+1
  3254  0046' C018' F022'        	movff	___xxtofl@val+2,___xxtofl@arg+2
  3255  004A' C019' F023'        	movff	___xxtofl@val+3,___xxtofl@arg+3
  3256  004E'                    l2633:
  3257  004E' 5016'              	movf	___xxtofl@val,w,c
  3258  0050' 1017'              	iorwf	___xxtofl@val+1,w,c
  3259  0052' 1018'              	iorwf	___xxtofl@val+2,w,c
  3260  0054' 1019'              	iorwf	___xxtofl@val+3,w,c
  3261  0056' A4D8               	btfss	status,2,c
  3262  0058' D009               	goto	l2639
  3263  005A' 0E00               	movlw	0
  3264  005C' 6E16'              	movwf	?___xxtofl,c
  3265  005E' 0E00               	movlw	0
  3266  0060' 6E17'              	movwf	?___xxtofl+1,c
  3267  0062' 0E00               	movlw	0
  3268  0064' 6E18'              	movwf	?___xxtofl+2,c
  3269  0066' 0E00               	movlw	0
  3270  0068' 6E19'              	movwf	?___xxtofl+3,c
  3271  006A' 0012               	return	
  3272  006C'                    l2639:
  3273  006C' 0E96               	movlw	150
  3274  006E' 6E1F'              	movwf	___xxtofl@exp,c
  3275  0070' D006               	goto	l2643
  3276  0072'                    l2641:
  3277  0072' 2A1F'              	incf	___xxtofl@exp,f,c
  3278  0074' 90D8               	bcf	status,0,c
  3279  0076' 3223'              	rrcf	___xxtofl@arg+3,f,c
  3280  0078' 3222'              	rrcf	___xxtofl@arg+2,f,c
  3281  007A' 3221'              	rrcf	___xxtofl@arg+1,f,c
  3282  007C' 3220'              	rrcf	___xxtofl@arg,f,c
  3283  007E'                    l2643:
  3284  007E' 0E00               	movlw	0
  3285  0080' 1420'              	andwf	___xxtofl@arg,w,c
  3286  0082' 6E00'              	movwf	??___xxtofl& (0+255),c
  3287  0084' 0E00               	movlw	0
  3288  0086' 1421'              	andwf	___xxtofl@arg+1,w,c
  3289  0088' 6E00'              	movwf	(??___xxtofl+1)& (0+255),c
  3290  008A' 0E00               	movlw	0
  3291  008C' 1422'              	andwf	___xxtofl@arg+2,w,c
  3292  008E' 6E00'              	movwf	(??___xxtofl+2)& (0+255),c
  3293  0090' 0EFE               	movlw	254
  3294  0092' 1423'              	andwf	___xxtofl@arg+3,w,c
  3295  0094' 6E00'              	movwf	(??___xxtofl+3)& (0+255),c
  3296  0096' 501A'              	movf	??___xxtofl,w,c
  3297  0098' 101B'              	iorwf	??___xxtofl+1,w,c
  3298  009A' 101C'              	iorwf	??___xxtofl+2,w,c
  3299  009C' 101D'              	iorwf	??___xxtofl+3,w,c
  3300  009E' B4D8               	btfsc	status,2,c
  3301  00A0' D00D               	goto	l867
  3302  00A2' D7E7               	goto	l2641
  3303  00A4'                    l2645:
  3304  00A4' 2A1F'              	incf	___xxtofl@exp,f,c
  3305  00A6' 0E01               	movlw	1
  3306  00A8' 2620'              	addwf	___xxtofl@arg,f,c
  3307  00AA' 0E00               	movlw	0
  3308  00AC' 2221'              	addwfc	___xxtofl@arg+1,f,c
  3309  00AE' 2222'              	addwfc	___xxtofl@arg+2,f,c
  3310  00B0' 2223'              	addwfc	___xxtofl@arg+3,f,c
  3311  00B2' 90D8               	bcf	status,0,c
  3312  00B4' 3223'              	rrcf	___xxtofl@arg+3,f,c
  3313  00B6' 3222'              	rrcf	___xxtofl@arg+2,f,c
  3314  00B8' 3221'              	rrcf	___xxtofl@arg+1,f,c
  3315  00BA' 3220'              	rrcf	___xxtofl@arg,f,c
  3316  00BC'                    l867:
  3317  00BC' 0E00               	movlw	0
  3318  00BE' 1420'              	andwf	___xxtofl@arg,w,c
  3319  00C0' 6E00'              	movwf	??___xxtofl& (0+255),c
  3320  00C2' 0E00               	movlw	0
  3321  00C4' 1421'              	andwf	___xxtofl@arg+1,w,c
  3322  00C6' 6E00'              	movwf	(??___xxtofl+1)& (0+255),c
  3323  00C8' 0E00               	movlw	0
  3324  00CA' 1422'              	andwf	___xxtofl@arg+2,w,c
  3325  00CC' 6E00'              	movwf	(??___xxtofl+2)& (0+255),c
  3326  00CE' 0EFF               	movlw	255
  3327  00D0' 1423'              	andwf	___xxtofl@arg+3,w,c
  3328  00D2' 6E00'              	movwf	(??___xxtofl+3)& (0+255),c
  3329  00D4' 501A'              	movf	??___xxtofl,w,c
  3330  00D6' 101B'              	iorwf	??___xxtofl+1,w,c
  3331  00D8' 101C'              	iorwf	??___xxtofl+2,w,c
  3332  00DA' 101D'              	iorwf	??___xxtofl+3,w,c
  3333  00DC' B4D8               	btfsc	status,2,c
  3334  00DE' D007               	goto	l2653
  3335  00E0' D7E1               	goto	l2645
  3336  00E2'                    l2651:
  3337  00E2' 061F'              	decf	___xxtofl@exp,f,c
  3338  00E4' 90D8               	bcf	status,0,c
  3339  00E6' 3620'              	rlcf	___xxtofl@arg,f,c
  3340  00E8' 3621'              	rlcf	___xxtofl@arg+1,f,c
  3341  00EA' 3622'              	rlcf	___xxtofl@arg+2,f,c
  3342  00EC' 3623'              	rlcf	___xxtofl@arg+3,f,c
  3343  00EE'                    l2653:
  3344  00EE' BE22'              	btfsc	___xxtofl@arg+2,7,c
  3345  00F0' D003               	goto	u2700
  3346  00F2' 0E02               	movlw	2
  3347  00F4' 601F'              	cpfslt	___xxtofl@exp,c
  3348  00F6' D7F5               	goto	l2651
  3349  00F8'                    u2700:
  3350  00F8' A01F'              	btfss	___xxtofl@exp,0,c
  3351  00FA' 9E22'              	bcf	___xxtofl@arg+2,7,c
  3352  00FC' 90D8               	bcf	status,0,c
  3353  00FE' 321F'              	rrcf	___xxtofl@exp,f,c
  3354  0100' C01F' F01A'        	movff	___xxtofl@exp,??___xxtofl
  3355  0104' 6A00'              	clrf	(??___xxtofl+1)& (0+255),c
  3356  0106' 6A00'              	clrf	(??___xxtofl+2)& (0+255),c
  3357  0108' 6A00'              	clrf	(??___xxtofl+3)& (0+255),c
  3358  010A' C01A' F01D'        	movff	??___xxtofl,??___xxtofl+3
  3359  010E' 6A1C'              	clrf	??___xxtofl+2,c
  3360  0110' 6A1B'              	clrf	??___xxtofl+1,c
  3361  0112' 6A1A'              	clrf	??___xxtofl,c
  3362  0114' 501A'              	movf	??___xxtofl,w,c
  3363  0116' 1220'              	iorwf	___xxtofl@arg,f,c
  3364  0118' 501B'              	movf	??___xxtofl+1,w,c
  3365  011A' 1221'              	iorwf	___xxtofl@arg+1,f,c
  3366  011C' 501C'              	movf	??___xxtofl+2,w,c
  3367  011E' 1222'              	iorwf	___xxtofl@arg+2,f,c
  3368  0120' 501D'              	movf	??___xxtofl+3,w,c
  3369  0122' 1223'              	iorwf	___xxtofl@arg+3,f,c
  3370  0124' 501E'              	movf	___xxtofl@sign,w,c
  3371  0126' A4D8               	btfss	status,2,c
  3372  0128' AE19'              	btfss	___xxtofl@val+3,7,c
  3373  012A' D001               	goto	l2669
  3374  012C' 8E23'              	bsf	___xxtofl@arg+3,7,c
  3375  012E'                    l2669:
  3376  012E' C020' F016'        	movff	___xxtofl@arg,?___xxtofl
  3377  0132' C021' F017'        	movff	___xxtofl@arg+1,?___xxtofl+1
  3378  0136' C022' F018'        	movff	___xxtofl@arg+2,?___xxtofl+2
  3379  013A' C023' F019'        	movff	___xxtofl@arg+3,?___xxtofl+3
  3380  013E' 0012               	return		;funcret
  3381  0140'                    __end_of___xxtofl:
  3382                           	opt callstack 0
  3383                           
  3384 ;; *************** function ___wmul *****************
  3385 ;; Defined at:
  3386 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  multiplier      2    8[COMRAM] unsigned int 
  3389 ;;  multiplicand    2   10[COMRAM] unsigned int 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  product         2   12[COMRAM] unsigned int 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  2    8[COMRAM] unsigned int 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, prodl, prodh
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3401 ;;      Params:         4       0       0       0       0       0       0       0       0
  3402 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3404 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3405 ;;Total ram usage:        6 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_main
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text18
  3415  0000'                    __ptext18:
  3416                           	opt callstack 0
  3417  0000'                    ___wmul:
  3418                           	opt callstack 30
  3419                           
  3420                           ;incstack = 0
  3421  0000' 5008'              	movf	___wmul@multiplier,w,c
  3422  0002' 020A'              	mulwf	___wmul@multiplicand,c
  3423  0004' CFF3 F00C'         	movff	prodl,___wmul@product
  3424  0008' CFF4 F00D'         	movff	prodh,___wmul@product+1
  3425  000C' 5008'              	movf	___wmul@multiplier,w,c
  3426  000E' 020B'              	mulwf	___wmul@multiplicand+1,c
  3427  0010' 50F3               	movf	prodl,w,c
  3428  0012' 260D'              	addwf	___wmul@product+1,f,c
  3429  0014' 5009'              	movf	___wmul@multiplier+1,w,c
  3430  0016' 020A'              	mulwf	___wmul@multiplicand,c
  3431  0018' 50F3               	movf	prodl,w,c
  3432  001A' 260D'              	addwf	___wmul@product+1,f,c
  3433  001C' C00C' F008'        	movff	___wmul@product,?___wmul
  3434  0020' C00D' F009'        	movff	___wmul@product+1,?___wmul+1
  3435  0024' 0012               	return		;funcret
  3436  0026'                    __end_of___wmul:
  3437                           	opt callstack 0
  3438                           
  3439 ;; *************** function ___fltol *****************
  3440 ;; Defined at:
  3441 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  f1              4    0[COMRAM] unsigned int 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  exp1            1    9[COMRAM] unsigned char 
  3446 ;;  sign1           1    8[COMRAM] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  4    0[COMRAM] long 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3456 ;;      Params:         4       0       0       0       0       0       0       0       0
  3457 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3458 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3459 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3460 ;;Total ram usage:       10 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_main
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text19
  3470  0000'                    __ptext19:
  3471                           	opt callstack 0
  3472  0000'                    ___fltol:
  3473                           	opt callstack 30
  3474                           
  3475                           ;incstack = 0
  3476  0000' 3402'              	rlcf	___fltol@f1+2,w,c
  3477  0002' 3403'              	rlcf	___fltol@f1+3,w,c
  3478  0004' 6E09'              	movwf	___fltol@exp1,c
  3479  0006' 5009'              	movf	___fltol@exp1,w,c
  3480  0008' A4D8               	btfss	status,2,c
  3481  000A' D009               	goto	l2589
  3482  000C'                    u2570:
  3483  000C' 0E00               	movlw	0
  3484  000E' 6E00'              	movwf	?___fltol,c
  3485  0010' 0E00               	movlw	0
  3486  0012' 6E01'              	movwf	?___fltol+1,c
  3487  0014' 0E00               	movlw	0
  3488  0016' 6E02'              	movwf	?___fltol+2,c
  3489  0018' 0E00               	movlw	0
  3490  001A' 6E03'              	movwf	?___fltol+3,c
  3491  001C' 0012               	return	
  3492  001E'                    l2589:
  3493  001E' C000' F004'        	movff	___fltol@f1,??___fltol
  3494  0022' C001' F005'        	movff	___fltol@f1+1,??___fltol+1
  3495  0026' C002' F006'        	movff	___fltol@f1+2,??___fltol+2
  3496  002A' C003' F007'        	movff	___fltol@f1+3,??___fltol+3
  3497  002E' 0E20               	movlw	32
  3498  0030' D005               	goto	u2580
  3499  0032'                    u2585:
  3500  0032' 90D8               	bcf	status,0,c
  3501  0034' 3207'              	rrcf	??___fltol+3,f,c
  3502  0036' 3206'              	rrcf	??___fltol+2,f,c
  3503  0038' 3205'              	rrcf	??___fltol+1,f,c
  3504  003A' 3204'              	rrcf	??___fltol,f,c
  3505  003C'                    u2580:
  3506  003C' 2EE8               	decfsz	wreg,f,c
  3507  003E' D7F9               	goto	u2585
  3508  0040' 5004'              	movf	??___fltol,w,c
  3509  0042' 6E08'              	movwf	___fltol@sign1,c
  3510  0044' 8E02'              	bsf	___fltol@f1+2,7,c
  3511  0046' 0EFF               	movlw	255
  3512  0048' 1600'              	andwf	___fltol@f1,f,c
  3513  004A' 0EFF               	movlw	255
  3514  004C' 1601'              	andwf	___fltol@f1+1,f,c
  3515  004E' 0EFF               	movlw	255
  3516  0050' 1602'              	andwf	___fltol@f1+2,f,c
  3517  0052' 0E00               	movlw	0
  3518  0054' 1603'              	andwf	___fltol@f1+3,f,c
  3519  0056' 0E96               	movlw	150
  3520  0058' 5E09'              	subwf	___fltol@exp1,f,c
  3521  005A' AE09'              	btfss	___fltol@exp1,7,c
  3522  005C' D00D               	goto	l2609
  3523  005E' 5009'              	movf	___fltol@exp1,w,c
  3524  0060' 0A80               	xorlw	128
  3525  0062' 0F97               	addlw	151
  3526  0064' A0D8               	btfss	status,0,c
  3527  0066' D7D2               	goto	u2570
  3528  0068'                    l2605:
  3529  0068' 90D8               	bcf	status,0,c
  3530  006A' 3203'              	rrcf	___fltol@f1+3,f,c
  3531  006C' 3202'              	rrcf	___fltol@f1+2,f,c
  3532  006E' 3201'              	rrcf	___fltol@f1+1,f,c
  3533  0070' 3200'              	rrcf	___fltol@f1,f,c
  3534  0072' 3E09'              	incfsz	___fltol@exp1,f,c
  3535  0074' D7F9               	goto	l2605
  3536  0076' D00D               	goto	u2620
  3537  0078'                    l2609:
  3538  0078' 0E1F               	movlw	31
  3539  007A' 6409'              	cpfsgt	___fltol@exp1,c
  3540  007C' D007               	goto	l2617
  3541  007E' D7C6               	goto	u2570
  3542  0080'                    l2615:
  3543  0080' 90D8               	bcf	status,0,c
  3544  0082' 3600'              	rlcf	___fltol@f1,f,c
  3545  0084' 3601'              	rlcf	___fltol@f1+1,f,c
  3546  0086' 3602'              	rlcf	___fltol@f1+2,f,c
  3547  0088' 3603'              	rlcf	___fltol@f1+3,f,c
  3548  008A' 0609'              	decf	___fltol@exp1,f,c
  3549  008C'                    l2617:
  3550  008C' 5009'              	movf	___fltol@exp1,w,c
  3551  008E' A4D8               	btfss	status,2,c
  3552  0090' D7F7               	goto	l2615
  3553  0092'                    u2620:
  3554  0092' 5008'              	movf	___fltol@sign1,w,c
  3555  0094' B4D8               	btfsc	status,2,c
  3556  0096' D008               	goto	l2623
  3557  0098' 1E03'              	comf	___fltol@f1+3,f,c
  3558  009A' 1E02'              	comf	___fltol@f1+2,f,c
  3559  009C' 1E01'              	comf	___fltol@f1+1,f,c
  3560  009E' 6C00'              	negf	___fltol@f1,c
  3561  00A0' 0E00               	movlw	0
  3562  00A2' 2201'              	addwfc	___fltol@f1+1,f,c
  3563  00A4' 2202'              	addwfc	___fltol@f1+2,f,c
  3564  00A6' 2203'              	addwfc	___fltol@f1+3,f,c
  3565  00A8'                    l2623:
  3566  00A8' C000' F000'        	movff	___fltol@f1,?___fltol
  3567  00AC' C001' F001'        	movff	___fltol@f1+1,?___fltol+1
  3568  00B0' C002' F002'        	movff	___fltol@f1+2,?___fltol+2
  3569  00B4' C003' F003'        	movff	___fltol@f1+3,?___fltol+3
  3570  00B8' 0012               	return		;funcret
  3571  00BA'                    __end_of___fltol:
  3572                           	opt callstack 0
  3573                           
  3574 ;; *************** function ___flmul *****************
  3575 ;; Defined at:
  3576 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  b               4   36[COMRAM] long 
  3579 ;;  a               4   40[COMRAM] long 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  prod            4   55[COMRAM] struct .
  3582 ;;  grs             4   49[COMRAM] unsigned long 
  3583 ;;  temp            2   59[COMRAM] struct .
  3584 ;;  bexp            1   54[COMRAM] unsigned char 
  3585 ;;  aexp            1   53[COMRAM] unsigned char 
  3586 ;;  sign            1   48[COMRAM] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  4   36[COMRAM] unsigned char 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0, prodl, prodh
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3596 ;;      Params:         8       0       0       0       0       0       0       0       0
  3597 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3598 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3599 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3600 ;;Total ram usage:       25 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text20
  3610  0000'                    __ptext20:
  3611                           	opt callstack 0
  3612  0000'                    ___flmul:
  3613                           	opt callstack 30
  3614                           
  3615                           ;incstack = 0
  3616  0000' 5027'              	movf	___flmul@b+3,w,c
  3617  0002' 0B80               	andlw	128
  3618  0004' 6E30'              	movwf	___flmul@sign,c
  3619  0006' 5027'              	movf	___flmul@b+3,w,c
  3620  0008' 2427'              	addwf	___flmul@b+3,w,c
  3621  000A' 6E36'              	movwf	___flmul@bexp,c
  3622  000C' BE26'              	btfsc	___flmul@b+2,7,c
  3623  000E' 8036'              	bsf	___flmul@bexp,0,c
  3624  0010' 5036'              	movf	___flmul@bexp,w,c
  3625  0012' B4D8               	btfsc	status,2,c
  3626  0014' D00D               	goto	l2401
  3627  0016' 2836'              	incf	___flmul@bexp,w,c
  3628  0018' A4D8               	btfss	status,2,c
  3629  001A' D008               	goto	l2399
  3630  001C' 0E00               	movlw	0
  3631  001E' 6E24'              	movwf	___flmul@b,c
  3632  0020' 0E00               	movlw	0
  3633  0022' 6E25'              	movwf	___flmul@b+1,c
  3634  0024' 0E00               	movlw	0
  3635  0026' 6E26'              	movwf	___flmul@b+2,c
  3636  0028' 0E00               	movlw	0
  3637  002A' 6E27'              	movwf	___flmul@b+3,c
  3638  002C'                    l2399:
  3639  002C' 8E26'              	bsf	___flmul@b+2,7,c
  3640  002E' D008               	goto	l2403
  3641  0030'                    l2401:
  3642  0030' 0E00               	movlw	0
  3643  0032' 6E24'              	movwf	___flmul@b,c
  3644  0034' 0E00               	movlw	0
  3645  0036' 6E25'              	movwf	___flmul@b+1,c
  3646  0038' 0E00               	movlw	0
  3647  003A' 6E26'              	movwf	___flmul@b+2,c
  3648  003C' 0E00               	movlw	0
  3649  003E' 6E27'              	movwf	___flmul@b+3,c
  3650  0040'                    l2403:
  3651  0040' 502B'              	movf	___flmul@a+3,w,c
  3652  0042' 0B80               	andlw	128
  3653  0044' 1A30'              	xorwf	___flmul@sign,f,c
  3654  0046' 502B'              	movf	___flmul@a+3,w,c
  3655  0048' 242B'              	addwf	___flmul@a+3,w,c
  3656  004A' 6E35'              	movwf	___flmul@aexp,c
  3657  004C' BE2A'              	btfsc	___flmul@a+2,7,c
  3658  004E' 8035'              	bsf	___flmul@aexp,0,c
  3659  0050' 5035'              	movf	___flmul@aexp,w,c
  3660  0052' B4D8               	btfsc	status,2,c
  3661  0054' D00D               	goto	l2419
  3662  0056' 2835'              	incf	___flmul@aexp,w,c
  3663  0058' A4D8               	btfss	status,2,c
  3664  005A' D008               	goto	l2417
  3665  005C' 0E00               	movlw	0
  3666  005E' 6E28'              	movwf	___flmul@a,c
  3667  0060' 0E00               	movlw	0
  3668  0062' 6E29'              	movwf	___flmul@a+1,c
  3669  0064' 0E00               	movlw	0
  3670  0066' 6E2A'              	movwf	___flmul@a+2,c
  3671  0068' 0E00               	movlw	0
  3672  006A' 6E2B'              	movwf	___flmul@a+3,c
  3673  006C'                    l2417:
  3674  006C' 8E2A'              	bsf	___flmul@a+2,7,c
  3675  006E' D008               	goto	l819
  3676  0070'                    l2419:
  3677  0070' 0E00               	movlw	0
  3678  0072' 6E28'              	movwf	___flmul@a,c
  3679  0074' 0E00               	movlw	0
  3680  0076' 6E29'              	movwf	___flmul@a+1,c
  3681  0078' 0E00               	movlw	0
  3682  007A' 6E2A'              	movwf	___flmul@a+2,c
  3683  007C' 0E00               	movlw	0
  3684  007E' 6E2B'              	movwf	___flmul@a+3,c
  3685  0080'                    l819:
  3686  0080' 5035'              	movf	___flmul@aexp,w,c
  3687  0082' B4D8               	btfsc	status,2,c
  3688  0084' D003               	goto	u2340
  3689  0086' 5036'              	movf	___flmul@bexp,w,c
  3690  0088' A4D8               	btfss	status,2,c
  3691  008A' D009               	goto	l2427
  3692  008C'                    u2340:
  3693  008C' 0E00               	movlw	0
  3694  008E' 6E24'              	movwf	?___flmul,c
  3695  0090' 0E00               	movlw	0
  3696  0092' 6E25'              	movwf	?___flmul+1,c
  3697  0094' 0E00               	movlw	0
  3698  0096' 6E26'              	movwf	?___flmul+2,c
  3699  0098' 0E00               	movlw	0
  3700  009A' 6E27'              	movwf	?___flmul+3,c
  3701  009C' 0012               	return	
  3702  009E'                    l2427:
  3703  009E' 502A'              	movf	___flmul@a+2,w,c
  3704  00A0' 0224'              	mulwf	___flmul@b,c
  3705  00A2' CFF3 F03B'         	movff	prodl,___flmul@temp
  3706  00A6' CFF4 F03C'         	movff	prodh,___flmul@temp+1
  3707  00AA' 503B'              	movf	___flmul@temp,w,c
  3708  00AC' 6E31'              	movwf	___flmul@grs,c
  3709  00AE' 6A32'              	clrf	___flmul@grs+1,c
  3710  00B0' 6A33'              	clrf	___flmul@grs+2,c
  3711  00B2' 6A34'              	clrf	___flmul@grs+3,c
  3712  00B4' 503C'              	movf	___flmul@temp+1,w,c
  3713  00B6' 6E37'              	movwf	___flmul@prod,c
  3714  00B8' 6A38'              	clrf	___flmul@prod+1,c
  3715  00BA' 6A39'              	clrf	___flmul@prod+2,c
  3716  00BC' 6A3A'              	clrf	___flmul@prod+3,c
  3717  00BE' 5029'              	movf	___flmul@a+1,w,c
  3718  00C0' 0225'              	mulwf	___flmul@b+1,c
  3719  00C2' CFF3 F03B'         	movff	prodl,___flmul@temp
  3720  00C6' CFF4 F03C'         	movff	prodh,___flmul@temp+1
  3721  00CA' 503B'              	movf	___flmul@temp,w,c
  3722  00CC' 2631'              	addwf	___flmul@grs,f,c
  3723  00CE' 0E00               	movlw	0
  3724  00D0' 2232'              	addwfc	___flmul@grs+1,f,c
  3725  00D2' 2233'              	addwfc	___flmul@grs+2,f,c
  3726  00D4' 2234'              	addwfc	___flmul@grs+3,f,c
  3727  00D6' 503C'              	movf	___flmul@temp+1,w,c
  3728  00D8' 2637'              	addwf	___flmul@prod,f,c
  3729  00DA' 0E00               	movlw	0
  3730  00DC' 2238'              	addwfc	___flmul@prod+1,f,c
  3731  00DE' 2239'              	addwfc	___flmul@prod+2,f,c
  3732  00E0' 223A'              	addwfc	___flmul@prod+3,f,c
  3733  00E2' 5028'              	movf	___flmul@a,w,c
  3734  00E4' 0226'              	mulwf	___flmul@b+2,c
  3735  00E6' CFF3 F03B'         	movff	prodl,___flmul@temp
  3736  00EA' CFF4 F03C'         	movff	prodh,___flmul@temp+1
  3737  00EE' 503B'              	movf	___flmul@temp,w,c
  3738  00F0' 2631'              	addwf	___flmul@grs,f,c
  3739  00F2' 0E00               	movlw	0
  3740  00F4' 2232'              	addwfc	___flmul@grs+1,f,c
  3741  00F6' 2233'              	addwfc	___flmul@grs+2,f,c
  3742  00F8' 2234'              	addwfc	___flmul@grs+3,f,c
  3743  00FA' 503C'              	movf	___flmul@temp+1,w,c
  3744  00FC' 2637'              	addwf	___flmul@prod,f,c
  3745  00FE' 0E00               	movlw	0
  3746  0100' 2238'              	addwfc	___flmul@prod+1,f,c
  3747  0102' 2239'              	addwfc	___flmul@prod+2,f,c
  3748  0104' 223A'              	addwfc	___flmul@prod+3,f,c
  3749  0106' C033' F034'        	movff	___flmul@grs+2,___flmul@grs+3
  3750  010A' C032' F033'        	movff	___flmul@grs+1,___flmul@grs+2
  3751  010E' C031' F032'        	movff	___flmul@grs,___flmul@grs+1
  3752  0112' 6A31'              	clrf	___flmul@grs,c
  3753  0114' 5028'              	movf	___flmul@a,w,c
  3754  0116' 0225'              	mulwf	___flmul@b+1,c
  3755  0118' CFF3 F03B'         	movff	prodl,___flmul@temp
  3756  011C' CFF4 F03C'         	movff	prodh,___flmul@temp+1
  3757  0120' 503B'              	movf	___flmul@temp,w,c
  3758  0122' 2631'              	addwf	___flmul@grs,f,c
  3759  0124' 503C'              	movf	___flmul@temp+1,w,c
  3760  0126' 2232'              	addwfc	___flmul@grs+1,f,c
  3761  0128' 0E00               	movlw	0
  3762  012A' 2233'              	addwfc	___flmul@grs+2,f,c
  3763  012C' 0E00               	movlw	0
  3764  012E' 2234'              	addwfc	___flmul@grs+3,f,c
  3765  0130' 5029'              	movf	___flmul@a+1,w,c
  3766  0132' 0224'              	mulwf	___flmul@b,c
  3767  0134' CFF3 F03B'         	movff	prodl,___flmul@temp
  3768  0138' CFF4 F03C'         	movff	prodh,___flmul@temp+1
  3769  013C' 503B'              	movf	___flmul@temp,w,c
  3770  013E' 2631'              	addwf	___flmul@grs,f,c
  3771  0140' 503C'              	movf	___flmul@temp+1,w,c
  3772  0142' 2232'              	addwfc	___flmul@grs+1,f,c
  3773  0144' 0E00               	movlw	0
  3774  0146' 2233'              	addwfc	___flmul@grs+2,f,c
  3775  0148' 0E00               	movlw	0
  3776  014A' 2234'              	addwfc	___flmul@grs+3,f,c
  3777  014C' C033' F034'        	movff	___flmul@grs+2,___flmul@grs+3
  3778  0150' C032' F033'        	movff	___flmul@grs+1,___flmul@grs+2
  3779  0154' C031' F032'        	movff	___flmul@grs,___flmul@grs+1
  3780  0158' 6A31'              	clrf	___flmul@grs,c
  3781  015A' 5028'              	movf	___flmul@a,w,c
  3782  015C' 0224'              	mulwf	___flmul@b,c
  3783  015E' CFF3 F03B'         	movff	prodl,___flmul@temp
  3784  0162' CFF4 F03C'         	movff	prodh,___flmul@temp+1
  3785  0166' 503B'              	movf	___flmul@temp,w,c
  3786  0168' 2631'              	addwf	___flmul@grs,f,c
  3787  016A' 503C'              	movf	___flmul@temp+1,w,c
  3788  016C' 2232'              	addwfc	___flmul@grs+1,f,c
  3789  016E' 0E00               	movlw	0
  3790  0170' 2233'              	addwfc	___flmul@grs+2,f,c
  3791  0172' 0E00               	movlw	0
  3792  0174' 2234'              	addwfc	___flmul@grs+3,f,c
  3793  0176' 502A'              	movf	___flmul@a+2,w,c
  3794  0178' 0225'              	mulwf	___flmul@b+1,c
  3795  017A' CFF3 F03B'         	movff	prodl,___flmul@temp
  3796  017E' CFF4 F03C'         	movff	prodh,___flmul@temp+1
  3797  0182' 503B'              	movf	___flmul@temp,w,c
  3798  0184' 2637'              	addwf	___flmul@prod,f,c
  3799  0186' 503C'              	movf	___flmul@temp+1,w,c
  3800  0188' 2238'              	addwfc	___flmul@prod+1,f,c
  3801  018A' 0E00               	movlw	0
  3802  018C' 2239'              	addwfc	___flmul@prod+2,f,c
  3803  018E' 0E00               	movlw	0
  3804  0190' 223A'              	addwfc	___flmul@prod+3,f,c
  3805  0192' 5029'              	movf	___flmul@a+1,w,c
  3806  0194' 0226'              	mulwf	___flmul@b+2,c
  3807  0196' CFF3 F03B'         	movff	prodl,___flmul@temp
  3808  019A' CFF4 F03C'         	movff	prodh,___flmul@temp+1
  3809  019E' 503B'              	movf	___flmul@temp,w,c
  3810  01A0' 2637'              	addwf	___flmul@prod,f,c
  3811  01A2' 503C'              	movf	___flmul@temp+1,w,c
  3812  01A4' 2238'              	addwfc	___flmul@prod+1,f,c
  3813  01A6' 0E00               	movlw	0
  3814  01A8' 2239'              	addwfc	___flmul@prod+2,f,c
  3815  01AA' 0E00               	movlw	0
  3816  01AC' 223A'              	addwfc	___flmul@prod+3,f,c
  3817  01AE' 502A'              	movf	___flmul@a+2,w,c
  3818  01B0' 0226'              	mulwf	___flmul@b+2,c
  3819  01B2' CFF3 F03B'         	movff	prodl,___flmul@temp
  3820  01B6' CFF4 F03C'         	movff	prodh,___flmul@temp+1
  3821  01BA' 503B'              	movf	___flmul@temp,w,c
  3822  01BC' 6E00'              	movwf	??___flmul& (0+255),c
  3823  01BE' 503C'              	movf	___flmul@temp+1,w,c
  3824  01C0' 6E00'              	movwf	(??___flmul+1)& (0+255),c
  3825  01C2' 6A00'              	clrf	(??___flmul+2)& (0+255),c
  3826  01C4' 6A00'              	clrf	(??___flmul+3)& (0+255),c
  3827  01C6' C02E' F02F'        	movff	??___flmul+2,??___flmul+3
  3828  01CA' C02D' F02E'        	movff	??___flmul+1,??___flmul+2
  3829  01CE' C02C' F02D'        	movff	??___flmul,??___flmul+1
  3830  01D2' 6A2C'              	clrf	??___flmul,c
  3831  01D4' 502C'              	movf	??___flmul,w,c
  3832  01D6' 2637'              	addwf	___flmul@prod,f,c
  3833  01D8' 502D'              	movf	??___flmul+1,w,c
  3834  01DA' 2238'              	addwfc	___flmul@prod+1,f,c
  3835  01DC' 502E'              	movf	??___flmul+2,w,c
  3836  01DE' 2239'              	addwfc	___flmul@prod+2,f,c
  3837  01E0' 502F'              	movf	??___flmul+3,w,c
  3838  01E2' 223A'              	addwfc	___flmul@prod+3,f,c
  3839  01E4' C031' F02C'        	movff	___flmul@grs,??___flmul
  3840  01E8' C032' F02D'        	movff	___flmul@grs+1,??___flmul+1
  3841  01EC' C033' F02E'        	movff	___flmul@grs+2,??___flmul+2
  3842  01F0' C034' F02F'        	movff	___flmul@grs+3,??___flmul+3
  3843  01F4' 0E19               	movlw	25
  3844  01F6' D005               	goto	u2350
  3845  01F8'                    u2355:
  3846  01F8' 90D8               	bcf	status,0,c
  3847  01FA' 322F'              	rrcf	??___flmul+3,f,c
  3848  01FC' 322E'              	rrcf	??___flmul+2,f,c
  3849  01FE' 322D'              	rrcf	??___flmul+1,f,c
  3850  0200' 322C'              	rrcf	??___flmul,f,c
  3851  0202'                    u2350:
  3852  0202' 2EE8               	decfsz	wreg,f,c
  3853  0204' D7F9               	goto	u2355
  3854  0206' 502C'              	movf	??___flmul,w,c
  3855  0208' 2637'              	addwf	___flmul@prod,f,c
  3856  020A' 502D'              	movf	??___flmul+1,w,c
  3857  020C' 2238'              	addwfc	___flmul@prod+1,f,c
  3858  020E' 502E'              	movf	??___flmul+2,w,c
  3859  0210' 2239'              	addwfc	___flmul@prod+2,f,c
  3860  0212' 502F'              	movf	??___flmul+3,w,c
  3861  0214' 223A'              	addwfc	___flmul@prod+3,f,c
  3862  0216' C033' F034'        	movff	___flmul@grs+2,___flmul@grs+3
  3863  021A' C032' F033'        	movff	___flmul@grs+1,___flmul@grs+2
  3864  021E' C031' F032'        	movff	___flmul@grs,___flmul@grs+1
  3865  0222' 6A31'              	clrf	___flmul@grs,c
  3866  0224' 5035'              	movf	___flmul@aexp,w,c
  3867  0226' C036' F02C'        	movff	___flmul@bexp,??___flmul
  3868  022A' 6A00'              	clrf	(??___flmul+1)& (0+255),c
  3869  022C' 262C'              	addwf	??___flmul,f,c
  3870  022E' 0E00               	movlw	0
  3871  0230' 222D'              	addwfc	??___flmul+1,f,c
  3872  0232' 0E82               	movlw	130
  3873  0234' 242C'              	addwf	??___flmul,w,c
  3874  0236' 6E3B'              	movwf	___flmul@temp,c
  3875  0238' 0EFF               	movlw	255
  3876  023A' 202D'              	addwfc	??___flmul+1,w,c
  3877  023C' 6E3C'              	movwf	___flmul@temp+1,c
  3878  023E' D00F               	goto	l2475
  3879  0240'                    l2469:
  3880  0240' 90D8               	bcf	status,0,c
  3881  0242' 3637'              	rlcf	___flmul@prod,f,c
  3882  0244' 3638'              	rlcf	___flmul@prod+1,f,c
  3883  0246' 3639'              	rlcf	___flmul@prod+2,f,c
  3884  0248' 363A'              	rlcf	___flmul@prod+3,f,c
  3885  024A' BE34'              	btfsc	___flmul@grs+3,7,c
  3886  024C' 8037'              	bsf	___flmul@prod,0,c
  3887  024E' 90D8               	bcf	status,0,c
  3888  0250' 3631'              	rlcf	___flmul@grs,f,c
  3889  0252' 3632'              	rlcf	___flmul@grs+1,f,c
  3890  0254' 3633'              	rlcf	___flmul@grs+2,f,c
  3891  0256' 3634'              	rlcf	___flmul@grs+3,f,c
  3892  0258' 063B'              	decf	___flmul@temp,f,c
  3893  025A' A0D8               	btfss	status,0,c
  3894  025C' 063C'              	decf	___flmul@temp+1,f,c
  3895  025E'                    l2475:
  3896  025E' AE39'              	btfss	___flmul@prod+2,7,c
  3897  0260' D7EF               	goto	l2469
  3898  0262' 0E00               	movlw	0
  3899  0264' 6E35'              	movwf	___flmul@aexp,c
  3900  0266' AE34'              	btfss	___flmul@grs+3,7,c
  3901  0268' D017               	goto	l828
  3902  026A' 0EFF               	movlw	255
  3903  026C' 1431'              	andwf	___flmul@grs,w,c
  3904  026E' 6E00'              	movwf	??___flmul& (0+255),c
  3905  0270' 0EFF               	movlw	255
  3906  0272' 1432'              	andwf	___flmul@grs+1,w,c
  3907  0274' 6E00'              	movwf	(??___flmul+1)& (0+255),c
  3908  0276' 0EFF               	movlw	255
  3909  0278' 1433'              	andwf	___flmul@grs+2,w,c
  3910  027A' 6E00'              	movwf	(??___flmul+2)& (0+255),c
  3911  027C' 0E7F               	movlw	127
  3912  027E' 1434'              	andwf	___flmul@grs+3,w,c
  3913  0280' 6E00'              	movwf	(??___flmul+3)& (0+255),c
  3914  0282' 502C'              	movf	??___flmul,w,c
  3915  0284' 102D'              	iorwf	??___flmul+1,w,c
  3916  0286' 102E'              	iorwf	??___flmul+2,w,c
  3917  0288' 102F'              	iorwf	??___flmul+3,w,c
  3918  028A' B4D8               	btfsc	status,2,c
  3919  028C' D003               	goto	l829
  3920  028E'                    u2390:
  3921  028E' 0E01               	movlw	1
  3922  0290' 6E35'              	movwf	___flmul@aexp,c
  3923  0292' D002               	goto	l828
  3924  0294'                    l829:
  3925  0294' B037'              	btfsc	___flmul@prod,0,c
  3926  0296' D7FB               	goto	u2390
  3927  0298'                    l828:
  3928  0298' 5035'              	movf	___flmul@aexp,w,c
  3929  029A' B4D8               	btfsc	status,2,c
  3930  029C' D01F               	goto	l2495
  3931  029E' 0E01               	movlw	1
  3932  02A0' 2637'              	addwf	___flmul@prod,f,c
  3933  02A2' 0E00               	movlw	0
  3934  02A4' 2238'              	addwfc	___flmul@prod+1,f,c
  3935  02A6' 2239'              	addwfc	___flmul@prod+2,f,c
  3936  02A8' 223A'              	addwfc	___flmul@prod+3,f,c
  3937  02AA' A03A'              	btfss	___flmul@prod+3,0,c
  3938  02AC' D017               	goto	l2495
  3939  02AE' C037' F02C'        	movff	___flmul@prod,??___flmul
  3940  02B2' C038' F02D'        	movff	___flmul@prod+1,??___flmul+1
  3941  02B6' C039' F02E'        	movff	___flmul@prod+2,??___flmul+2
  3942  02BA' C03A' F02F'        	movff	___flmul@prod+3,??___flmul+3
  3943  02BE' 342F'              	rlcf	??___flmul+3,w,c
  3944  02C0' 322F'              	rrcf	??___flmul+3,f,c
  3945  02C2' 322E'              	rrcf	??___flmul+2,f,c
  3946  02C4' 322D'              	rrcf	??___flmul+1,f,c
  3947  02C6' 322C'              	rrcf	??___flmul,f,c
  3948  02C8' C02C' F037'        	movff	??___flmul,___flmul@prod
  3949  02CC' C02D' F038'        	movff	??___flmul+1,___flmul@prod+1
  3950  02D0' C02E' F039'        	movff	??___flmul+2,___flmul@prod+2
  3951  02D4' C02F' F03A'        	movff	??___flmul+3,___flmul@prod+3
  3952  02D8' 4A3B'              	infsnz	___flmul@temp,f,c
  3953  02DA' 2A3C'              	incf	___flmul@temp+1,f,c
  3954  02DC'                    l2495:
  3955  02DC' BE3C'              	btfsc	___flmul@temp+1,7,c
  3956  02DE' D00D               	goto	l2499
  3957  02E0' 503C'              	movf	___flmul@temp+1,w,c
  3958  02E2' E103               	bnz	u2430
  3959  02E4' 283B'              	incf	___flmul@temp,w,c
  3960  02E6' A0D8               	btfss	status,0,c
  3961  02E8' D008               	goto	l2499
  3962  02EA'                    u2430:
  3963  02EA' 0E00               	movlw	0
  3964  02EC' 6E37'              	movwf	___flmul@prod,c
  3965  02EE' 0E00               	movlw	0
  3966  02F0' 6E38'              	movwf	___flmul@prod+1,c
  3967  02F2' 0E80               	movlw	128
  3968  02F4' 6E39'              	movwf	___flmul@prod+2,c
  3969  02F6' 0E7F               	movlw	127
  3970  02F8' D020               	goto	L2
  3971  02FA'                    l2499:
  3972  02FA' BE3C'              	btfsc	___flmul@temp+1,7,c
  3973  02FC' D005               	goto	u2440
  3974  02FE' 503C'              	movf	___flmul@temp+1,w,c
  3975  0300' E10E               	bnz	l836
  3976  0302' 043B'              	decf	___flmul@temp,w,c
  3977  0304' B0D8               	btfsc	status,0,c
  3978  0306' D00B               	goto	l836
  3979  0308'                    u2440:
  3980  0308' 0E00               	movlw	0
  3981  030A' 6E37'              	movwf	___flmul@prod,c
  3982  030C' 0E00               	movlw	0
  3983  030E' 6E38'              	movwf	___flmul@prod+1,c
  3984  0310' 0E00               	movlw	0
  3985  0312' 6E39'              	movwf	___flmul@prod+2,c
  3986  0314' 0E00               	movlw	0
  3987  0316' 6E3A'              	movwf	___flmul@prod+3,c
  3988  0318' 0E00               	movlw	0
  3989  031A' 6E30'              	movwf	___flmul@sign,c
  3990  031C' D00F               	goto	l2511
  3991  031E'                    l836:
  3992  031E' C03B' F036'        	movff	___flmul@temp,___flmul@bexp
  3993  0322' 0EFF               	movlw	255
  3994  0324' 1637'              	andwf	___flmul@prod,f,c
  3995  0326' 0EFF               	movlw	255
  3996  0328' 1638'              	andwf	___flmul@prod+1,f,c
  3997  032A' 0E7F               	movlw	127
  3998  032C' 1639'              	andwf	___flmul@prod+2,f,c
  3999  032E' 0E00               	movlw	0
  4000  0330' 163A'              	andwf	___flmul@prod+3,f,c
  4001  0332' B036'              	btfsc	___flmul@bexp,0,c
  4002  0334' 8E39'              	bsf	___flmul@prod+2,7,c
  4003  0336' 90D8               	bcf	status,0,c
  4004  0338' 3036'              	rrcf	___flmul@bexp,w,c
  4005  033A'                    L2:
  4006  033A' 6E3A'              	movwf	___flmul@prod+3,c
  4007  033C'                    l2511:
  4008  033C' 5030'              	movf	___flmul@sign,w,c
  4009  033E' 123A'              	iorwf	___flmul@prod+3,f,c
  4010  0340' C037' F024'        	movff	___flmul@prod,?___flmul
  4011  0344' C038' F025'        	movff	___flmul@prod+1,?___flmul+1
  4012  0348' C039' F026'        	movff	___flmul@prod+2,?___flmul+2
  4013  034C' C03A' F027'        	movff	___flmul@prod+3,?___flmul+3
  4014  0350' 0012               	return		;funcret
  4015  0352'                    __end_of___flmul:
  4016                           	opt callstack 0
  4017                           
  4018 ;; *************** function ___flge *****************
  4019 ;; Defined at:
  4020 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  ff1             4    0[COMRAM] unsigned char 
  4023 ;;  ff2             4    4[COMRAM] unsigned char 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;		None               void
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4035 ;;      Params:         8       0       0       0       0       0       0       0       0
  4036 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4037 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4038 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4039 ;;Total ram usage:       12 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_main
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text21
  4049  0000'                    __ptext21:
  4050                           	opt callstack 0
  4051  0000'                    ___flge:
  4052                           	opt callstack 30
  4053                           
  4054                           ;incstack = 0
  4055  0000' 0E00               	movlw	0
  4056  0002' 1400'              	andwf	___flge@ff1,w,c
  4057  0004' 6E00'              	movwf	??___flge& (0+255),c
  4058  0006' 0E00               	movlw	0
  4059  0008' 1401'              	andwf	___flge@ff1+1,w,c
  4060  000A' 6E00'              	movwf	(??___flge+1)& (0+255),c
  4061  000C' 0E80               	movlw	128
  4062  000E' 1402'              	andwf	___flge@ff1+2,w,c
  4063  0010' 6E00'              	movwf	(??___flge+2)& (0+255),c
  4064  0012' 0E7F               	movlw	127
  4065  0014' 1403'              	andwf	___flge@ff1+3,w,c
  4066  0016' 6E00'              	movwf	(??___flge+3)& (0+255),c
  4067  0018' 5008'              	movf	??___flge,w,c
  4068  001A' 1009'              	iorwf	??___flge+1,w,c
  4069  001C' 100A'              	iorwf	??___flge+2,w,c
  4070  001E' 100B'              	iorwf	??___flge+3,w,c
  4071  0020' A4D8               	btfss	status,2,c
  4072  0022' D008               	goto	l2565
  4073  0024' 0E00               	movlw	0
  4074  0026' 6E00'              	movwf	___flge@ff1,c
  4075  0028' 0E00               	movlw	0
  4076  002A' 6E01'              	movwf	___flge@ff1+1,c
  4077  002C' 0E00               	movlw	0
  4078  002E' 6E02'              	movwf	___flge@ff1+2,c
  4079  0030' 0E00               	movlw	0
  4080  0032' 6E03'              	movwf	___flge@ff1+3,c
  4081  0034'                    l2565:
  4082  0034' 0E00               	movlw	0
  4083  0036' 1404'              	andwf	___flge@ff2,w,c
  4084  0038' 6E00'              	movwf	??___flge& (0+255),c
  4085  003A' 0E00               	movlw	0
  4086  003C' 1405'              	andwf	___flge@ff2+1,w,c
  4087  003E' 6E00'              	movwf	(??___flge+1)& (0+255),c
  4088  0040' 0E80               	movlw	128
  4089  0042' 1406'              	andwf	___flge@ff2+2,w,c
  4090  0044' 6E00'              	movwf	(??___flge+2)& (0+255),c
  4091  0046' 0E7F               	movlw	127
  4092  0048' 1407'              	andwf	___flge@ff2+3,w,c
  4093  004A' 6E00'              	movwf	(??___flge+3)& (0+255),c
  4094  004C' 5008'              	movf	??___flge,w,c
  4095  004E' 1009'              	iorwf	??___flge+1,w,c
  4096  0050' 100A'              	iorwf	??___flge+2,w,c
  4097  0052' 100B'              	iorwf	??___flge+3,w,c
  4098  0054' A4D8               	btfss	status,2,c
  4099  0056' D008               	goto	l2569
  4100  0058' 0E00               	movlw	0
  4101  005A' 6E04'              	movwf	___flge@ff2,c
  4102  005C' 0E00               	movlw	0
  4103  005E' 6E05'              	movwf	___flge@ff2+1,c
  4104  0060' 0E00               	movlw	0
  4105  0062' 6E06'              	movwf	___flge@ff2+2,c
  4106  0064' 0E00               	movlw	0
  4107  0066' 6E07'              	movwf	___flge@ff2+3,c
  4108  0068'                    l2569:
  4109  0068' AE03'              	btfss	___flge@ff1+3,7,c
  4110  006A' D009               	goto	l2573
  4111  006C' 6C00'              	negf	___flge@ff1,c
  4112  006E' 1E01'              	comf	___flge@ff1+1,f,c
  4113  0070' B0D8               	btfsc	status,0,c
  4114  0072' 2A01'              	incf	___flge@ff1+1,f,c
  4115  0074' 1E02'              	comf	___flge@ff1+2,f,c
  4116  0076' B0D8               	btfsc	status,0,c
  4117  0078' 2A02'              	incf	___flge@ff1+2,f,c
  4118  007A' 0E80               	movlw	128
  4119  007C' 5603'              	subfwb	___flge@ff1+3,f,c
  4120  007E'                    l2573:
  4121  007E' AE07'              	btfss	___flge@ff2+3,7,c
  4122  0080' D009               	goto	l470
  4123  0082' 6C04'              	negf	___flge@ff2,c
  4124  0084' 1E05'              	comf	___flge@ff2+1,f,c
  4125  0086' B0D8               	btfsc	status,0,c
  4126  0088' 2A05'              	incf	___flge@ff2+1,f,c
  4127  008A' 1E06'              	comf	___flge@ff2+2,f,c
  4128  008C' B0D8               	btfsc	status,0,c
  4129  008E' 2A06'              	incf	___flge@ff2+2,f,c
  4130  0090' 0E80               	movlw	128
  4131  0092' 5607'              	subfwb	___flge@ff2+3,f,c
  4132  0094'                    l470:
  4133  0094' 0E00               	movlw	0
  4134  0096' 1A00'              	xorwf	___flge@ff1,f,c
  4135  0098' 0E00               	movlw	0
  4136  009A' 1A01'              	xorwf	___flge@ff1+1,f,c
  4137  009C' 0E00               	movlw	0
  4138  009E' 1A02'              	xorwf	___flge@ff1+2,f,c
  4139  00A0' 0E80               	movlw	128
  4140  00A2' 1A03'              	xorwf	___flge@ff1+3,f,c
  4141  00A4' 0E00               	movlw	0
  4142  00A6' 1A04'              	xorwf	___flge@ff2,f,c
  4143  00A8' 0E00               	movlw	0
  4144  00AA' 1A05'              	xorwf	___flge@ff2+1,f,c
  4145  00AC' 0E00               	movlw	0
  4146  00AE' 1A06'              	xorwf	___flge@ff2+2,f,c
  4147  00B0' 0E80               	movlw	128
  4148  00B2' 1A07'              	xorwf	___flge@ff2+3,f,c
  4149  00B4' 5004'              	movf	___flge@ff2,w,c
  4150  00B6' 5C00'              	subwf	___flge@ff1,w,c
  4151  00B8' 5005'              	movf	___flge@ff2+1,w,c
  4152  00BA' 5801'              	subwfb	___flge@ff1+1,w,c
  4153  00BC' 5006'              	movf	___flge@ff2+2,w,c
  4154  00BE' 5802'              	subwfb	___flge@ff1+2,w,c
  4155  00C0' 5007'              	movf	___flge@ff2+3,w,c
  4156  00C2' 5803'              	subwfb	___flge@ff1+3,w,c
  4157  00C4' B0D8               	btfsc	status,0,c
  4158  00C6' D002               	goto	l2579
  4159  00C8' 90D8               	bcf	status,0,c
  4160  00CA' 0012               	return	
  4161  00CC'                    l2579:
  4162  00CC' 80D8               	bsf	status,0,c
  4163  00CE' 0012               	return		;funcret
  4164  00D0'                    __end_of___flge:
  4165                           	opt callstack 0
  4166                           
  4167 ;; *************** function ___fldiv *****************
  4168 ;; Defined at:
  4169 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  b               4   61[COMRAM] unsigned char 
  4172 ;;  a               4   65[COMRAM] unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  grs             4   80[COMRAM] unsigned long 
  4175 ;;  rem             4   73[COMRAM] unsigned long 
  4176 ;;  new_exp         2   78[COMRAM] short 
  4177 ;;  aexp            1   85[COMRAM] unsigned char 
  4178 ;;  bexp            1   84[COMRAM] unsigned char 
  4179 ;;  sign            1   77[COMRAM] unsigned char 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  4   61[COMRAM] unsigned char 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4189 ;;      Params:         8       0       0       0       0       0       0       0       0
  4190 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4191 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4192 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4193 ;;Total ram usage:       25 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_main
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text22
  4203  0000'                    __ptext22:
  4204                           	opt callstack 0
  4205  0000'                    ___fldiv:
  4206                           	opt callstack 30
  4207                           
  4208                           ;incstack = 0
  4209  0000' 5040'              	movf	___fldiv@b+3,w,c
  4210  0002' 0B80               	andlw	128
  4211  0004' 6E4D'              	movwf	___fldiv@sign,c
  4212  0006' 5040'              	movf	___fldiv@b+3,w,c
  4213  0008' 2440'              	addwf	___fldiv@b+3,w,c
  4214  000A' 6E54'              	movwf	___fldiv@bexp,c
  4215  000C' BE3F'              	btfsc	___fldiv@b+2,7,c
  4216  000E' 8054'              	bsf	___fldiv@bexp,0,c
  4217  0010' 5054'              	movf	___fldiv@bexp,w,c
  4218  0012' B4D8               	btfsc	status,2,c
  4219  0014' D00D               	goto	l2265
  4220  0016' 2854'              	incf	___fldiv@bexp,w,c
  4221  0018' A4D8               	btfss	status,2,c
  4222  001A' D008               	goto	l2261
  4223  001C' 0E00               	movlw	0
  4224  001E' 6E3D'              	movwf	___fldiv@b,c
  4225  0020' 0E00               	movlw	0
  4226  0022' 6E3E'              	movwf	___fldiv@b+1,c
  4227  0024' 0E00               	movlw	0
  4228  0026' 6E3F'              	movwf	___fldiv@b+2,c
  4229  0028' 0E00               	movlw	0
  4230  002A' 6E40'              	movwf	___fldiv@b+3,c
  4231  002C'                    l2261:
  4232  002C' 8E3F'              	bsf	___fldiv@b+2,7,c
  4233  002E' D006               	goto	L3
  4234  0030'                    l2265:
  4235  0030' 0E00               	movlw	0
  4236  0032' 6E3D'              	movwf	___fldiv@b,c
  4237  0034' 0E00               	movlw	0
  4238  0036' 6E3E'              	movwf	___fldiv@b+1,c
  4239  0038' 0E00               	movlw	0
  4240  003A' 6E3F'              	movwf	___fldiv@b+2,c
  4241  003C'                    L3:
  4242  003C' 0E00               	movlw	0
  4243  003E' 6E40'              	movwf	___fldiv@b+3,c
  4244  0040' 5044'              	movf	___fldiv@a+3,w,c
  4245  0042' 0B80               	andlw	128
  4246  0044' 1A4D'              	xorwf	___fldiv@sign,f,c
  4247  0046' 5044'              	movf	___fldiv@a+3,w,c
  4248  0048' 2444'              	addwf	___fldiv@a+3,w,c
  4249  004A' 6E55'              	movwf	___fldiv@aexp,c
  4250  004C' BE43'              	btfsc	___fldiv@a+2,7,c
  4251  004E' 8055'              	bsf	___fldiv@aexp,0,c
  4252  0050' 5055'              	movf	___fldiv@aexp,w,c
  4253  0052' B4D8               	btfsc	status,2,c
  4254  0054' D00D               	goto	l2285
  4255  0056' 2855'              	incf	___fldiv@aexp,w,c
  4256  0058' A4D8               	btfss	status,2,c
  4257  005A' D008               	goto	l2281
  4258  005C' 0E00               	movlw	0
  4259  005E' 6E41'              	movwf	___fldiv@a,c
  4260  0060' 0E00               	movlw	0
  4261  0062' 6E42'              	movwf	___fldiv@a+1,c
  4262  0064' 0E00               	movlw	0
  4263  0066' 6E43'              	movwf	___fldiv@a+2,c
  4264  0068' 0E00               	movlw	0
  4265  006A' 6E44'              	movwf	___fldiv@a+3,c
  4266  006C'                    l2281:
  4267  006C' 8E43'              	bsf	___fldiv@a+2,7,c
  4268  006E' D006               	goto	L4
  4269  0070'                    l2285:
  4270  0070' 0E00               	movlw	0
  4271  0072' 6E41'              	movwf	___fldiv@a,c
  4272  0074' 0E00               	movlw	0
  4273  0076' 6E42'              	movwf	___fldiv@a+1,c
  4274  0078' 0E00               	movlw	0
  4275  007A' 6E43'              	movwf	___fldiv@a+2,c
  4276  007C'                    L4:
  4277  007C' 0E00               	movlw	0
  4278  007E' 6E44'              	movwf	___fldiv@a+3,c
  4279  0080' 5041'              	movf	___fldiv@a,w,c
  4280  0082' 1042'              	iorwf	___fldiv@a+1,w,c
  4281  0084' 1043'              	iorwf	___fldiv@a+2,w,c
  4282  0086' 1044'              	iorwf	___fldiv@a+3,w,c
  4283  0088' A4D8               	btfss	status,2,c
  4284  008A' D017               	goto	l2299
  4285  008C' 0E00               	movlw	0
  4286  008E' 6E3D'              	movwf	___fldiv@b,c
  4287  0090' 0E00               	movlw	0
  4288  0092' 6E3E'              	movwf	___fldiv@b+1,c
  4289  0094' 0E00               	movlw	0
  4290  0096' 6E3F'              	movwf	___fldiv@b+2,c
  4291  0098' 0E00               	movlw	0
  4292  009A' 6E40'              	movwf	___fldiv@b+3,c
  4293  009C' 0E80               	movlw	128
  4294  009E' 123F'              	iorwf	___fldiv@b+2,f,c
  4295  00A0' 0E7F               	movlw	127
  4296  00A2' 1240'              	iorwf	___fldiv@b+3,f,c
  4297  00A4'                    l2293:
  4298  00A4' 504D'              	movf	___fldiv@sign,w,c
  4299  00A6' 1240'              	iorwf	___fldiv@b+3,f,c
  4300  00A8' C03D' F03D'        	movff	___fldiv@b,?___fldiv
  4301  00AC' C03E' F03E'        	movff	___fldiv@b+1,?___fldiv+1
  4302  00B0' C03F' F03F'        	movff	___fldiv@b+2,?___fldiv+2
  4303  00B4' C040' F040'        	movff	___fldiv@b+3,?___fldiv+3
  4304  00B8' 0012               	return	
  4305  00BA'                    l2299:
  4306  00BA' 5054'              	movf	___fldiv@bexp,w,c
  4307  00BC' A4D8               	btfss	status,2,c
  4308  00BE' D009               	goto	l2307
  4309  00C0' 0E00               	movlw	0
  4310  00C2' 6E3D'              	movwf	?___fldiv,c
  4311  00C4' 0E00               	movlw	0
  4312  00C6' 6E3E'              	movwf	?___fldiv+1,c
  4313  00C8' 0E00               	movlw	0
  4314  00CA' 6E3F'              	movwf	?___fldiv+2,c
  4315  00CC' 0E00               	movlw	0
  4316  00CE' 6E40'              	movwf	?___fldiv+3,c
  4317  00D0' 0012               	return	
  4318  00D2'                    l2307:
  4319  00D2' 5055'              	movf	___fldiv@aexp,w,c
  4320  00D4' C054' F045'        	movff	___fldiv@bexp,??___fldiv
  4321  00D8' 6A00'              	clrf	(??___fldiv+1)& (0+255),c
  4322  00DA' 5E45'              	subwf	??___fldiv,f,c
  4323  00DC' 0E00               	movlw	0
  4324  00DE' 5A46'              	subwfb	??___fldiv+1,f,c
  4325  00E0' 0E7F               	movlw	127
  4326  00E2' 2445'              	addwf	??___fldiv,w,c
  4327  00E4' 6E4E'              	movwf	___fldiv@new_exp,c
  4328  00E6' 0E00               	movlw	0
  4329  00E8' 2046'              	addwfc	??___fldiv+1,w,c
  4330  00EA' 6E4F'              	movwf	___fldiv@new_exp+1,c
  4331  00EC' C03D' F049'        	movff	___fldiv@b,___fldiv@rem
  4332  00F0' C03E' F04A'        	movff	___fldiv@b+1,___fldiv@rem+1
  4333  00F4' C03F' F04B'        	movff	___fldiv@b+2,___fldiv@rem+2
  4334  00F8' C040' F04C'        	movff	___fldiv@b+3,___fldiv@rem+3
  4335  00FC' 0E00               	movlw	0
  4336  00FE' 6E3D'              	movwf	___fldiv@b,c
  4337  0100' 0E00               	movlw	0
  4338  0102' 6E3E'              	movwf	___fldiv@b+1,c
  4339  0104' 0E00               	movlw	0
  4340  0106' 6E3F'              	movwf	___fldiv@b+2,c
  4341  0108' 0E00               	movlw	0
  4342  010A' 6E40'              	movwf	___fldiv@b+3,c
  4343  010C' 0E00               	movlw	0
  4344  010E' 6E50'              	movwf	___fldiv@grs,c
  4345  0110' 0E00               	movlw	0
  4346  0112' 6E51'              	movwf	___fldiv@grs+1,c
  4347  0114' 0E00               	movlw	0
  4348  0116' 6E52'              	movwf	___fldiv@grs+2,c
  4349  0118' 0E00               	movlw	0
  4350  011A' 6E53'              	movwf	___fldiv@grs+3,c
  4351  011C' 0E00               	movlw	0
  4352  011E' 6E55'              	movwf	___fldiv@aexp,c
  4353  0120' D028               	goto	l789
  4354  0122'                    l2317:
  4355  0122' 5055'              	movf	___fldiv@aexp,w,c
  4356  0124' B4D8               	btfsc	status,2,c
  4357  0126' D011               	goto	l2325
  4358  0128' 90D8               	bcf	status,0,c
  4359  012A' 3649'              	rlcf	___fldiv@rem,f,c
  4360  012C' 364A'              	rlcf	___fldiv@rem+1,f,c
  4361  012E' 364B'              	rlcf	___fldiv@rem+2,f,c
  4362  0130' 364C'              	rlcf	___fldiv@rem+3,f,c
  4363  0132' 90D8               	bcf	status,0,c
  4364  0134' 363D'              	rlcf	___fldiv@b,f,c
  4365  0136' 363E'              	rlcf	___fldiv@b+1,f,c
  4366  0138' 363F'              	rlcf	___fldiv@b+2,f,c
  4367  013A' 3640'              	rlcf	___fldiv@b+3,f,c
  4368  013C' BE53'              	btfsc	___fldiv@grs+3,7,c
  4369  013E' 803D'              	bsf	___fldiv@b,0,c
  4370  0140' 90D8               	bcf	status,0,c
  4371  0142' 3650'              	rlcf	___fldiv@grs,f,c
  4372  0144' 3651'              	rlcf	___fldiv@grs+1,f,c
  4373  0146' 3652'              	rlcf	___fldiv@grs+2,f,c
  4374  0148' 3653'              	rlcf	___fldiv@grs+3,f,c
  4375  014A'                    l2325:
  4376  014A' 5041'              	movf	___fldiv@a,w,c
  4377  014C' 5C49'              	subwf	___fldiv@rem,w,c
  4378  014E' 5042'              	movf	___fldiv@a+1,w,c
  4379  0150' 584A'              	subwfb	___fldiv@rem+1,w,c
  4380  0152' 5043'              	movf	___fldiv@a+2,w,c
  4381  0154' 584B'              	subwfb	___fldiv@rem+2,w,c
  4382  0156' 5044'              	movf	___fldiv@a+3,w,c
  4383  0158' 584C'              	subwfb	___fldiv@rem+3,w,c
  4384  015A' A0D8               	btfss	status,0,c
  4385  015C' D009               	goto	l2331
  4386  015E' 8C53'              	bsf	___fldiv@grs+3,6,c
  4387  0160' 5041'              	movf	___fldiv@a,w,c
  4388  0162' 5E49'              	subwf	___fldiv@rem,f,c
  4389  0164' 5042'              	movf	___fldiv@a+1,w,c
  4390  0166' 5A4A'              	subwfb	___fldiv@rem+1,f,c
  4391  0168' 5043'              	movf	___fldiv@a+2,w,c
  4392  016A' 5A4B'              	subwfb	___fldiv@rem+2,f,c
  4393  016C' 5044'              	movf	___fldiv@a+3,w,c
  4394  016E' 5A4C'              	subwfb	___fldiv@rem+3,f,c
  4395  0170'                    l2331:
  4396  0170' 2A55'              	incf	___fldiv@aexp,f,c
  4397  0172'                    l789:
  4398  0172' 0E19               	movlw	25
  4399  0174' 6455'              	cpfsgt	___fldiv@aexp,c
  4400  0176' D7D5               	goto	l2317
  4401  0178' 5049'              	movf	___fldiv@rem,w,c
  4402  017A' 104A'              	iorwf	___fldiv@rem+1,w,c
  4403  017C' 104B'              	iorwf	___fldiv@rem+2,w,c
  4404  017E' 104C'              	iorwf	___fldiv@rem+3,w,c
  4405  0180' B4D8               	btfsc	status,2,c
  4406  0182' D011               	goto	l2343
  4407  0184' 8050'              	bsf	___fldiv@grs,0,c
  4408  0186' D00F               	goto	l2343
  4409  0188'                    l2337:
  4410  0188' 90D8               	bcf	status,0,c
  4411  018A' 363D'              	rlcf	___fldiv@b,f,c
  4412  018C' 363E'              	rlcf	___fldiv@b+1,f,c
  4413  018E' 363F'              	rlcf	___fldiv@b+2,f,c
  4414  0190' 3640'              	rlcf	___fldiv@b+3,f,c
  4415  0192' BE53'              	btfsc	___fldiv@grs+3,7,c
  4416  0194' 803D'              	bsf	___fldiv@b,0,c
  4417  0196' 90D8               	bcf	status,0,c
  4418  0198' 3650'              	rlcf	___fldiv@grs,f,c
  4419  019A' 3651'              	rlcf	___fldiv@grs+1,f,c
  4420  019C' 3652'              	rlcf	___fldiv@grs+2,f,c
  4421  019E' 3653'              	rlcf	___fldiv@grs+3,f,c
  4422  01A0' 064E'              	decf	___fldiv@new_exp,f,c
  4423  01A2' A0D8               	btfss	status,0,c
  4424  01A4' 064F'              	decf	___fldiv@new_exp+1,f,c
  4425  01A6'                    l2343:
  4426  01A6' AE3F'              	btfss	___fldiv@b+2,7,c
  4427  01A8' D7EF               	goto	l2337
  4428  01AA' 0E00               	movlw	0
  4429  01AC' 6E55'              	movwf	___fldiv@aexp,c
  4430  01AE' AE53'              	btfss	___fldiv@grs+3,7,c
  4431  01B0' D017               	goto	l800
  4432  01B2' 0EFF               	movlw	255
  4433  01B4' 1450'              	andwf	___fldiv@grs,w,c
  4434  01B6' 6E00'              	movwf	??___fldiv& (0+255),c
  4435  01B8' 0EFF               	movlw	255
  4436  01BA' 1451'              	andwf	___fldiv@grs+1,w,c
  4437  01BC' 6E00'              	movwf	(??___fldiv+1)& (0+255),c
  4438  01BE' 0EFF               	movlw	255
  4439  01C0' 1452'              	andwf	___fldiv@grs+2,w,c
  4440  01C2' 6E00'              	movwf	(??___fldiv+2)& (0+255),c
  4441  01C4' 0E7F               	movlw	127
  4442  01C6' 1453'              	andwf	___fldiv@grs+3,w,c
  4443  01C8' 6E00'              	movwf	(??___fldiv+3)& (0+255),c
  4444  01CA' 5045'              	movf	??___fldiv,w,c
  4445  01CC' 1046'              	iorwf	??___fldiv+1,w,c
  4446  01CE' 1047'              	iorwf	??___fldiv+2,w,c
  4447  01D0' 1048'              	iorwf	??___fldiv+3,w,c
  4448  01D2' B4D8               	btfsc	status,2,c
  4449  01D4' D003               	goto	l801
  4450  01D6'                    u2200:
  4451  01D6' 0E01               	movlw	1
  4452  01D8' 6E55'              	movwf	___fldiv@aexp,c
  4453  01DA' D002               	goto	l800
  4454  01DC'                    l801:
  4455  01DC' B03D'              	btfsc	___fldiv@b,0,c
  4456  01DE' D7FB               	goto	u2200
  4457  01E0'                    l800:
  4458  01E0' 5055'              	movf	___fldiv@aexp,w,c
  4459  01E2' B4D8               	btfsc	status,2,c
  4460  01E4' D01F               	goto	l2363
  4461  01E6' 0E01               	movlw	1
  4462  01E8' 263D'              	addwf	___fldiv@b,f,c
  4463  01EA' 0E00               	movlw	0
  4464  01EC' 223E'              	addwfc	___fldiv@b+1,f,c
  4465  01EE' 223F'              	addwfc	___fldiv@b+2,f,c
  4466  01F0' 2240'              	addwfc	___fldiv@b+3,f,c
  4467  01F2' A040'              	btfss	___fldiv@b+3,0,c
  4468  01F4' D017               	goto	l2363
  4469  01F6' C03D' F045'        	movff	___fldiv@b,??___fldiv
  4470  01FA' C03E' F046'        	movff	___fldiv@b+1,??___fldiv+1
  4471  01FE' C03F' F047'        	movff	___fldiv@b+2,??___fldiv+2
  4472  0202' C040' F048'        	movff	___fldiv@b+3,??___fldiv+3
  4473  0206' 3448'              	rlcf	??___fldiv+3,w,c
  4474  0208' 3248'              	rrcf	??___fldiv+3,f,c
  4475  020A' 3247'              	rrcf	??___fldiv+2,f,c
  4476  020C' 3246'              	rrcf	??___fldiv+1,f,c
  4477  020E' 3245'              	rrcf	??___fldiv,f,c
  4478  0210' C045' F03D'        	movff	??___fldiv,___fldiv@b
  4479  0214' C046' F03E'        	movff	??___fldiv+1,___fldiv@b+1
  4480  0218' C047' F03F'        	movff	??___fldiv+2,___fldiv@b+2
  4481  021C' C048' F040'        	movff	??___fldiv+3,___fldiv@b+3
  4482  0220' 4A4E'              	infsnz	___fldiv@new_exp,f,c
  4483  0222' 2A4F'              	incf	___fldiv@new_exp+1,f,c
  4484  0224'                    l2363:
  4485  0224' BE4F'              	btfsc	___fldiv@new_exp+1,7,c
  4486  0226' D010               	goto	l2367
  4487  0228' 504F'              	movf	___fldiv@new_exp+1,w,c
  4488  022A' E103               	bnz	u2240
  4489  022C' 284E'              	incf	___fldiv@new_exp,w,c
  4490  022E' A0D8               	btfss	status,0,c
  4491  0230' D00B               	goto	l2367
  4492  0232'                    u2240:
  4493  0232' 0E00               	movlw	0
  4494  0234' 6E4F'              	movwf	___fldiv@new_exp+1,c
  4495  0236' 684E'              	setf	___fldiv@new_exp,c
  4496  0238' 0E00               	movlw	0
  4497  023A' 6E3D'              	movwf	___fldiv@b,c
  4498  023C' 0E00               	movlw	0
  4499  023E' 6E3E'              	movwf	___fldiv@b+1,c
  4500  0240' 0E00               	movlw	0
  4501  0242' 6E3F'              	movwf	___fldiv@b+2,c
  4502  0244' 0E00               	movlw	0
  4503  0246' 6E40'              	movwf	___fldiv@b+3,c
  4504  0248'                    l2367:
  4505  0248' BE4F'              	btfsc	___fldiv@new_exp+1,7,c
  4506  024A' D005               	goto	u2250
  4507  024C' 504F'              	movf	___fldiv@new_exp+1,w,c
  4508  024E' E111               	bnz	l2371
  4509  0250' 044E'              	decf	___fldiv@new_exp,w,c
  4510  0252' B0D8               	btfsc	status,0,c
  4511  0254' D00E               	goto	l2371
  4512  0256'                    u2250:
  4513  0256' 0E00               	movlw	0
  4514  0258' 6E4F'              	movwf	___fldiv@new_exp+1,c
  4515  025A' 0E00               	movlw	0
  4516  025C' 6E4E'              	movwf	___fldiv@new_exp,c
  4517  025E' 0E00               	movlw	0
  4518  0260' 6E3D'              	movwf	___fldiv@b,c
  4519  0262' 0E00               	movlw	0
  4520  0264' 6E3E'              	movwf	___fldiv@b+1,c
  4521  0266' 0E00               	movlw	0
  4522  0268' 6E3F'              	movwf	___fldiv@b+2,c
  4523  026A' 0E00               	movlw	0
  4524  026C' 6E40'              	movwf	___fldiv@b+3,c
  4525  026E' 0E00               	movlw	0
  4526  0270' 6E4D'              	movwf	___fldiv@sign,c
  4527  0272'                    l2371:
  4528  0272' C04E' F054'        	movff	___fldiv@new_exp,___fldiv@bexp
  4529  0276' A054'              	btfss	___fldiv@bexp,0,c
  4530  0278' D002               	goto	l2377
  4531  027A' 8E3F'              	bsf	___fldiv@b+2,7,c
  4532  027C' D001               	goto	l2379
  4533  027E'                    l2377:
  4534  027E' 9E3F'              	bcf	___fldiv@b+2,7,c
  4535  0280'                    l2379:
  4536  0280' 90D8               	bcf	status,0,c
  4537  0282' 3054'              	rrcf	___fldiv@bexp,w,c
  4538  0284' 6E40'              	movwf	___fldiv@b+3,c
  4539  0286' D70E               	goto	l2293
  4540  0288'                    __end_of___fldiv:
  4541                           	opt callstack 0
  4542                           
  4543 ;; *************** function ___awdiv *****************
  4544 ;; Defined at:
  4545 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  dividend        2   14[COMRAM] int 
  4548 ;;  divisor         2   16[COMRAM] int 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  quotient        2   20[COMRAM] int 
  4551 ;;  sign            1   19[COMRAM] unsigned char 
  4552 ;;  counter         1   18[COMRAM] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  2   14[COMRAM] int 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4562 ;;      Params:         4       0       0       0       0       0       0       0       0
  4563 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4565 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4566 ;;Total ram usage:        8 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_main
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text23
  4576  0000'                    __ptext23:
  4577                           	opt callstack 0
  4578  0000'                    ___awdiv:
  4579                           	opt callstack 30
  4580                           
  4581                           ;incstack = 0
  4582  0000' 0E00               	movlw	0
  4583  0002' 6E13'              	movwf	___awdiv@sign,c
  4584  0004' AE11'              	btfss	___awdiv@divisor+1,7,c
  4585  0006' D006               	goto	l2525
  4586  0008' 6C10'              	negf	___awdiv@divisor,c
  4587  000A' 1E11'              	comf	___awdiv@divisor+1,f,c
  4588  000C' B0D8               	btfsc	status,0,c
  4589  000E' 2A11'              	incf	___awdiv@divisor+1,f,c
  4590  0010' 0E01               	movlw	1
  4591  0012' 6E13'              	movwf	___awdiv@sign,c
  4592  0014'                    l2525:
  4593  0014' AE0F'              	btfss	___awdiv@dividend+1,7,c
  4594  0016' D006               	goto	l2531
  4595  0018' 6C0E'              	negf	___awdiv@dividend,c
  4596  001A' 1E0F'              	comf	___awdiv@dividend+1,f,c
  4597  001C' B0D8               	btfsc	status,0,c
  4598  001E' 2A0F'              	incf	___awdiv@dividend+1,f,c
  4599  0020' 0E01               	movlw	1
  4600  0022' 1A13'              	xorwf	___awdiv@sign,f,c
  4601  0024'                    l2531:
  4602  0024' 0E00               	movlw	0
  4603  0026' 6E15'              	movwf	___awdiv@quotient+1,c
  4604  0028' 0E00               	movlw	0
  4605  002A' 6E14'              	movwf	___awdiv@quotient,c
  4606  002C' 5010'              	movf	___awdiv@divisor,w,c
  4607  002E' 1011'              	iorwf	___awdiv@divisor+1,w,c
  4608  0030' B4D8               	btfsc	status,2,c
  4609  0032' D01C               	goto	l2553
  4610  0034' 0E01               	movlw	1
  4611  0036' 6E12'              	movwf	___awdiv@counter,c
  4612  0038' D004               	goto	l2539
  4613  003A'                    l2537:
  4614  003A' 90D8               	bcf	status,0,c
  4615  003C' 3610'              	rlcf	___awdiv@divisor,f,c
  4616  003E' 3611'              	rlcf	___awdiv@divisor+1,f,c
  4617  0040' 2A12'              	incf	___awdiv@counter,f,c
  4618  0042'                    l2539:
  4619  0042' AE11'              	btfss	___awdiv@divisor+1,7,c
  4620  0044' D7FA               	goto	l2537
  4621  0046'                    u2490:
  4622  0046' 90D8               	bcf	status,0,c
  4623  0048' 3614'              	rlcf	___awdiv@quotient,f,c
  4624  004A' 3615'              	rlcf	___awdiv@quotient+1,f,c
  4625  004C' 5010'              	movf	___awdiv@divisor,w,c
  4626  004E' 5C0E'              	subwf	___awdiv@dividend,w,c
  4627  0050' 5011'              	movf	___awdiv@divisor+1,w,c
  4628  0052' 580F'              	subwfb	___awdiv@dividend+1,w,c
  4629  0054' A0D8               	btfss	status,0,c
  4630  0056' D005               	goto	l2549
  4631  0058' 5010'              	movf	___awdiv@divisor,w,c
  4632  005A' 5E0E'              	subwf	___awdiv@dividend,f,c
  4633  005C' 5011'              	movf	___awdiv@divisor+1,w,c
  4634  005E' 5A0F'              	subwfb	___awdiv@dividend+1,f,c
  4635  0060' 8014'              	bsf	___awdiv@quotient,0,c
  4636  0062'                    l2549:
  4637  0062' 90D8               	bcf	status,0,c
  4638  0064' 3211'              	rrcf	___awdiv@divisor+1,f,c
  4639  0066' 3210'              	rrcf	___awdiv@divisor,f,c
  4640  0068' 2E12'              	decfsz	___awdiv@counter,f,c
  4641  006A' D7ED               	goto	u2490
  4642  006C'                    l2553:
  4643  006C' 5013'              	movf	___awdiv@sign,w,c
  4644  006E' B4D8               	btfsc	status,2,c
  4645  0070' D004               	goto	l2557
  4646  0072' 6C14'              	negf	___awdiv@quotient,c
  4647  0074' 1E15'              	comf	___awdiv@quotient+1,f,c
  4648  0076' B0D8               	btfsc	status,0,c
  4649  0078' 2A15'              	incf	___awdiv@quotient+1,f,c
  4650  007A'                    l2557:
  4651  007A' C014' F00E'        	movff	___awdiv@quotient,?___awdiv
  4652  007E' C015' F00F'        	movff	___awdiv@quotient+1,?___awdiv+1
  4653  0082' 0012               	return		;funcret
  4654  0084'                    __end_of___awdiv:
  4655                           	opt callstack 0
  4656                           
  4657 ;; *************** function _LCD_String_xy *****************
  4658 ;; Defined at:
  4659 ;;		line 70 in file "lcd.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  row             1    wreg     unsigned char 
  4662 ;;  pos             1    3[COMRAM] unsigned char 
  4663 ;;  msg             2    4[COMRAM] PTR const unsigned char 
  4664 ;;		 -> STR_4(4), STR_3(4), main@Soil(10), main@Temperature(10), 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  row             1    6[COMRAM] unsigned char 
  4667 ;;  location        1    7[COMRAM] unsigned char 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4677 ;;      Params:         3       0       0       0       0       0       0       0       0
  4678 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4680 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4681 ;;Total ram usage:        5 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    2
  4684 ;; This function calls:
  4685 ;;		_LCD_Command
  4686 ;;		_LCD_String
  4687 ;; This function is called by:
  4688 ;;		_main
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text24
  4693  0000'                    __ptext24:
  4694                           	opt callstack 0
  4695  0000'                    _LCD_String_xy:
  4696                           	opt callstack 28
  4697                           
  4698                           ;incstack = 0
  4699                           ;LCD_String_xy@row stored from wreg
  4700  0000' 6E06'              	movwf	LCD_String_xy@row,c
  4701                           
  4702                           ;lcd.c: 73:     if(row<=1)
  4703  0002' 0E02               	movlw	2
  4704  0004' 6006'              	cpfslt	LCD_String_xy@row,c
  4705  0006' D008               	goto	l2205
  4706                           
  4707                           ;lcd.c: 74:     {;lcd.c: 75:         location=(0x80) | ((pos) & 0x0f);
  4708  0008' 5003'              	movf	LCD_String_xy@pos,w,c
  4709  000A' 0B0F               	andlw	15
  4710  000C' 0980               	iorlw	128
  4711  000E' 6E07'              	movwf	LCD_String_xy@location,c
  4712                           
  4713                           ;lcd.c: 76:         LCD_Command(location);
  4714  0010' 5007'              	movf	LCD_String_xy@location,w,c
  4715  0012' EC00' F000'        	call	_LCD_Command
  4716                           
  4717                           ;lcd.c: 77:     }
  4718  0016' D007               	goto	l2209
  4719  0018'                    l2205:
  4720                           
  4721                           ;lcd.c: 79:     {;lcd.c: 80:         location=(0xC0) | ((pos) & 0x0f);
  4722  0018' 5003'              	movf	LCD_String_xy@pos,w,c
  4723  001A' 0B0F               	andlw	15
  4724  001C' 09C0               	iorlw	192
  4725  001E' 6E07'              	movwf	LCD_String_xy@location,c
  4726                           
  4727                           ;lcd.c: 81:         LCD_Command(location);
  4728  0020' 5007'              	movf	LCD_String_xy@location,w,c
  4729  0022' EC00' F000'        	call	_LCD_Command
  4730  0026'                    l2209:
  4731                           
  4732                           ;lcd.c: 83:     LCD_String(msg);
  4733  0026' C004' F001'        	movff	LCD_String_xy@msg,LCD_String@msg
  4734  002A' C005' F002'        	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  4735  002E' EC00' F000'        	call	_LCD_String	;wreg free
  4736  0032' 0012               	return		;funcret
  4737  0034'                    __end_of_LCD_String_xy:
  4738                           	opt callstack 0
  4739                           
  4740 ;; *************** function _LCD_String *****************
  4741 ;; Defined at:
  4742 ;;		line 61 in file "lcd.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  msg             2    1[COMRAM] PTR const unsigned char 
  4745 ;;		 -> STR_4(4), STR_3(4), main@Soil(10), main@Temperature(10), 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4757 ;;      Params:         2       0       0       0       0       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4760 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4761 ;;Total ram usage:        2 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    1
  4764 ;; This function calls:
  4765 ;;		_LCD_Char
  4766 ;; This function is called by:
  4767 ;;		_LCD_String_xy
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text25
  4772  0000'                    __ptext25:
  4773                           	opt callstack 0
  4774  0000'                    _LCD_String:
  4775                           	opt callstack 28
  4776                           
  4777                           ;lcd.c: 61: void LCD_String(const char *msg);lcd.c: 62: {;lcd.c: 63:  while((*msg)!=0)
  4778                           
  4779                           ;incstack = 0
  4780  0000' D014               	goto	l2123
  4781  0002'                    l2119:
  4782                           
  4783                           ;lcd.c: 64:  {;lcd.c: 65:    LCD_Char(*msg);
  4784  0002' C001' FFF6         	movff	LCD_String@msg,tblptrl
  4785  0006' C002' FFF7         	movff	LCD_String@msg+1,tblptrh
  4786  000A' 6AF8               	clrf	tblptru,c
  4787  000C' 0EFF'              	movlw	(high __ramtop+-1)
  4788  000E' 64F7               	cpfsgt	tblptrh,c
  4789  0010' D003               	bra	u1857
  4790  0012' 0008               	tblrd		*
  4791  0014' 50F5               	movf	tablat,w,c
  4792  0016' D005               	bra	u1850
  4793  0018'                    u1857:
  4794  0018' CFF6 FFE9          	movff	tblptrl,fsr0l
  4795  001C' CFF7 FFEA          	movff	tblptrh,fsr0h
  4796  0020' 50EF               	movf	indf0,w,c
  4797  0022'                    u1850:
  4798  0022' EC00' F000'        	call	_LCD_Char
  4799                           
  4800                           ;lcd.c: 66:    msg++;
  4801  0026' 4A01'              	infsnz	LCD_String@msg,f,c
  4802  0028' 2A02'              	incf	LCD_String@msg+1,f,c
  4803  002A'                    l2123:
  4804                           
  4805                           ;lcd.c: 63:  while((*msg)!=0)
  4806  002A' C001' FFF6         	movff	LCD_String@msg,tblptrl
  4807  002E' C002' FFF7         	movff	LCD_String@msg+1,tblptrh
  4808  0032' 6AF8               	clrf	tblptru,c
  4809  0034' 0EFF'              	movlw	(high __ramtop+-1)
  4810  0036' 64F7               	cpfsgt	tblptrh,c
  4811  0038' D003               	bra	u1867
  4812  003A' 0008               	tblrd		*
  4813  003C' 50F5               	movf	tablat,w,c
  4814  003E' D005               	bra	u1860
  4815  0040'                    u1867:
  4816  0040' CFF6 FFE9          	movff	tblptrl,fsr0l
  4817  0044' CFF7 FFEA          	movff	tblptrh,fsr0h
  4818  0048' 50EF               	movf	indf0,w,c
  4819  004A'                    u1860:
  4820  004A' 0900               	iorlw	0
  4821  004C' B4D8               	btfsc	status,2,c
  4822  004E' 0012               	return	
  4823  0050' D7D8               	goto	l2119
  4824  0052'                    __end_of_LCD_String:
  4825                           	opt callstack 0
  4826                           
  4827 ;; *************** function _LCD_Char *****************
  4828 ;; Defined at:
  4829 ;;		line 50 in file "lcd.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  dat             1    wreg     unsigned char 
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;  dat             1    0[COMRAM] unsigned char 
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      void 
  4836 ;; Registers used:
  4837 ;;		wreg
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4843 ;;      Params:         0       0       0       0       0       0       0       0       0
  4844 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4846 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4847 ;;Total ram usage:        1 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_LCD_String
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text26
  4857  0000'                    __ptext26:
  4858                           	opt callstack 0
  4859  0000'                    _LCD_Char:
  4860                           	opt callstack 28
  4861                           
  4862                           ;incstack = 0
  4863                           ;LCD_Char@dat stored from wreg
  4864  0000' 6E00'              	movwf	LCD_Char@dat,c
  4865                           
  4866                           ;lcd.c: 50: void LCD_Char(char dat);lcd.c: 51: {;lcd.c: 52:  LATB= dat;
  4867  0002' C000' FF8A         	movff	LCD_Char@dat,3978	;volatile
  4868                           
  4869                           ;lcd.c: 53:  LATD0 = 1;
  4870  0006' 808C               	bsf	3980,0,c	;volatile
  4871                           
  4872                           ;lcd.c: 54:  LATD1=1;
  4873  0008' 828C               	bsf	3980,1,c	;volatile
  4874                           
  4875                           ;lcd.c: 55:  __nop();
  4876  000A' F000               	nop	
  4877                           
  4878                           ;lcd.c: 56:  LATD1=0;
  4879  000C' 928C               	bcf	3980,1,c	;volatile
  4880                           
  4881                           ;lcd.c: 57:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  4882  000E' F000               	nop	
  4883  0010' 0012               	return		;funcret
  4884  0012'                    __end_of_LCD_Char:
  4885                           	opt callstack 0
  4886                           
  4887 ;; *************** function _LCD_Init *****************
  4888 ;; Defined at:
  4889 ;;		line 24 in file "lcd.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;		None
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;		None
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      void 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, cstack
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4903 ;;      Params:         0       0       0       0       0       0       0       0       0
  4904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4906 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4907 ;;Total ram usage:        0 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; Hardware stack levels required when called:    1
  4910 ;; This function calls:
  4911 ;;		_LCD_Command
  4912 ;; This function is called by:
  4913 ;;		_main
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           	psect	text27
  4918  0000'                    __ptext27:
  4919                           	opt callstack 0
  4920  0000'                    _LCD_Init:
  4921                           	opt callstack 29
  4922                           
  4923                           ;lcd.c: 26:     _delay((unsigned long)((15)*(4000000/4000000.0)));
  4924                           
  4925                           ;incstack = 0
  4926  0000' 0E05               	movlw	5
  4927  0002'                    u2847:
  4928  0002' 2EE8               	decfsz	wreg,f,c
  4929  0004' D7FE               	bra	u2847
  4930                           
  4931                           ;lcd.c: 27:     TRISB = 0x00;
  4932  0006' 0E00               	movlw	0
  4933  0008' 6E93               	movwf	3987,c	;volatile
  4934                           
  4935                           ;lcd.c: 28:     TRISD = 0x00;
  4936  000A' 0E00               	movlw	0
  4937  000C' 6E95               	movwf	3989,c	;volatile
  4938                           
  4939                           ;lcd.c: 29:  LCD_Command(0x38);
  4940  000E' 0E38               	movlw	56
  4941  0010' EC00' F000'        	call	_LCD_Command
  4942                           
  4943                           ;lcd.c: 30:     LCD_Command(0x01);
  4944  0014' 0E01               	movlw	1
  4945  0016' EC00' F000'        	call	_LCD_Command
  4946                           
  4947                           ;lcd.c: 31:     LCD_Command(0x0c);
  4948  001A' 0E0C               	movlw	12
  4949  001C' EC00' F000'        	call	_LCD_Command
  4950                           
  4951                           ;lcd.c: 32:     LCD_Command(0x06);
  4952  0020' 0E06               	movlw	6
  4953  0022' EC00' F000'        	call	_LCD_Command
  4954  0026' 0012               	return		;funcret
  4955  0028'                    __end_of_LCD_Init:
  4956                           	opt callstack 0
  4957                           
  4958 ;; *************** function _LCD_Clear *****************
  4959 ;; Defined at:
  4960 ;;		line 35 in file "lcd.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4974 ;;      Params:         0       0       0       0       0       0       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4977 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4978 ;;Total ram usage:        0 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    1
  4981 ;; This function calls:
  4982 ;;		_LCD_Command
  4983 ;; This function is called by:
  4984 ;;		_main
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text28
  4989  0000'                    __ptext28:
  4990                           	opt callstack 0
  4991  0000'                    _LCD_Clear:
  4992                           	opt callstack 29
  4993                           
  4994                           ;lcd.c: 37:     LCD_Command(0x01);
  4995                           
  4996                           ;incstack = 0
  4997  0000' 0E01               	movlw	1
  4998  0002' EC00' F000'        	call	_LCD_Command
  4999  0006' 0012               	return		;funcret
  5000  0008'                    __end_of_LCD_Clear:
  5001                           	opt callstack 0
  5002                           
  5003 ;; *************** function _LCD_Command *****************
  5004 ;; Defined at:
  5005 ;;		line 40 in file "lcd.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  cmd             1    wreg     unsigned char 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  cmd             1    0[COMRAM] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      void 
  5012 ;; Registers used:
  5013 ;;		wreg
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0
  5020 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5022 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5023 ;;Total ram usage:        1 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_LCD_Init
  5029 ;;		_LCD_Clear
  5030 ;;		_LCD_String_xy
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text29
  5035  0000'                    __ptext29:
  5036                           	opt callstack 0
  5037  0000'                    _LCD_Command:
  5038                           	opt callstack 29
  5039                           
  5040                           ;incstack = 0
  5041                           ;LCD_Command@cmd stored from wreg
  5042  0000' 6E00'              	movwf	LCD_Command@cmd,c
  5043                           
  5044                           ;lcd.c: 40: void LCD_Command(char cmd );lcd.c: 41: {;lcd.c: 42:  LATB= cmd;
  5045  0002' C000' FF8A         	movff	LCD_Command@cmd,3978	;volatile
  5046                           
  5047                           ;lcd.c: 43:  LATD0 = 0;
  5048  0006' 908C               	bcf	3980,0,c	;volatile
  5049                           
  5050                           ;lcd.c: 44:  LATD1 = 1;
  5051  0008' 828C               	bsf	3980,1,c	;volatile
  5052                           
  5053                           ;lcd.c: 45:  __nop();
  5054  000A' F000               	nop	
  5055                           
  5056                           ;lcd.c: 46:  LATD1 = 0;
  5057  000C' 928C               	bcf	3980,1,c	;volatile
  5058                           
  5059                           ;lcd.c: 47:  _delay((unsigned long)((3)*(4000000/4000000.0)));
  5060  000E' D000               	nop2		;2 cycle nop
  5061  0010' F000               	nop	
  5062  0012' 0012               	return		;funcret
  5063  0014'                    __end_of_LCD_Command:
  5064                           	opt callstack 0
  5065                           
  5066 ;; *************** function _ADC_Read *****************
  5067 ;; Defined at:
  5068 ;;		line 19 in file "adc_source.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  channel         2    0[COMRAM] int 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  digital         2    6[COMRAM] int 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  2    0[COMRAM] int 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5082 ;;      Params:         2       0       0       0       0       0       0       0       0
  5083 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5084 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5085 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5086 ;;Total ram usage:        8 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_main
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text30
  5096  0000'                    __ptext30:
  5097                           	opt callstack 0
  5098  0000'                    _ADC_Read:
  5099                           	opt callstack 30
  5100                           
  5101                           ;adc_source.c: 19: int ADC_Read(int channel);adc_source.c: 20: {;adc_source.c: 21:     i
      +                          nt digital;;adc_source.c: 22:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b001111
      +                          00);
  5102                           
  5103                           ;incstack = 0
  5104  0000' C000' F002'        	movff	ADC_Read@channel,??_ADC_Read
  5105  0004' 90D8               	bcf	status,0,c
  5106  0006' 3602'              	rlcf	??_ADC_Read,f,c
  5107  0008' 90D8               	bcf	status,0,c
  5108  000A' 3602'              	rlcf	??_ADC_Read,f,c
  5109  000C' 0E3C               	movlw	60
  5110  000E' 1602'              	andwf	??_ADC_Read,f,c
  5111  0010' 50C2               	movf	4034,w,c	;volatile
  5112  0012' 0BC3               	andlw	195
  5113  0014' 1002'              	iorwf	??_ADC_Read,w,c
  5114  0016' 6EC2               	movwf	4034,c	;volatile
  5115                           
  5116                           ;adc_source.c: 24:     ADCON0 |= ((1<<ADON)|(1<<GO));
  5117  0018' A2C2               	btfss	4034,1,c	;volatile
  5118  001A' D003               	goto	u1890
  5119  001C' 6A00'              	clrf	??_ADC_Read& (0+255),c
  5120  001E' 2A00'              	incf	??_ADC_Read& (0+255),f,c
  5121  0020' D001               	goto	u1908
  5122  0022'                    u1890:
  5123  0022' 6A00'              	clrf	??_ADC_Read& (0+255),c
  5124  0024'                    u1908:
  5125  0024' 0E01               	movlw	1
  5126  0026' 6E00'              	movwf	(??_ADC_Read+1)& (0+255),c
  5127  0028' 2A02'              	incf	??_ADC_Read,f,c
  5128  002A' D002               	goto	u1914
  5129  002C'                    u1915:
  5130  002C' 90D8               	bcf	status,0,c
  5131  002E' 3603'              	rlcf	??_ADC_Read+1,f,c
  5132  0030'                    u1914:
  5133  0030' 2E02'              	decfsz	??_ADC_Read,f,c
  5134  0032' D7FC               	goto	u1915
  5135  0034' A0C2               	btfss	4034,0,c	;volatile
  5136  0036' D003               	goto	u1920
  5137  0038' 6A00'              	clrf	(??_ADC_Read+2)& (0+255),c
  5138  003A' 2A00'              	incf	(??_ADC_Read+2)& (0+255),f,c
  5139  003C' D001               	goto	u1938
  5140  003E'                    u1920:
  5141  003E' 6A00'              	clrf	(??_ADC_Read+2)& (0+255),c
  5142  0040'                    u1938:
  5143  0040' 0E01               	movlw	1
  5144  0042' 6E00'              	movwf	(??_ADC_Read+3)& (0+255),c
  5145  0044' 2A04'              	incf	??_ADC_Read+2,f,c
  5146  0046' D002               	goto	u1944
  5147  0048'                    u1945:
  5148  0048' 90D8               	bcf	status,0,c
  5149  004A' 3605'              	rlcf	??_ADC_Read+3,f,c
  5150  004C'                    u1944:
  5151  004C' 2E04'              	decfsz	??_ADC_Read+2,f,c
  5152  004E' D7FC               	goto	u1945
  5153  0050' 5005'              	movf	??_ADC_Read+3,w,c
  5154  0052' 1003'              	iorwf	??_ADC_Read+1,w,c
  5155  0054' 12C2               	iorwf	4034,f,c	;volatile
  5156  0056'                    l66:
  5157  0056' B2C2               	btfsc	4034,1,c	;volatile
  5158  0058' D7FE               	goto	l66
  5159                           
  5160                           ;adc_source.c: 26:     digital = (ADRESH*256) | (ADRESL);
  5161  005A' 50C3               	movf	4035,w,c	;volatile
  5162  005C' CFC4 F002'         	movff	4036,??_ADC_Read	;volatile
  5163  0060' 6A00'              	clrf	(??_ADC_Read+1)& (0+255),c
  5164  0062' C002' F003'        	movff	??_ADC_Read,??_ADC_Read+1
  5165  0066' 6A02'              	clrf	??_ADC_Read,c
  5166  0068' 1002'              	iorwf	??_ADC_Read,w,c
  5167  006A' 6E06'              	movwf	ADC_Read@digital,c
  5168  006C' 5003'              	movf	??_ADC_Read+1,w,c
  5169  006E' 6E07'              	movwf	ADC_Read@digital+1,c
  5170                           
  5171                           ;adc_source.c: 27:     return(digital);
  5172  0070' C006' F000'        	movff	ADC_Read@digital,?_ADC_Read
  5173  0074' C007' F001'        	movff	ADC_Read@digital+1,?_ADC_Read+1
  5174  0078' 0012               	return		;funcret
  5175  007A'                    __end_of_ADC_Read:
  5176                           	opt callstack 0
  5177                           
  5178 ;; *************** function _ADC_Init *****************
  5179 ;; Defined at:
  5180 ;;		line 10 in file "adc_source.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5194 ;;      Params:         0       0       0       0       0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5197 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5198 ;;Total ram usage:        0 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		_main
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text31
  5208  0000'                    __ptext31:
  5209                           	opt callstack 0
  5210  0000'                    _ADC_Init:
  5211                           	opt callstack 30
  5212                           
  5213                           ;adc_source.c: 12:     TRISA = 0xff;
  5214                           
  5215                           ;incstack = 0
  5216  0000' 6892               	setf	3986,c	;volatile
  5217                           
  5218                           ;adc_source.c: 13:     ADCON1 = 0x00;
  5219  0002' 0E00               	movlw	0
  5220  0004' 6EC1               	movwf	4033,c	;volatile
  5221                           
  5222                           ;adc_source.c: 14:     ADCON2 = 0x92;
  5223  0006' 0E92               	movlw	146
  5224  0008' 6EC0               	movwf	4032,c	;volatile
  5225                           
  5226                           ;adc_source.c: 15:     ADRESH=0;
  5227  000A' 0E00               	movlw	0
  5228  000C' 6EC4               	movwf	4036,c	;volatile
  5229                           
  5230                           ;adc_source.c: 16:     ADRESL=0;
  5231  000E' 0E00               	movlw	0
  5232  0010' 6EC3               	movwf	4035,c	;volatile
  5233  0012' 0012               	return		;funcret
  5234  0014'                    __end_of_ADC_Init:
  5235                           	opt callstack 0
  5236                           
  5237                           	psect	rparam
  5238  0000                     tosu	equ	0xFFF
  5239                           tosh	equ	0xFFE
  5240                           tosl	equ	0xFFD
  5241                           stkptr	equ	0xFFC
  5242                           pclatu	equ	0xFFB
  5243                           pclath	equ	0xFFA
  5244                           pcl	equ	0xFF9
  5245                           tblptru	equ	0xFF8
  5246                           tblptrh	equ	0xFF7
  5247                           tblptrl	equ	0xFF6
  5248                           tablat	equ	0xFF5
  5249                           prodh	equ	0xFF4
  5250                           prodl	equ	0xFF3
  5251                           indf0	equ	0xFEF
  5252                           postinc0	equ	0xFEE
  5253                           postdec0	equ	0xFED
  5254                           preinc0	equ	0xFEC
  5255                           plusw0	equ	0xFEB
  5256                           fsr0h	equ	0xFEA
  5257                           fsr0l	equ	0xFE9
  5258                           wreg	equ	0xFE8
  5259                           indf1	equ	0xFE7
  5260                           postinc1	equ	0xFE6
  5261                           postdec1	equ	0xFE5
  5262                           preinc1	equ	0xFE4
  5263                           plusw1	equ	0xFE3
  5264                           fsr1h	equ	0xFE2
  5265                           fsr1l	equ	0xFE1
  5266                           bsr	equ	0xFE0
  5267                           indf2	equ	0xFDF
  5268                           postinc2	equ	0xFDE
  5269                           postdec2	equ	0xFDD
  5270                           preinc2	equ	0xFDC
  5271                           plusw2	equ	0xFDB
  5272                           fsr2h	equ	0xFDA
  5273                           fsr2l	equ	0xFD9
  5274                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      94
    BANK0           160     46      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S861_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    memset@dest	PTR void  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    memset@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[4]), STR_3(CODE[4]), main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[4]), STR_3(CODE[4]), main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    sp__memset	PTR void  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___xxtofl->___awdiv
    ___wmul->_ADC_Read
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awdiv->___wmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   18354
                                             88 COMRAM     2     2      0
                                             18 BANK0     28    28      0
                           _ADC_Init
                           _ADC_Read
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                           _PWM_Init
                            ___awdiv
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                             _memset
                       _servoRotate0
                      _servoRotate90
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   10109
                                              0 BANK0     18    10      8
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9604
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    9247
                                             63 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3157
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _servoRotate90                                        3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate0                                         3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    1175
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                             22 COMRAM    14    10      4
                           _ADC_Read (ARG)
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     449
                                              8 COMRAM     6     2      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             36 COMRAM    25    17      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             61 COMRAM    25    17      8
                           _ADC_Read (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                             14 COMRAM     8     4      4
                           _ADC_Read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     908
                                              3 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     143
                                              1 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      22
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      22
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             8     6      2     197
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _PWM_Init
   ___awdiv
     _ADC_Read (ARG)
     ___wmul (ARG)
       _ADC_Read (ARG)
   ___fldiv
     _ADC_Read (ARG)
     ___flmul (ARG)
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
         ___awdiv (ARG)
           _ADC_Read (ARG)
           ___wmul (ARG)
             _ADC_Read (ARG)
         ___wmul (ARG)
           _ADC_Read (ARG)
     ___xxtofl (ARG)
       _ADC_Read (ARG)
       ___awdiv (ARG)
         _ADC_Read (ARG)
         ___wmul (ARG)
           _ADC_Read (ARG)
       ___wmul (ARG)
         _ADC_Read (ARG)
   ___flge
   ___flmul
     _ADC_Read (ARG)
     ___xxtofl (ARG)
       _ADC_Read (ARG)
       ___awdiv (ARG)
         _ADC_Read (ARG)
         ___wmul (ARG)
           _ADC_Read (ARG)
       ___wmul (ARG)
         _ADC_Read (ARG)
   ___fltol
   ___wmul
     _ADC_Read (ARG)
   ___xxtofl
     _ADC_Read (ARG)
     ___awdiv (ARG)
       _ADC_Read (ARG)
       ___wmul (ARG)
         _ADC_Read (ARG)
     ___wmul (ARG)
       _ADC_Read (ARG)
   _memset
   _servoRotate0
   _servoRotate90
   _sprintf
     ___fltol (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      52       5       51.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B0      20        0.0%
DATA                 0      0      B0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jun 03 00:16:56 2019

           ___fldiv@aexp 000055             ___fldiv@bexp 000054             ___fldiv@sign 00004D  
           ?_LCD_Command 000000                       l66 000056                       _GO 007E11  
           ___awdiv@sign 000013              __CFG_BOR$ON 000000      ___wmul@multiplicand 00000A  
            __CFG_BORV$3 000000              ?_LCD_String 000001            servoRotate0@i 000001  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000              __CFG_WDT$ON 000000  
                    l120 000008                      l115 000008                      l149 00002E  
                    l167 000074                      l169 00007C                      l470 000094  
                    l800 0001E0                      l801 0001DC                      l819 000080  
                    l836 00031E                      l828 000298                      l860 00003E  
                    l829 000294                      l880 000028                      l867 0000BC  
                    l789 000172             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    _abs 000000                      _pad 000000                      wreg 000FE8  
           ___flmul@aexp 000035             ___flmul@bexp 000036           servoRotate90@i 000001  
           ___flmul@sign 000030             ___flmul@temp 00003B             ___flmul@prod 000037  
            LCD_Char@dat 000000             ___fltol@exp1 000009                     l2001 000096  
                   ?_abs 000012                     l2005 0000A4                     l2015 00019C  
                   l2123 00002A                     l2035 000200                     l2131 00003A  
                   l2205 000018                     l2221 000044                     l2119 000002  
                   l2039 000218                     l2071 0000A4                     l2209 000026  
                   l2401 000030                     l2241 000128                     l2233 0000E0  
                   l2081 000156                     l2129 000014                     l2331 000170  
                   l2307 0000D2                     l2403 000040                     l2235 000112  
                   l2227 0000A8                     l2091 00019C                     l2325 00014A  
                   l2317 000122                     l2261 00002C                     l2343 0001A6  
                   l2511 00033C                     l2087 000192                     l2337 000188  
                   l2281 00006C                     l2265 000030                     l2417 00006C  
                   l2097 0001B4                     l2531 000024                     l2371 000272  
                   l2363 000224                     l2427 00009E                     l2419 000070  
                   l2525 000014                     l2293 0000A4                     l2285 000070  
                   l2605 000068                     l1901 000054                     l2367 000248  
                   l2623 0000A8                     l2615 000080                     l2537 00003A  
                   l2553 00006C                     l2377 00027E                     l2617 00008C  
                   l2609 000078                     l2641 000072                     l2633 00004E  
                   l2705 0001A0                     l2539 000042                     l2379 000280  
                   l2299 0000BA                     l2475 00025E                     l2651 0000E2  
                   l2643 00007E                     l1835 000018                     l1907 00007A  
                   l1923 000100                     l2707 0001A4                     l2557 00007A  
                   l2549 000062                     l2573 00007E                     l2565 000034  
                   l2469 000240                     l2653 0000EE                     l2645 0000A4  
                   l1845 00000A                     l1853 00000A                     l1909 00008E  
                   l2495 0002DC                     l2399 00002C                     l2639 00006C  
                   l1855 00000E                     l1871 000038                     l1927 000126  
                   l1919 0000EA                     l1943 000050                     l2569 000068  
                   l1849 000020                     l1865 000018                     l2579 0000CC  
                   l2499 0002FA                     l1875 000050                     l1971 000012  
                   l1963 000102                     l1955 0000C6                     l1947 00006A  
                   l1939 00002C                     l2589 00001E                     l2669 00012E  
                   l1869 000026                     l1973 00001E                     l1949 00007E  
                   l2693 000020                     ?_pad 000010                     l1879 00007C  
                   l1895 00002C                     l1959 0000DC                     l1987 000056  
                   _ADON 007E10                     STR_1 000001                     STR_2 000007  
                   STR_3 000010                     STR_4 00000C                     u2200 0001D6  
                   u1410 000010                     u1500 00000E                     u1430 000058  
                   _LATB 000F8A                     u2240 000232                     u2250 000256  
                   u1610 000082                     u1531 00005A                     u2340 00008C  
                   u2430 0002EA                     u2350 000202                     u1550 000092  
                   u1710 000090                     u2440 000308                     u1720 0001AA  
                   u1650 000028                     u2355 0001F8                     u2620 000092  
                   u2700 0000F8                     u1740 0001CC                     u1660 00002A  
                   u1741 0001CA                     u2390 00028E                     u1750 0001DA  
                   u1830 0000D8                     u1920 00003E                     u1760 0001DE  
                   u1914 000030                     u1850 000022                     u2490 000046  
                   u2570 00000C                     u1690 00006A                     u1915 00002C  
                   u1908 000024                     u1860 00004A                     u2580 00003C  
                   u1780 0001EA                     u2740 000126                     u2807 00000C  
                   u1944 00004C                     u1960 000036                     u2760 000162  
                   u1945 000048                     u1857 000018                     u2585 000032  
                   u2817 00001E                     u1938 000040                     u1890 000022  
                   u1970 00003A                     u1867 000040                     u2827 00000C  
                   u2837 00001A                     u2758 000128                     u2847 000002  
                   u2778 000164                     u2797 00026E                     abs@a 000012  
                   _dbuf 000004                     _ctoa 000000                     _main 000000  
                   _dtoa 000000       __size_of_LCD_Clear 000000                     _prec 000002  
                   _nout 000000                     pad@i 000017                     pad@p 000014  
                   fsr0h 000FEA                     fsr1h 000FE2                     indf0 000FEF  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 000019                     fsr2l 000FD9  
       __end_of_ADC_Init 000014         __end_of_ADC_Read 00007A                     prodh 000FF4  
                   prodl 000FF3                     start 000000*           __CFG_IESO$OFF 000000  
        ___fldiv@new_exp 00004E          ??_servoRotate90 000000            _LCD_String_xy 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ??_abs 000014  
                  ??_pad 000016         __end_of_LCD_Char 000012         __end_of_LCD_Init 000028  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000            ___fltol@sign1 000008  
        __end_of___aodiv 000148                    ?_ctoa 00001B                    ?_main 000000  
                  ?_dtoa 00001B          __end_of___aomod 000124          __end_of___fldiv 000288  
        __end_of___awdiv 000084          __end_of___flmul 000352          __end_of___fltol 0000BA  
        ___awdiv@divisor 000010                    _LATD0 007C60                    _LATD1 007C61  
        ___awdiv@counter 000012             vfpfcnvrt@fmt 000041            __CFG_USBDIV$1 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _flags 000002  
                  _fputc 000000                    _fputs 000000                    pad@fp 000010  
                  _width 000000                    ctoa@c 00001D                    _putch 000000  
                  ctoa@w 00001E                    dtoa@d 00001D                    dtoa@i 00003D  
                  dtoa@n 000035                    dtoa@p 00002F                    dtoa@s 000033  
                  dtoa@w 000031                    tablat 000FF5                    status 000FD8  
    __size_of_LCD_String 000000          __end_of_sprintf 000052           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000           ?_LCD_String_xy 000003          __initialization 000000  
           __end_of_ctoa 00004E             __end_of_main 0002B8             __end_of_dtoa 000242  
                 ??_ctoa 00001E                   ??_main 000058                   ??_dtoa 000025  
      __end_of_LCD_Clear 000008            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_fputc 000000  
                 ?_fputs 000009                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 00000E                   ?_putch 000000         LCD_String_xy@msg 000004  
       LCD_String_xy@pos 000003         LCD_String_xy@row 000006                   _OSCCON 000FD3  
       __end_of___xxtofl 000140           __CFG_XINST$OFF 000000             vfprintf@cfmt 000056  
                 ___flge 000000                ??___aodiv 000010                ??___aomod 000010  
                 ___wmul 000000                ??___fldiv 000045                ??___awdiv 000012  
         __CFG_STVREN$ON 000000                ??___flmul 00002C                ??___fltol 000004  
        ADC_Read@channel 000000                   _memset 000000          ADC_Read@digital 000006  
                 clear_0 000006         ___awdiv@quotient 000014                   pad@buf 000012  
                 ctoa@fp 00001B     __size_of_LCD_Command 000000                   dtoa@fp 00001B  
                 _strlen 000000                   fputc@c 000000                   fputs@c 00000D  
                 fputs@i 00000E                   fputs@s 000009                ?_ADC_Init 000000  
              ?_ADC_Read 000000             __mediumconst 000000*                  tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 000000  
       __end_of_vfprintf 000056                ??_sprintf 000058          __CFG_FOSC$EC_EC 000000  
             ___flge@ff1 000000               ___flge@ff2 000004             ___xxtofl@arg 000020  
           ___xxtofl@exp 00001F             ___xxtofl@val 000016                ?_LCD_Char 000000  
             __accesstop 000000* __end_of__initialization 000014                ?_LCD_Init 000000  
        ??_LCD_String_xy 000006            ___rparam_used 000001               ___fltol@f1 000000  
         __pcstackCOMRAM 000000            __end_of_fputc 0000A0            __end_of_fputs 000038  
          __end_of_putch 000002             ??_LCD_String 000003                ?_PWM_Init 000000  
             ??_ADC_Init 000000               ??_ADC_Read 000002                  ??_fputc 000004  
                ??_fputs 00000D                  ??_putch 000000               __pbssBANK0 000000  
             ??_LCD_Char 000000               ??_LCD_Init 000001       __end_of_LCD_String 000052  
                ?___flge 000000                  ?___wmul 000008          main@Temperature 000012  
                ?_memset 000000               ??_PWM_Init 000000                  ?_strlen 000000  
              ?___xxtofl 000016       __size_of_vfpfcnvrt 000000          __CFG_VREGEN$OFF 000000  
          LCD_String@msg 000001                  __Hparam 000000                  __Lparam 000000  
  __end_of_servoRotate90 00003C          __size_of___flge 000000                  ___aodiv 000000  
                ___aomod 000000                  ___fldiv 000000                  ___awdiv 000000  
                ___flmul 000000                  ___fltol 000000          __size_of___wmul 000000  
              ?_vfprintf 000050             __psmallconst 000000                  __pcinit 000000  
        __size_of_memset 000000                  __ramtop 000000*                 __ptext0 000000  
                __ptext1 000000                  __ptext2 000000                  __ptext3 000000  
                __ptext4 000000                  __ptext5 000000                  __ptext6 000000  
                __ptext7 000000                  __ptext8 000000                  __ptext9 000000  
        __size_of_strlen 000000             __size_of_abs 000000             __size_of_pad 000000  
             ??___xxtofl 00001A                _LCD_Clear 000000                  _sprintf 000000  
   end_of_initialization 000014                  fputc@fp 000002                  memset@c 000002  
                memset@k 000008                  memset@n 000004                  memset@s 00000A  
         LCD_Command@cmd 000000            __Lmediumconst 000000*                 fputs@fp 00000B  
      __end_of_vfpfcnvrt 0001E8            ?_servoRotate0 000000                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 000056                  strlen@a 000002                  strlen@s 000000  
          ___xxtofl@sign 00001E                _TRISAbits 000F92                _TRISCbits 000F94  
             ?_LCD_Clear 000000              ___fldiv@grs 000050              ___fldiv@rem 000049  
      __size_of_ADC_Init 000000        __size_of_ADC_Read 000000              ___flmul@grs 000031  
      __size_of_LCD_Char 000000        __size_of_LCD_Init 000000           ??_servoRotate0 000000  
          ??_LCD_Command 000000           __end_of___flge 0000D0              vfpfcnvrt@ap 000043  
            vfpfcnvrt@fp 00003F              vfpfcnvrt@ll 000047           __end_of___wmul 000026  
         __end_of_memset 000132           __end_of_strlen 00002A      start_initialization 000000  
            __end_of_abs 000032              __end_of_pad 000096    __end_of_LCD_String_xy 000034  
            vfprintf@fmt 000052                 ??___flge 000008                 ??___wmul 00000C  
       __CFG_LPT1OSC$OFF 000000                 ??_memset 000006               memset@dest 000000  
               ??_strlen 000002                ___fldiv@a 000041                ___fldiv@b 00003D  
    __end_of_LCD_Command 000014                ___flmul@a 000028                ___flmul@b 000024  
            __pbssCOMRAM 000000            __pcstackBANK0 000000         ___aodiv@dividend 000000  
            ??_LCD_Clear 000001        __size_of___xxtofl 000000                 ?___aodiv 000000  
               ?___aomod 000000                 ?___fldiv 00003D                 ?___awdiv 00000E  
       ___aodiv@quotient 000012                 ?___flmul 000024                 ?___fltol 000000  
      __size_of_vfprintf 000000              __smallconst 000000*                _ADC_Init 000000  
               _ADC_Read 000000     __end_of_servoRotate0 000038    LCD_String_xy@location 000007  
               ?_sprintf 000000           __size_of_fputc 000000           __size_of_fputs 000000  
         __size_of_putch 000000                 _LCD_Char 000000                 _LCD_Init 000000  
         ___wmul@product 00000C                 _LATAbits 000F89         __CFG_WDTPS$32768 000000  
            _LCD_Command 000000                _vfpfcnvrt 000000               _ADCON0bits 000FC2  
               _PWM_Init 000000*       ___wmul@multiplier 000008               vfpfcnvrt@c 00004F  
 __size_of_servoRotate90 000000                 __Hrparam 000000*              vfprintf@ap 000054  
               __Lrparam 000000*              vfprintf@fp 000050         __size_of___aodiv 000000  
       __size_of___aomod 000000         __size_of___fldiv 000000         __size_of___awdiv 000000  
       __size_of___flmul 000000         __size_of___fltol 000000               ?_vfpfcnvrt 00003F  
        ___aodiv@divisor 000008          ___aodiv@counter 000010               sprintf@fmt 000002  
               ___xxtofl 000000                 _dtoa$393 00002D                 __ptext10 000000  
               __ptext11 000000                 __ptext20 000000                 __ptext12 000000  
               __ptext21 000000                 __ptext13 000000                 __ptext30 000000  
               __ptext22 000000                 __ptext14 000000                 __ptext31 000000  
               __ptext23 000000                 __ptext15 000000                 __ptext24 000000  
               __ptext16 000000                 __ptext25 000000                 __ptext17 000000  
               __ptext26 000000                 __ptext18 000000                 __ptext27 000000  
               __ptext19 000000                 __ptext28 000000                 __ptext29 000000  
       __size_of_sprintf 000000            __size_of_ctoa 000000            __size_of_main 000000  
          __size_of_dtoa 000000            _servoRotate90 000000                 _vfprintf 000000  
               main@Soil 00001C                 main@temp 00002A                 main@soil 000026  
             _LCD_String 000000         ___aomod@dividend 000000    __CFG_CPUDIV$OSC1_PLL2 000000  
  __size_of_servoRotate0 000000                sprintf@ap 00000A           ?_servoRotate90 000000  
           _servoRotate0 000000          ___aomod@divisor 000008              ??_vfpfcnvrt 000045  
        ___aomod@counter 000010                 sprintf@f 00000C                 sprintf@s 000000  
 __size_of_LCD_String_xy 000000             ___aodiv@sign 000011             ___aomod@sign 000011  
