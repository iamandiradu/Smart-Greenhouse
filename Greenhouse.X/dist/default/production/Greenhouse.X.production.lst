

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jun 03 20:42:16 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     _LATCbits	set	3979
    79  0000                     _LATB	set	3978
    80  0000                     _TRISD	set	3989
    81  0000                     _TRISB	set	3987
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADCON0	set	4034
    84  0000                     _ADRESL	set	4035
    85  0000                     _ADRESH	set	4036
    86  0000                     _ADCON2	set	4032
    87  0000                     _ADCON1	set	4033
    88  0000                     _LATAbits	set	3977
    89  0000                     _TRISAbits	set	3986
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISA	set	3986
    92  0000                     _OSCCON	set	4051
    93  0000                     _LATD1	set	31841
    94  0000                     _LATD0	set	31840
    95  0000                     _GO	set	32273
    96  0000                     _ADON	set	32272
    97                           
    98                           	psect	smallconst
    99  000800                     __psmallconst:
   100                           	opt callstack 0
   101  000800  00                 	db	0
   102  000801                     STR_1:
   103  000801  25                 	db	37
   104  000802  64                 	db	100	;'d'
   105  000803  25                 	db	37
   106  000804  63                 	db	99	;'c'
   107  000805  43                 	db	67	;'C'
   108  000806  00                 	db	0
   109  000807                     STR_2:
   110  000807  25                 	db	37
   111  000808  64                 	db	100	;'d'
   112  000809  25                 	db	37
   113  00080A  25                 	db	37
   114  00080B  00                 	db	0
   115  00080C                     STR_4:
   116  00080C  48                 	db	72	;'H'
   117  00080D  3A                 	db	58	;':'
   118  00080E  20                 	db	32
   119  00080F  00                 	db	0
   120  000810                     STR_3:
   121  000810  54                 	db	84	;'T'
   122  000811  3A                 	db	58	;':'
   123  000812  20                 	db	32
   124  000813  00                 	db	0
   125                           
   126                           ; #config settings
   127  000814  00                 	db	0	; dummy byte at the end
   128  0000                     
   129                           	psect	cinit
   130  0020CC                     __pcinit:
   131                           	opt callstack 0
   132  0020CC                     start_initialization:
   133                           	opt callstack 0
   134  0020CC                     __initialization:
   135                           	opt callstack 0
   136                           
   137                           ; Clear objects allocated to BANK0 (34 bytes)
   138  0020CC  EE00  F095         	lfsr	0,__pbssBANK0
   139  0020D0  0E22               	movlw	34
   140  0020D2                     clear_0:
   141  0020D2  6AEE               	clrf	postinc0,c
   142  0020D4  06E8               	decf	wreg,f,c
   143  0020D6  E1FD               	bnz	clear_0
   144                           
   145                           ; Clear objects allocated to COMRAM (6 bytes)
   146  0020D8  6A5F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   147  0020DA  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   148  0020DC  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   149  0020DE  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   150  0020E0  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   151  0020E2  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   152  0020E4                     end_of_initialization:
   153                           	opt callstack 0
   154  0020E4                     __end_of__initialization:
   155                           	opt callstack 0
   156  0020E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   157  0020E6  6EF8               	movwf	tblptru,c
   158  0020E8  0100               	movlb	0
   159  0020EA  EF0B  F004         	goto	_main	;jump to C main() function
   160                           
   161                           	psect	bssCOMRAM
   162  00005A                     __pbssCOMRAM:
   163                           	opt callstack 0
   164  00005A                     _width:
   165                           	opt callstack 0
   166  00005A                     	ds	2
   167  00005C                     _prec:
   168                           	opt callstack 0
   169  00005C                     	ds	2
   170  00005E                     _flags:
   171                           	opt callstack 0
   172  00005E                     	ds	2
   173                           
   174                           	psect	bssBANK0
   175  000095                     __pbssBANK0:
   176                           	opt callstack 0
   177  000095                     _nout:
   178                           	opt callstack 0
   179  000095                     	ds	2
   180  000097                     _dbuf:
   181                           	opt callstack 0
   182  000097                     	ds	32
   183                           
   184                           	psect	cstackBANK0
   185  000060                     __pcstackBANK0:
   186                           	opt callstack 0
   187  000060                     ?_sprintf:
   188                           	opt callstack 0
   189  000060                     sprintf@s:
   190                           	opt callstack 0
   191                           
   192                           ; 2 bytes @ 0x0
   193  000060                     	ds	2
   194  000062                     sprintf@fmt:
   195                           	opt callstack 0
   196                           
   197                           ; 2 bytes @ 0x2
   198  000062                     	ds	8
   199  00006A                     sprintf@ap:
   200                           	opt callstack 0
   201                           
   202                           ; 2 bytes @ 0xA
   203  00006A                     	ds	2
   204  00006C                     sprintf@f:
   205                           	opt callstack 0
   206                           
   207                           ; 6 bytes @ 0xC
   208  00006C                     	ds	6
   209  000072                     main@Temperature:
   210                           	opt callstack 0
   211                           
   212                           ; 10 bytes @ 0x12
   213  000072                     	ds	10
   214  00007C                     main@Soil:
   215                           	opt callstack 0
   216                           
   217                           ; 10 bytes @ 0x1C
   218  00007C                     	ds	10
   219  000086                     main@min_temperature:
   220                           	opt callstack 0
   221                           
   222                           ; 2 bytes @ 0x26
   223  000086                     	ds	2
   224  000088                     _main$211:
   225                           	opt callstack 0
   226                           
   227                           ; 1 bytes @ 0x28
   228  000088                     	ds	1
   229  000089                     main@humidity:
   230                           	opt callstack 0
   231                           
   232                           ; 2 bytes @ 0x29
   233  000089                     	ds	2
   234  00008B                     main@max_temperature:
   235                           	opt callstack 0
   236                           
   237                           ; 2 bytes @ 0x2B
   238  00008B                     	ds	2
   239  00008D                     main@soil:
   240                           	opt callstack 0
   241                           
   242                           ; 4 bytes @ 0x2D
   243  00008D                     	ds	4
   244  000091                     main@temp:
   245                           	opt callstack 0
   246                           
   247                           ; 4 bytes @ 0x31
   248  000091                     	ds	4
   249                           
   250                           	psect	cstackCOMRAM
   251  000001                     __pcstackCOMRAM:
   252                           	opt callstack 0
   253  000001                     ??_servoRotate0:
   254  000001                     ??_servoRotate90:
   255  000001                     ??_LCD_Command:
   256  000001                     ??_LCD_Char:
   257  000001                     ?_ADC_Read:
   258                           	opt callstack 0
   259  000001                     ?_strlen:
   260                           	opt callstack 0
   261  000001                     ?___fltol:
   262                           	opt callstack 0
   263  000001                     ?___aodiv:
   264                           	opt callstack 0
   265  000001                     ?___aomod:
   266                           	opt callstack 0
   267  000001                     ADC_Read@channel:
   268                           	opt callstack 0
   269  000001                     memset@dest:
   270                           	opt callstack 0
   271  000001                     fputc@c:
   272                           	opt callstack 0
   273  000001                     strlen@s:
   274                           	opt callstack 0
   275  000001                     ___fltol@f1:
   276                           	opt callstack 0
   277  000001                     ___aodiv@dividend:
   278                           	opt callstack 0
   279  000001                     ___aomod@dividend:
   280                           	opt callstack 0
   281                           
   282                           ; 8 bytes @ 0x0
   283  000001                     	ds	1
   284  000002                     LCD_Command@cmd:
   285                           	opt callstack 0
   286  000002                     LCD_Char@dat:
   287                           	opt callstack 0
   288  000002                     servoRotate0@i:
   289                           	opt callstack 0
   290  000002                     servoRotate90@i:
   291                           	opt callstack 0
   292                           
   293                           ; 2 bytes @ 0x1
   294  000002                     	ds	1
   295  000003                     ??_LCD_Init:
   296  000003                     ??_ADC_Read:
   297  000003                     LCD_String@msg:
   298                           	opt callstack 0
   299  000003                     memset@c:
   300                           	opt callstack 0
   301  000003                     fputc@fp:
   302                           	opt callstack 0
   303  000003                     strlen@a:
   304                           	opt callstack 0
   305                           
   306                           ; 2 bytes @ 0x2
   307  000003                     	ds	2
   308  000005                     ??_fputc:
   309  000005                     ??___fltol:
   310  000005                     LCD_String_xy@pos:
   311                           	opt callstack 0
   312  000005                     memset@n:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x4
   316  000005                     	ds	1
   317  000006                     LCD_String_xy@msg:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0x5
   321  000006                     	ds	1
   322  000007                     ??_memset:
   323  000007                     ADC_Read@digital:
   324                           	opt callstack 0
   325                           
   326                           ; 2 bytes @ 0x6
   327  000007                     	ds	1
   328  000008                     LCD_String_xy@row:
   329                           	opt callstack 0
   330                           
   331                           ; 1 bytes @ 0x7
   332  000008                     	ds	1
   333  000009                     ?___xxtofl:
   334                           	opt callstack 0
   335  000009                     LCD_String_xy@location:
   336                           	opt callstack 0
   337  000009                     ___fltol@sign1:
   338                           	opt callstack 0
   339  000009                     memset@k:
   340                           	opt callstack 0
   341  000009                     ___xxtofl@val:
   342                           	opt callstack 0
   343  000009                     ___aodiv@divisor:
   344                           	opt callstack 0
   345  000009                     ___aomod@divisor:
   346                           	opt callstack 0
   347                           
   348                           ; 8 bytes @ 0x8
   349  000009                     	ds	1
   350  00000A                     ___fltol@exp1:
   351                           	opt callstack 0
   352  00000A                     fputs@s:
   353                           	opt callstack 0
   354                           
   355                           ; 2 bytes @ 0x9
   356  00000A                     	ds	1
   357  00000B                     memset@s:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0xA
   361  00000B                     	ds	1
   362  00000C                     fputs@fp:
   363                           	opt callstack 0
   364                           
   365                           ; 2 bytes @ 0xB
   366  00000C                     	ds	1
   367  00000D                     ??___xxtofl:
   368                           
   369                           ; 1 bytes @ 0xC
   370  00000D                     	ds	1
   371  00000E                     fputs@c:
   372                           	opt callstack 0
   373                           
   374                           ; 1 bytes @ 0xD
   375  00000E                     	ds	1
   376  00000F                     fputs@i:
   377                           	opt callstack 0
   378                           
   379                           ; 2 bytes @ 0xE
   380  00000F                     	ds	2
   381  000011                     ?_pad:
   382                           	opt callstack 0
   383  000011                     ___aodiv@counter:
   384                           	opt callstack 0
   385  000011                     ___aomod@counter:
   386                           	opt callstack 0
   387  000011                     ___xxtofl@sign:
   388                           	opt callstack 0
   389  000011                     pad@fp:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0x10
   393  000011                     	ds	1
   394  000012                     ___aodiv@sign:
   395                           	opt callstack 0
   396  000012                     ___aomod@sign:
   397                           	opt callstack 0
   398  000012                     ___xxtofl@exp:
   399                           	opt callstack 0
   400                           
   401                           ; 1 bytes @ 0x11
   402  000012                     	ds	1
   403  000013                     ?_abs:
   404                           	opt callstack 0
   405  000013                     pad@buf:
   406                           	opt callstack 0
   407  000013                     abs@a:
   408                           	opt callstack 0
   409  000013                     ___xxtofl@arg:
   410                           	opt callstack 0
   411  000013                     ___aodiv@quotient:
   412                           	opt callstack 0
   413                           
   414                           ; 8 bytes @ 0x12
   415  000013                     	ds	2
   416  000015                     ??_abs:
   417  000015                     pad@p:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x14
   421  000015                     	ds	2
   422  000017                     ??_pad:
   423  000017                     ?___flmul:
   424                           	opt callstack 0
   425  000017                     ___flge@ff1:
   426                           	opt callstack 0
   427  000017                     ___flmul@b:
   428                           	opt callstack 0
   429                           
   430                           ; 4 bytes @ 0x16
   431  000017                     	ds	1
   432  000018                     pad@i:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0x17
   436  000018                     	ds	2
   437  00001A                     pad@w:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x19
   441  00001A                     	ds	1
   442  00001B                     ___flge@ff2:
   443                           	opt callstack 0
   444  00001B                     ___flmul@a:
   445                           	opt callstack 0
   446                           
   447                           ; 4 bytes @ 0x1A
   448  00001B                     	ds	1
   449  00001C                     ?_ctoa:
   450                           	opt callstack 0
   451  00001C                     ?_dtoa:
   452                           	opt callstack 0
   453  00001C                     ctoa@fp:
   454                           	opt callstack 0
   455  00001C                     dtoa@fp:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x1B
   459  00001C                     	ds	2
   460  00001E                     ctoa@c:
   461                           	opt callstack 0
   462  00001E                     dtoa@d:
   463                           	opt callstack 0
   464                           
   465                           ; 8 bytes @ 0x1D
   466  00001E                     	ds	1
   467  00001F                     ??___flmul:
   468  00001F                     ??___flge:
   469  00001F                     ctoa@w:
   470                           	opt callstack 0
   471                           
   472                           ; 2 bytes @ 0x1E
   473  00001F                     	ds	4
   474  000023                     ___flmul@sign:
   475                           	opt callstack 0
   476                           
   477                           ; 1 bytes @ 0x22
   478  000023                     	ds	1
   479  000024                     ___flmul@grs:
   480                           	opt callstack 0
   481                           
   482                           ; 4 bytes @ 0x23
   483  000024                     	ds	2
   484  000026                     ??_dtoa:
   485                           
   486                           ; 1 bytes @ 0x25
   487  000026                     	ds	2
   488  000028                     ___flmul@aexp:
   489                           	opt callstack 0
   490                           
   491                           ; 1 bytes @ 0x27
   492  000028                     	ds	1
   493  000029                     ___flmul@bexp:
   494                           	opt callstack 0
   495                           
   496                           ; 1 bytes @ 0x28
   497  000029                     	ds	1
   498  00002A                     ___flmul@prod:
   499                           	opt callstack 0
   500                           
   501                           ; 4 bytes @ 0x29
   502  00002A                     	ds	4
   503  00002E                     _dtoa$427:
   504                           	opt callstack 0
   505  00002E                     ___flmul@temp:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x2D
   509  00002E                     	ds	2
   510  000030                     ?___fldiv:
   511                           	opt callstack 0
   512  000030                     dtoa@p:
   513                           	opt callstack 0
   514  000030                     ___fldiv@b:
   515                           	opt callstack 0
   516                           
   517                           ; 4 bytes @ 0x2F
   518  000030                     	ds	2
   519  000032                     dtoa@w:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x31
   523  000032                     	ds	2
   524  000034                     dtoa@s:
   525                           	opt callstack 0
   526  000034                     ___fldiv@a:
   527                           	opt callstack 0
   528                           
   529                           ; 4 bytes @ 0x33
   530  000034                     	ds	2
   531  000036                     dtoa@n:
   532                           	opt callstack 0
   533                           
   534                           ; 8 bytes @ 0x35
   535  000036                     	ds	2
   536  000038                     ??___fldiv:
   537                           
   538                           ; 1 bytes @ 0x37
   539  000038                     	ds	4
   540  00003C                     ___fldiv@rem:
   541                           	opt callstack 0
   542                           
   543                           ; 4 bytes @ 0x3B
   544  00003C                     	ds	2
   545  00003E                     dtoa@i:
   546                           	opt callstack 0
   547                           
   548                           ; 2 bytes @ 0x3D
   549  00003E                     	ds	2
   550  000040                     ?_vfpfcnvrt:
   551                           	opt callstack 0
   552  000040                     ___fldiv@sign:
   553                           	opt callstack 0
   554  000040                     vfpfcnvrt@fp:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0x3F
   558  000040                     	ds	1
   559  000041                     ___fldiv@new_exp:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x40
   563  000041                     	ds	1
   564  000042                     vfpfcnvrt@fmt:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0x41
   568  000042                     	ds	1
   569  000043                     ___fldiv@grs:
   570                           	opt callstack 0
   571                           
   572                           ; 4 bytes @ 0x42
   573  000043                     	ds	1
   574  000044                     vfpfcnvrt@ap:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x43
   578  000044                     	ds	2
   579  000046                     ??_vfpfcnvrt:
   580                           
   581                           ; 1 bytes @ 0x45
   582  000046                     	ds	1
   583  000047                     ___fldiv@bexp:
   584                           	opt callstack 0
   585                           
   586                           ; 1 bytes @ 0x46
   587  000047                     	ds	1
   588  000048                     ___fldiv@aexp:
   589                           	opt callstack 0
   590  000048                     vfpfcnvrt@ll:
   591                           	opt callstack 0
   592                           
   593                           ; 8 bytes @ 0x47
   594  000048                     	ds	8
   595  000050                     vfpfcnvrt@c:
   596                           	opt callstack 0
   597                           
   598                           ; 1 bytes @ 0x4F
   599  000050                     	ds	1
   600  000051                     ?_vfprintf:
   601                           	opt callstack 0
   602  000051                     vfprintf@fp:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x50
   606  000051                     	ds	2
   607  000053                     vfprintf@fmt:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x52
   611  000053                     	ds	2
   612  000055                     vfprintf@ap:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x54
   616  000055                     	ds	2
   617  000057                     vfprintf@cfmt:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x56
   621  000057                     	ds	2
   622  000059                     ??_main:
   623                           
   624                           ; 1 bytes @ 0x58
   625  000059                     	ds	1
   626                           
   627 ;;
   628 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   629 ;;
   630 ;; *************** function _main *****************
   631 ;; Defined at:
   632 ;;		line 16 in file "main.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;  Soil           10   28[BANK0 ] unsigned char [10]
   637 ;;  Temperature    10   18[BANK0 ] unsigned char [10]
   638 ;;  temp            4   49[BANK0 ] float 
   639 ;;  soil            4   45[BANK0 ] float 
   640 ;;  max_temperat    2   43[BANK0 ] int 
   641 ;;  humidity        2   41[BANK0 ] int 
   642 ;;  min_temperat    2   38[BANK0 ] int 
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   652 ;;      Params:         0       0       0       0       0       0       0       0       0
   653 ;;      Locals:         0      35       0       0       0       0       0       0       0
   654 ;;      Temps:          1       0       0       0       0       0       0       0       0
   655 ;;      Totals:         1      35       0       0       0       0       0       0       0
   656 ;;Total ram usage:       36 bytes
   657 ;; Hardware stack levels required when called:    8
   658 ;; This function calls:
   659 ;;		_ADC_Init
   660 ;;		_ADC_Read
   661 ;;		_LCD_Clear
   662 ;;		_LCD_Init
   663 ;;		_LCD_String_xy
   664 ;;		___fldiv
   665 ;;		___flge
   666 ;;		___flmul
   667 ;;		___fltol
   668 ;;		___xxtofl
   669 ;;		_memset
   670 ;;		_servoRotate0
   671 ;;		_servoRotate90
   672 ;;		_sprintf
   673 ;; This function is called by:
   674 ;;		Startup code after reset
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text0
   679  000816                     __ptext0:
   680                           	opt callstack 0
   681  000816                     _main:
   682                           	opt callstack 23
   683                           
   684                           ;main.c: 18:     OSCCON = 0x72;
   685                           
   686                           ;incstack = 0
   687  000816  0E72               	movlw	114
   688  000818  6ED3               	movwf	4051,c	;volatile
   689                           
   690                           ;main.c: 19:     ADC_Init();
   691  00081A  EC95  F010         	call	_ADC_Init	;wreg free
   692                           
   693                           ;main.c: 20:     LCD_Init();
   694  00081E  EC38  F010         	call	_LCD_Init	;wreg free
   695                           
   696                           ;main.c: 21:     TRISA = 0x3C;
   697  000822  0E3C               	movlw	60
   698  000824  6E92               	movwf	3986,c	;volatile
   699                           
   700                           ;main.c: 22:     TRISCbits.TRISC2 = 0;
   701  000826  9494               	bcf	3988,2,c	;volatile
   702                           
   703                           ;main.c: 23:     TRISAbits.RA2 = 0;
   704  000828  9492               	bcf	3986,2,c	;volatile
   705                           
   706                           ;main.c: 24:     TRISAbits.RA3 = 0;
   707  00082A  9692               	bcf	3986,3,c	;volatile
   708                           
   709                           ;main.c: 25:     TRISAbits.RA4 = 0;
   710  00082C  9892               	bcf	3986,4,c	;volatile
   711                           
   712                           ;main.c: 26:     TRISAbits.RA5 = 0;
   713  00082E  9A92               	bcf	3986,5,c	;volatile
   714                           
   715                           ;main.c: 29:     int humidity = 40;
   716  000830  0E00               	movlw	0
   717  000832  0100               	movlb	0	; () banked
   718  000834  6F8A               	movwf	(main@humidity+1)& (0+255),b
   719  000836  0E28               	movlw	40
   720  000838  6F89               	movwf	main@humidity& (0+255),b
   721                           
   722                           ;main.c: 30:     int max_temperature = 35;
   723  00083A  0E00               	movlw	0
   724  00083C  6F8C               	movwf	(main@max_temperature+1)& (0+255),b
   725  00083E  0E23               	movlw	35
   726  000840  6F8B               	movwf	main@max_temperature& (0+255),b
   727                           
   728                           ;main.c: 31:     int min_temperature = 25;
   729  000842  0E00               	movlw	0
   730  000844  6F87               	movwf	(main@min_temperature+1)& (0+255),b
   731  000846  0E19               	movlw	25
   732  000848  6F86               	movwf	main@min_temperature& (0+255),b
   733  00084A                     l2595:
   734                           
   735                           ;main.c: 39:         temp = (ADC_Read(0) * 4.88) / 10.00;
   736  00084A  0EF6               	movlw	246
   737  00084C  6E1B               	movwf	___flmul@a,c
   738  00084E  0E28               	movlw	40
   739  000850  6E1C               	movwf	___flmul@a+1,c
   740  000852  0E9C               	movlw	156
   741  000854  6E1D               	movwf	___flmul@a+2,c
   742  000856  0E40               	movlw	64
   743  000858  6E1E               	movwf	___flmul@a+3,c
   744  00085A  0E00               	movlw	0
   745  00085C  6E02               	movwf	ADC_Read@channel+1,c
   746  00085E  0E00               	movlw	0
   747  000860  6E01               	movwf	ADC_Read@channel,c
   748  000862  ECCA  F00E         	call	_ADC_Read	;wreg free
   749  000866  C001  F009         	movff	?_ADC_Read,___xxtofl@val
   750  00086A  C002  F00A         	movff	?_ADC_Read+1,___xxtofl@val+1
   751  00086E  0E00               	movlw	0
   752  000870  BE0A               	btfsc	___xxtofl@val+1,7,c
   753  000872  0EFF               	movlw	-1
   754  000874  6E0B               	movwf	___xxtofl@val+2,c
   755  000876  6E0C               	movwf	___xxtofl@val+3,c
   756  000878  0E01               	movlw	1
   757  00087A  EC9F  F00B         	call	___xxtofl
   758  00087E  C009  F017         	movff	?___xxtofl,___flmul@b
   759  000882  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
   760  000886  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
   761  00088A  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
   762  00088E  ECFA  F005         	call	___flmul	;wreg free
   763  000892  C017  F030         	movff	?___flmul,___fldiv@b
   764  000896  C018  F031         	movff	?___flmul+1,___fldiv@b+1
   765  00089A  C019  F032         	movff	?___flmul+2,___fldiv@b+2
   766  00089E  C01A  F033         	movff	?___flmul+3,___fldiv@b+3
   767  0008A2  0E00               	movlw	0
   768  0008A4  6E34               	movwf	___fldiv@a,c
   769  0008A6  0E00               	movlw	0
   770  0008A8  6E35               	movwf	___fldiv@a+1,c
   771  0008AA  0E20               	movlw	32
   772  0008AC  6E36               	movwf	___fldiv@a+2,c
   773  0008AE  0E41               	movlw	65
   774  0008B0  6E37               	movwf	___fldiv@a+3,c
   775  0008B2  ECA3  F007         	call	___fldiv	;wreg free
   776  0008B6  C030  F091         	movff	?___fldiv,main@temp
   777  0008BA  C031  F092         	movff	?___fldiv+1,main@temp+1
   778  0008BE  C032  F093         	movff	?___fldiv+2,main@temp+2
   779  0008C2  C033  F094         	movff	?___fldiv+3,main@temp+3
   780                           
   781                           ;main.c: 40:         soil = (ADC_Read(1) * 4.88) / 10.00;
   782  0008C6  0EF6               	movlw	246
   783  0008C8  6E1B               	movwf	___flmul@a,c
   784  0008CA  0E28               	movlw	40
   785  0008CC  6E1C               	movwf	___flmul@a+1,c
   786  0008CE  0E9C               	movlw	156
   787  0008D0  6E1D               	movwf	___flmul@a+2,c
   788  0008D2  0E40               	movlw	64
   789  0008D4  6E1E               	movwf	___flmul@a+3,c
   790  0008D6  0E00               	movlw	0
   791  0008D8  6E02               	movwf	ADC_Read@channel+1,c
   792  0008DA  0E01               	movlw	1
   793  0008DC  6E01               	movwf	ADC_Read@channel,c
   794  0008DE  ECCA  F00E         	call	_ADC_Read	;wreg free
   795  0008E2  C001  F009         	movff	?_ADC_Read,___xxtofl@val
   796  0008E6  C002  F00A         	movff	?_ADC_Read+1,___xxtofl@val+1
   797  0008EA  0E00               	movlw	0
   798  0008EC  BE0A               	btfsc	___xxtofl@val+1,7,c
   799  0008EE  0EFF               	movlw	-1
   800  0008F0  6E0B               	movwf	___xxtofl@val+2,c
   801  0008F2  6E0C               	movwf	___xxtofl@val+3,c
   802  0008F4  0E01               	movlw	1
   803  0008F6  EC9F  F00B         	call	___xxtofl
   804  0008FA  C009  F017         	movff	?___xxtofl,___flmul@b
   805  0008FE  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
   806  000902  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
   807  000906  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
   808  00090A  ECFA  F005         	call	___flmul	;wreg free
   809  00090E  C017  F030         	movff	?___flmul,___fldiv@b
   810  000912  C018  F031         	movff	?___flmul+1,___fldiv@b+1
   811  000916  C019  F032         	movff	?___flmul+2,___fldiv@b+2
   812  00091A  C01A  F033         	movff	?___flmul+3,___fldiv@b+3
   813  00091E  0E00               	movlw	0
   814  000920  6E34               	movwf	___fldiv@a,c
   815  000922  0E00               	movlw	0
   816  000924  6E35               	movwf	___fldiv@a+1,c
   817  000926  0E20               	movlw	32
   818  000928  6E36               	movwf	___fldiv@a+2,c
   819  00092A  0E41               	movlw	65
   820  00092C  6E37               	movwf	___fldiv@a+3,c
   821  00092E  ECA3  F007         	call	___fldiv	;wreg free
   822  000932  C030  F08D         	movff	?___fldiv,main@soil
   823  000936  C031  F08E         	movff	?___fldiv+1,main@soil+1
   824  00093A  C032  F08F         	movff	?___fldiv+2,main@soil+2
   825  00093E  C033  F090         	movff	?___fldiv+3,main@soil+3
   826                           
   827                           ;main.c: 43:         sprintf(Temperature, "%d%cC", (int) temp, 0xdf);
   828  000942  0E72               	movlw	low main@Temperature
   829  000944  0100               	movlb	0	; () banked
   830  000946  6F60               	movwf	sprintf@s& (0+255),b
   831  000948  0E00               	movlw	high main@Temperature
   832  00094A  6F61               	movwf	(sprintf@s+1)& (0+255),b
   833  00094C  0E01               	movlw	low STR_1
   834  00094E  6F62               	movwf	sprintf@fmt& (0+255),b
   835  000950  0E08               	movlw	high STR_1
   836  000952  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   837  000954  C091  F001         	movff	main@temp,___fltol@f1
   838  000958  C092  F002         	movff	main@temp+1,___fltol@f1+1
   839  00095C  C093  F003         	movff	main@temp+2,___fltol@f1+2
   840  000960  C094  F004         	movff	main@temp+3,___fltol@f1+3
   841  000964  ECD2  F00D         	call	___fltol	;wreg free
   842  000968  C001  F064         	movff	?___fltol,?_sprintf+4
   843  00096C  C002  F065         	movff	?___fltol+1,?_sprintf+5
   844  000970  0E00               	movlw	0
   845  000972  0100               	movlb	0	; () banked
   846  000974  6F67               	movwf	(?_sprintf+7)& (0+255),b
   847  000976  0EDF               	movlw	223
   848  000978  6F66               	movwf	(?_sprintf+6)& (0+255),b
   849  00097A  EC32  F00F         	call	_sprintf	;wreg free
   850                           
   851                           ;main.c: 44:         sprintf(Soil, "%d%%", (int) soil, 0xdf);
   852  00097E  0E7C               	movlw	low main@Soil
   853  000980  0100               	movlb	0	; () banked
   854  000982  6F60               	movwf	sprintf@s& (0+255),b
   855  000984  0E00               	movlw	high main@Soil
   856  000986  6F61               	movwf	(sprintf@s+1)& (0+255),b
   857  000988  0E07               	movlw	low STR_2
   858  00098A  6F62               	movwf	sprintf@fmt& (0+255),b
   859  00098C  0E08               	movlw	high STR_2
   860  00098E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   861  000990  C08D  F001         	movff	main@soil,___fltol@f1
   862  000994  C08E  F002         	movff	main@soil+1,___fltol@f1+1
   863  000998  C08F  F003         	movff	main@soil+2,___fltol@f1+2
   864  00099C  C090  F004         	movff	main@soil+3,___fltol@f1+3
   865  0009A0  ECD2  F00D         	call	___fltol	;wreg free
   866  0009A4  C001  F064         	movff	?___fltol,?_sprintf+4
   867  0009A8  C002  F065         	movff	?___fltol+1,?_sprintf+5
   868  0009AC  0E00               	movlw	0
   869  0009AE  0100               	movlb	0	; () banked
   870  0009B0  6F67               	movwf	(?_sprintf+7)& (0+255),b
   871  0009B2  0EDF               	movlw	223
   872  0009B4  6F66               	movwf	(?_sprintf+6)& (0+255),b
   873  0009B6  EC32  F00F         	call	_sprintf	;wreg free
   874                           
   875                           ;main.c: 47:         LCD_Clear();
   876  0009BA  EC9F  F010         	call	_LCD_Clear	;wreg free
   877                           
   878                           ;main.c: 48:         LCD_String_xy(1, 0, "T: ");
   879  0009BE  0E00               	movlw	0
   880  0009C0  6E05               	movwf	LCD_String_xy@pos,c
   881  0009C2  0E10               	movlw	low STR_3
   882  0009C4  6E06               	movwf	LCD_String_xy@msg,c
   883  0009C6  0E08               	movlw	high STR_3
   884  0009C8  6E07               	movwf	LCD_String_xy@msg+1,c
   885  0009CA  0E01               	movlw	1
   886  0009CC  EC05  F010         	call	_LCD_String_xy
   887                           
   888                           ;main.c: 49:         LCD_String_xy(1, 4, Temperature);
   889  0009D0  0E04               	movlw	4
   890  0009D2  6E05               	movwf	LCD_String_xy@pos,c
   891  0009D4  0E72               	movlw	low main@Temperature
   892  0009D6  6E06               	movwf	LCD_String_xy@msg,c
   893  0009D8  0E00               	movlw	high main@Temperature
   894  0009DA  6E07               	movwf	LCD_String_xy@msg+1,c
   895  0009DC  0E01               	movlw	1
   896  0009DE  EC05  F010         	call	_LCD_String_xy
   897                           
   898                           ;main.c: 50:         LCD_String_xy(2, 0, "H: ");
   899  0009E2  0E00               	movlw	0
   900  0009E4  6E05               	movwf	LCD_String_xy@pos,c
   901  0009E6  0E0C               	movlw	low STR_4
   902  0009E8  6E06               	movwf	LCD_String_xy@msg,c
   903  0009EA  0E08               	movlw	high STR_4
   904  0009EC  6E07               	movwf	LCD_String_xy@msg+1,c
   905  0009EE  0E02               	movlw	2
   906  0009F0  EC05  F010         	call	_LCD_String_xy
   907                           
   908                           ;main.c: 51:         LCD_String_xy(2, 4, Soil);
   909  0009F4  0E04               	movlw	4
   910  0009F6  6E05               	movwf	LCD_String_xy@pos,c
   911  0009F8  0E7C               	movlw	low main@Soil
   912  0009FA  6E06               	movwf	LCD_String_xy@msg,c
   913  0009FC  0E00               	movlw	high main@Soil
   914  0009FE  6E07               	movwf	LCD_String_xy@msg+1,c
   915  000A00  0E02               	movlw	2
   916  000A02  EC05  F010         	call	_LCD_String_xy
   917                           
   918                           ;main.c: 54:         memset(Temperature, 0, 10);
   919  000A06  0E72               	movlw	low main@Temperature
   920  000A08  6E01               	movwf	memset@dest,c
   921  000A0A  0E00               	movlw	high main@Temperature
   922  000A0C  6E02               	movwf	memset@dest+1,c
   923  000A0E  0E00               	movlw	0
   924  000A10  6E04               	movwf	memset@c+1,c
   925  000A12  0E00               	movlw	0
   926  000A14  6E03               	movwf	memset@c,c
   927  000A16  0E00               	movlw	0
   928  000A18  6E06               	movwf	memset@n+1,c
   929  000A1A  0E0A               	movlw	10
   930  000A1C  6E05               	movwf	memset@n,c
   931  000A1E  EC3F  F00C         	call	_memset	;wreg free
   932                           
   933                           ;main.c: 55:         memset(Soil, 0, 10);
   934  000A22  0E7C               	movlw	low main@Soil
   935  000A24  6E01               	movwf	memset@dest,c
   936  000A26  0E00               	movlw	high main@Soil
   937  000A28  6E02               	movwf	memset@dest+1,c
   938  000A2A  0E00               	movlw	0
   939  000A2C  6E04               	movwf	memset@c+1,c
   940  000A2E  0E00               	movlw	0
   941  000A30  6E03               	movwf	memset@c,c
   942  000A32  0E00               	movlw	0
   943  000A34  6E06               	movwf	memset@n+1,c
   944  000A36  0E0A               	movlw	10
   945  000A38  6E05               	movwf	memset@n,c
   946  000A3A  EC3F  F00C         	call	_memset	;wreg free
   947                           
   948                           ;main.c: 58:         LATAbits.LATA4 = soil < humidity ? 1 : 0;
   949  000A3E  C08D  F017         	movff	main@soil,___flge@ff1
   950  000A42  C08E  F018         	movff	main@soil+1,___flge@ff1+1
   951  000A46  C08F  F019         	movff	main@soil+2,___flge@ff1+2
   952  000A4A  C090  F01A         	movff	main@soil+3,___flge@ff1+3
   953  000A4E  C089  F009         	movff	main@humidity,___xxtofl@val
   954  000A52  C08A  F00A         	movff	main@humidity+1,___xxtofl@val+1
   955  000A56  0E00               	movlw	0
   956  000A58  BE0A               	btfsc	___xxtofl@val+1,7,c
   957  000A5A  0EFF               	movlw	-1
   958  000A5C  6E0B               	movwf	___xxtofl@val+2,c
   959  000A5E  6E0C               	movwf	___xxtofl@val+3,c
   960  000A60  0E01               	movlw	1
   961  000A62  EC9F  F00B         	call	___xxtofl
   962  000A66  C009  F01B         	movff	?___xxtofl,___flge@ff2
   963  000A6A  C00A  F01C         	movff	?___xxtofl+1,___flge@ff2+1
   964  000A6E  C00B  F01D         	movff	?___xxtofl+2,___flge@ff2+2
   965  000A72  C00C  F01E         	movff	?___xxtofl+3,___flge@ff2+3
   966  000A76  EC6A  F00D         	call	___flge	;wreg free
   967  000A7A  B0D8               	btfsc	status,0,c
   968  000A7C  D003               	goto	u2660
   969  000A7E  6A59               	clrf	??_main& (0+255),c
   970  000A80  2A59               	incf	??_main& (0+255),f,c
   971  000A82  D001               	goto	u2678
   972  000A84                     u2660:
   973  000A84  6A59               	clrf	??_main& (0+255),c
   974  000A86                     u2678:
   975  000A86  3A59               	swapf	??_main,f,c
   976  000A88  5089               	movf	3977,w,c	;volatile
   977  000A8A  1859               	xorwf	??_main,w,c
   978  000A8C  0BEF               	andlw	-17
   979  000A8E  1859               	xorwf	??_main,w,c
   980  000A90  6E89               	movwf	3977,c	;volatile
   981                           
   982                           ;main.c: 60:         LATAbits.LATA2 = temp < 25 ? 1 : 0;
   983  000A92  C091  F017         	movff	main@temp,___flge@ff1
   984  000A96  C092  F018         	movff	main@temp+1,___flge@ff1+1
   985  000A9A  C093  F019         	movff	main@temp+2,___flge@ff1+2
   986  000A9E  C094  F01A         	movff	main@temp+3,___flge@ff1+3
   987  000AA2  0E00               	movlw	0
   988  000AA4  6E1B               	movwf	___flge@ff2,c
   989  000AA6  0E00               	movlw	0
   990  000AA8  6E1C               	movwf	___flge@ff2+1,c
   991  000AAA  0EC8               	movlw	200
   992  000AAC  6E1D               	movwf	___flge@ff2+2,c
   993  000AAE  0E41               	movlw	65
   994  000AB0  6E1E               	movwf	___flge@ff2+3,c
   995  000AB2  EC6A  F00D         	call	___flge	;wreg free
   996  000AB6  B0D8               	btfsc	status,0,c
   997  000AB8  D003               	goto	u2680
   998  000ABA  6A59               	clrf	??_main& (0+255),c
   999  000ABC  2A59               	incf	??_main& (0+255),f,c
  1000  000ABE  D001               	goto	u2698
  1001  000AC0                     u2680:
  1002  000AC0  6A59               	clrf	??_main& (0+255),c
  1003  000AC2                     u2698:
  1004  000AC2  4659               	rlncf	??_main,f,c
  1005  000AC4  4659               	rlncf	??_main,f,c
  1006  000AC6  5089               	movf	3977,w,c	;volatile
  1007  000AC8  1859               	xorwf	??_main,w,c
  1008  000ACA  0BFB               	andlw	-5
  1009  000ACC  1859               	xorwf	??_main,w,c
  1010  000ACE  6E89               	movwf	3977,c	;volatile
  1011                           
  1012                           ;main.c: 62:         temp < max_temperature ? servoRotate0() : servoRotate90();
  1013  000AD0  C091  F017         	movff	main@temp,___flge@ff1
  1014  000AD4  C092  F018         	movff	main@temp+1,___flge@ff1+1
  1015  000AD8  C093  F019         	movff	main@temp+2,___flge@ff1+2
  1016  000ADC  C094  F01A         	movff	main@temp+3,___flge@ff1+3
  1017  000AE0  C08B  F009         	movff	main@max_temperature,___xxtofl@val
  1018  000AE4  C08C  F00A         	movff	main@max_temperature+1,___xxtofl@val+1
  1019  000AE8  0E00               	movlw	0
  1020  000AEA  BE0A               	btfsc	___xxtofl@val+1,7,c
  1021  000AEC  0EFF               	movlw	-1
  1022  000AEE  6E0B               	movwf	___xxtofl@val+2,c
  1023  000AF0  6E0C               	movwf	___xxtofl@val+3,c
  1024  000AF2  0E01               	movlw	1
  1025  000AF4  EC9F  F00B         	call	___xxtofl
  1026  000AF8  C009  F01B         	movff	?___xxtofl,___flge@ff2
  1027  000AFC  C00A  F01C         	movff	?___xxtofl+1,___flge@ff2+1
  1028  000B00  C00B  F01D         	movff	?___xxtofl+2,___flge@ff2+2
  1029  000B04  C00C  F01E         	movff	?___xxtofl+3,___flge@ff2+3
  1030  000B08  EC6A  F00D         	call	___flge	;wreg free
  1031  000B0C  B0D8               	btfsc	status,0,c
  1032  000B0E  D003               	goto	l2625
  1033  000B10  ECCA  F00F         	call	_servoRotate0	;wreg free
  1034  000B14  D002               	goto	l2627
  1035  000B16                     l2625:
  1036  000B16  ECAB  F00F         	call	_servoRotate90	;wreg free
  1037  000B1A                     l2627:
  1038                           
  1039                           ;main.c: 64:         LATAbits.LATA5 = temp > min_temperature && temp < max_temperature &
      +                          & soil > humidity ? 1 : 0;
  1040  000B1A  0E00               	movlw	0
  1041  000B1C  0100               	movlb	0	; () banked
  1042  000B1E  6F88               	movwf	_main$211& (0+255),b
  1043                           
  1044                           ; BSR set to: 0
  1045  000B20  C086  F009         	movff	main@min_temperature,___xxtofl@val
  1046  000B24  C087  F00A         	movff	main@min_temperature+1,___xxtofl@val+1
  1047  000B28  0E00               	movlw	0
  1048  000B2A  BE0A               	btfsc	___xxtofl@val+1,7,c
  1049  000B2C  0EFF               	movlw	-1
  1050  000B2E  6E0B               	movwf	___xxtofl@val+2,c
  1051  000B30  6E0C               	movwf	___xxtofl@val+3,c
  1052  000B32  0E01               	movlw	1
  1053  000B34  EC9F  F00B         	call	___xxtofl
  1054  000B38  C009  F017         	movff	?___xxtofl,___flge@ff1
  1055  000B3C  C00A  F018         	movff	?___xxtofl+1,___flge@ff1+1
  1056  000B40  C00B  F019         	movff	?___xxtofl+2,___flge@ff1+2
  1057  000B44  C00C  F01A         	movff	?___xxtofl+3,___flge@ff1+3
  1058  000B48  C091  F01B         	movff	main@temp,___flge@ff2
  1059  000B4C  C092  F01C         	movff	main@temp+1,___flge@ff2+1
  1060  000B50  C093  F01D         	movff	main@temp+2,___flge@ff2+2
  1061  000B54  C094  F01E         	movff	main@temp+3,___flge@ff2+3
  1062  000B58  EC6A  F00D         	call	___flge	;wreg free
  1063  000B5C  B0D8               	btfsc	status,0,c
  1064  000B5E  D043               	goto	l2637
  1065  000B60  C091  F017         	movff	main@temp,___flge@ff1
  1066  000B64  C092  F018         	movff	main@temp+1,___flge@ff1+1
  1067  000B68  C093  F019         	movff	main@temp+2,___flge@ff1+2
  1068  000B6C  C094  F01A         	movff	main@temp+3,___flge@ff1+3
  1069  000B70  C08B  F009         	movff	main@max_temperature,___xxtofl@val
  1070  000B74  C08C  F00A         	movff	main@max_temperature+1,___xxtofl@val+1
  1071  000B78  0E00               	movlw	0
  1072  000B7A  BE0A               	btfsc	___xxtofl@val+1,7,c
  1073  000B7C  0EFF               	movlw	-1
  1074  000B7E  6E0B               	movwf	___xxtofl@val+2,c
  1075  000B80  6E0C               	movwf	___xxtofl@val+3,c
  1076  000B82  0E01               	movlw	1
  1077  000B84  EC9F  F00B         	call	___xxtofl
  1078  000B88  C009  F01B         	movff	?___xxtofl,___flge@ff2
  1079  000B8C  C00A  F01C         	movff	?___xxtofl+1,___flge@ff2+1
  1080  000B90  C00B  F01D         	movff	?___xxtofl+2,___flge@ff2+2
  1081  000B94  C00C  F01E         	movff	?___xxtofl+3,___flge@ff2+3
  1082  000B98  EC6A  F00D         	call	___flge	;wreg free
  1083  000B9C  B0D8               	btfsc	status,0,c
  1084  000B9E  D023               	goto	l2637
  1085  000BA0  C089  F009         	movff	main@humidity,___xxtofl@val
  1086  000BA4  C08A  F00A         	movff	main@humidity+1,___xxtofl@val+1
  1087  000BA8  0E00               	movlw	0
  1088  000BAA  BE0A               	btfsc	___xxtofl@val+1,7,c
  1089  000BAC  0EFF               	movlw	-1
  1090  000BAE  6E0B               	movwf	___xxtofl@val+2,c
  1091  000BB0  6E0C               	movwf	___xxtofl@val+3,c
  1092  000BB2  0E01               	movlw	1
  1093  000BB4  EC9F  F00B         	call	___xxtofl
  1094  000BB8  C009  F017         	movff	?___xxtofl,___flge@ff1
  1095  000BBC  C00A  F018         	movff	?___xxtofl+1,___flge@ff1+1
  1096  000BC0  C00B  F019         	movff	?___xxtofl+2,___flge@ff1+2
  1097  000BC4  C00C  F01A         	movff	?___xxtofl+3,___flge@ff1+3
  1098  000BC8  C08D  F01B         	movff	main@soil,___flge@ff2
  1099  000BCC  C08E  F01C         	movff	main@soil+1,___flge@ff2+1
  1100  000BD0  C08F  F01D         	movff	main@soil+2,___flge@ff2+2
  1101  000BD4  C090  F01E         	movff	main@soil+3,___flge@ff2+3
  1102  000BD8  EC6A  F00D         	call	___flge	;wreg free
  1103  000BDC  B0D8               	btfsc	status,0,c
  1104  000BDE  D003               	goto	l2637
  1105  000BE0  0E01               	movlw	1
  1106  000BE2  0100               	movlb	0	; () banked
  1107  000BE4  6F88               	movwf	_main$211& (0+255),b
  1108  000BE6                     l2637:
  1109  000BE6  0100               	movlb	0	; () banked
  1110  000BE8  B188               	btfsc	_main$211& (0+255),0,b
  1111  000BEA  D002               	bra	u2745
  1112  000BEC  9A89               	bcf	3977,5,c	;volatile
  1113  000BEE  D001               	bra	u2746
  1114  000BF0                     u2745:
  1115  000BF0  8A89               	bsf	3977,5,c	;volatile
  1116  000BF2                     u2746:
  1117  000BF2  D62B               	goto	l2595
  1118  000BF4                     __end_of_main:
  1119                           	opt callstack 0
  1120                           
  1121 ;; *************** function _sprintf *****************
  1122 ;; Defined at:
  1123 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1126 ;;		 -> main@Soil(10), main@Temperature(10), 
  1127 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1128 ;;		 -> STR_2(5), STR_1(6), 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  f               6   12[BANK0 ] struct _IO_FILE
  1131 ;;  ap              2   10[BANK0 ] PTR void [1]
  1132 ;;		 -> ?_sprintf(2), 
  1133 ;;  ret             2    0        int 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  2    0[BANK0 ] int 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1143 ;;      Params:         0       8       0       0       0       0       0       0       0
  1144 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1146 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1147 ;;Total ram usage:       18 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    7
  1150 ;; This function calls:
  1151 ;;		_vfprintf
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text1
  1158  001E64                     __ptext1:
  1159                           	opt callstack 0
  1160  001E64                     _sprintf:
  1161                           	opt callstack 23
  1162                           
  1163                           ;incstack = 0
  1164  001E64  0E64               	movlw	low (?_sprintf+4)
  1165  001E66  0100               	movlb	0	; () banked
  1166  001E68  6F6A               	movwf	sprintf@ap& (0+255),b
  1167  001E6A  0E00               	movlw	high (?_sprintf+4)
  1168  001E6C  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1169  001E6E  C060  F06C         	movff	sprintf@s,sprintf@f
  1170  001E72  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
  1171                           
  1172                           ; BSR set to: 0
  1173  001E76  0E00               	movlw	0
  1174  001E78  6F6F               	movwf	(sprintf@f+3)& (0+255),b
  1175  001E7A  0E00               	movlw	0
  1176  001E7C  6F6E               	movwf	(sprintf@f+2)& (0+255),b
  1177                           
  1178                           ; BSR set to: 0
  1179  001E7E  0E00               	movlw	0
  1180  001E80  6F71               	movwf	(sprintf@f+5)& (0+255),b
  1181  001E82  0E00               	movlw	0
  1182  001E84  6F70               	movwf	(sprintf@f+4)& (0+255),b
  1183                           
  1184                           ; BSR set to: 0
  1185  001E86  0E6C               	movlw	low sprintf@f
  1186  001E88  6E51               	movwf	vfprintf@fp,c
  1187  001E8A  0E00               	movlw	high sprintf@f
  1188  001E8C  6E52               	movwf	vfprintf@fp+1,c
  1189  001E8E  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1190  001E92  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1191  001E96  0E6A               	movlw	low sprintf@ap
  1192  001E98  6E55               	movwf	vfprintf@ap,c
  1193  001E9A  0E00               	movlw	high sprintf@ap
  1194  001E9C  6E56               	movwf	vfprintf@ap+1,c
  1195  001E9E  EC07  F00F         	call	_vfprintf	;wreg free
  1196  001EA2  0100               	movlb	0	; () banked
  1197  001EA4  516E               	movf	(sprintf@f+2)& (0+255),w,b
  1198  001EA6  2560               	addwf	sprintf@s& (0+255),w,b
  1199  001EA8  6ED9               	movwf	fsr2l,c
  1200  001EAA  516F               	movf	(sprintf@f+3)& (0+255),w,b
  1201  001EAC  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1202  001EAE  6EDA               	movwf	fsr2h,c
  1203  001EB0  0E00               	movlw	0
  1204  001EB2  6EDF               	movwf	indf2,c
  1205                           
  1206                           ; BSR set to: 0
  1207  001EB4  0012               	return		;funcret
  1208  001EB6                     __end_of_sprintf:
  1209                           	opt callstack 0
  1210                           
  1211 ;; *************** function _vfprintf *****************
  1212 ;; Defined at:
  1213 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1216 ;;		 -> sprintf@f(6), 
  1217 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1218 ;;		 -> STR_2(5), STR_1(6), 
  1219 ;;  ap              2   84[COMRAM] PTR PTR void 
  1220 ;;		 -> sprintf@ap(2), 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1223 ;;		 -> STR_2(5), STR_1(6), 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  2   80[COMRAM] int 
  1226 ;; Registers used:
  1227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1233 ;;      Params:         6       0       0       0       0       0       0       0       0
  1234 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1236 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1237 ;;Total ram usage:        8 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    6
  1240 ;; This function calls:
  1241 ;;		_vfpfcnvrt
  1242 ;; This function is called by:
  1243 ;;		_sprintf
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text2
  1248  001E0E                     __ptext2:
  1249                           	opt callstack 0
  1250  001E0E                     _vfprintf:
  1251                           	opt callstack 23
  1252                           
  1253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;incstack = 0
  1257  001E0E  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1258  001E12  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1259                           
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1261  001E16  0E00               	movlw	0
  1262  001E18  0100               	movlb	0	; () banked
  1263  001E1A  6F96               	movwf	(_nout+1)& (0+255),b
  1264  001E1C  0E00               	movlw	0
  1265  001E1E  6F95               	movwf	_nout& (0+255),b
  1266                           
  1267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1268  001E20  D013               	goto	l2087
  1269  001E22                     l2085:
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1273  001E22  C051  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1274  001E26  C052  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1275  001E2A  0E57               	movlw	low vfprintf@cfmt
  1276  001E2C  6E42               	movwf	vfpfcnvrt@fmt,c
  1277  001E2E  0E00               	movlw	high vfprintf@cfmt
  1278  001E30  6E43               	movwf	vfpfcnvrt@fmt+1,c
  1279  001E32  C055  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1280  001E36  C056  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1281  001E3A  EC08  F00A         	call	_vfpfcnvrt	;wreg free
  1282  001E3E  5040               	movf	?_vfpfcnvrt,w,c
  1283  001E40  0100               	movlb	0	; () banked
  1284  001E42  2795               	addwf	_nout& (0+255),f,b
  1285  001E44  5041               	movf	?_vfpfcnvrt+1,w,c
  1286  001E46  2396               	addwfc	(_nout+1)& (0+255),f,b
  1287  001E48                     l2087:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1291  001E48  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1292  001E4C  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1293  001E50                     	if	0	;tblptru may be non-zero
  1294  001E50                     	endif
  1295  001E50                     	if	0	;tblptru may be non-zero
  1296  001E50                     	endif
  1297  001E50  0008               	tblrd		*
  1298  001E52  50F5               	movf	tablat,w,c
  1299  001E54  0900               	iorlw	0
  1300  001E56  A4D8               	btfss	status,2,c
  1301  001E58  D7E4               	goto	l2085
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1305  001E5A  C095  F051         	movff	_nout,?_vfprintf
  1306  001E5E  C096  F052         	movff	_nout+1,?_vfprintf+1
  1307                           
  1308                           ; BSR set to: 0
  1309  001E62  0012               	return		;funcret
  1310  001E64                     __end_of_vfprintf:
  1311                           	opt callstack 0
  1312                           
  1313 ;; *************** function _vfpfcnvrt *****************
  1314 ;; Defined at:
  1315 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1318 ;;		 -> sprintf@f(6), 
  1319 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1320 ;;		 -> vfprintf@cfmt(2), 
  1321 ;;  ap              2   67[COMRAM] PTR PTR void 
  1322 ;;		 -> sprintf@ap(2), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  ll              8   71[COMRAM] long long 
  1325 ;;  llu             8    0        unsigned long long 
  1326 ;;  f               4    0        unsigned long long 
  1327 ;;  vp              3    0        PTR void 
  1328 ;;  ct              3    0        unsigned char [3]
  1329 ;;  cp              3    0        PTR unsigned char 
  1330 ;;  i               2    0        int 
  1331 ;;  done            2    0        int 
  1332 ;;  c               1   79[COMRAM] unsigned char 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  2   63[COMRAM] int 
  1335 ;; Registers used:
  1336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1342 ;;      Params:         6       0       0       0       0       0       0       0       0
  1343 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1344 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1345 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1346 ;;Total ram usage:       17 bytes
  1347 ;; Hardware stack levels used:    1
  1348 ;; Hardware stack levels required when called:    5
  1349 ;; This function calls:
  1350 ;;		_ctoa
  1351 ;;		_dtoa
  1352 ;;		_fputc
  1353 ;; This function is called by:
  1354 ;;		_vfprintf
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text3
  1359  001410                     __ptext3:
  1360                           	opt callstack 0
  1361  001410                     _vfpfcnvrt:
  1362                           	opt callstack 23
  1363                           
  1364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;incstack = 0
  1368  001410  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1369  001414  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1370  001418  CFDE FFF6          	movff	postinc2,tblptrl
  1371  00141C  CFDD FFF7          	movff	postdec2,tblptrh
  1372  001420                     	if	0	;tblptru may be non-zero
  1373  001420                     	endif
  1374  001420                     	if	0	;tblptru may be non-zero
  1375  001420                     	endif
  1376  001420  0008               	tblrd		*
  1377  001422  50F5               	movf	tablat,w,c
  1378  001424  0A25               	xorlw	37
  1379  001426  A4D8               	btfss	status,2,c
  1380  001428  D0CC               	goto	l2053
  1381                           
  1382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1383  00142A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1384  00142E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1385  001432  2ADE               	incf	postinc2,f,c
  1386  001434  0E00               	movlw	0
  1387  001436  22DD               	addwfc	postdec2,f,c
  1388                           
  1389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1390  001438  0E00               	movlw	0
  1391  00143A  6E5B               	movwf	_width+1,c
  1392  00143C  0E00               	movlw	0
  1393  00143E  6E5A               	movwf	_width,c
  1394  001440  C05A  F05E         	movff	_width,_flags
  1395  001444  C05B  F05F         	movff	_width+1,_flags+1
  1396                           
  1397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1398  001448  685C               	setf	_prec,c
  1399  00144A  685D               	setf	_prec+1,c
  1400                           
  1401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  1402  00144C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1403  001450  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1404  001454  CFDE FFF6          	movff	postinc2,tblptrl
  1405  001458  CFDD FFF7          	movff	postdec2,tblptrh
  1406  00145C                     	if	0	;tblptru may be non-zero
  1407  00145C                     	endif
  1408  00145C                     	if	0	;tblptru may be non-zero
  1409  00145C                     	endif
  1410  00145C  0008               	tblrd		*
  1411  00145E  50F5               	movf	tablat,w,c
  1412  001460  0A63               	xorlw	99
  1413  001462  A4D8               	btfss	status,2,c
  1414  001464  D026               	goto	l2027
  1415                           
  1416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  1417  001466  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1418  00146A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1419  00146E  2ADE               	incf	postinc2,f,c
  1420  001470  0E00               	movlw	0
  1421  001472  22DD               	addwfc	postdec2,f,c
  1422                           
  1423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1424  001474  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1425  001478  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1426  00147C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1427  001480  0E02               	movlw	2
  1428  001482  26DE               	addwf	postinc2,f,c
  1429  001484  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1430  001488  0E00               	movlw	0
  1431  00148A  22DD               	addwfc	postdec2,f,c
  1432  00148C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1433  001490  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1434  001494  50DF               	movf	indf2,w,c
  1435  001496  6E50               	movwf	vfpfcnvrt@c,c
  1436                           
  1437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  1438  001498  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  1439  00149C  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1440  0014A0  C050  F01E         	movff	vfpfcnvrt@c,ctoa@c
  1441  0014A4  EC84  F00F         	call	_ctoa	;wreg free
  1442  0014A8  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  1443  0014AC  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1444  0014B0  0012               	return	
  1445  0014B2                     l2027:
  1446                           
  1447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1448  0014B2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1449  0014B6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1450  0014BA  CFDE FFF6          	movff	postinc2,tblptrl
  1451  0014BE  CFDD FFF7          	movff	postdec2,tblptrh
  1452  0014C2                     	if	0	;tblptru may be non-zero
  1453  0014C2                     	endif
  1454  0014C2                     	if	0	;tblptru may be non-zero
  1455  0014C2                     	endif
  1456  0014C2  0008               	tblrd		*
  1457  0014C4  50F5               	movf	tablat,w,c
  1458  0014C6  0A64               	xorlw	100
  1459  0014C8  B4D8               	btfsc	status,2,c
  1460  0014CA  D00D               	goto	u1810
  1461  0014CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1462  0014D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1463  0014D4  CFDE FFF6          	movff	postinc2,tblptrl
  1464  0014D8  CFDD FFF7          	movff	postdec2,tblptrh
  1465  0014DC                     	if	0	;tblptru may be non-zero
  1466  0014DC                     	endif
  1467  0014DC                     	if	0	;tblptru may be non-zero
  1468  0014DC                     	endif
  1469  0014DC  0008               	tblrd		*
  1470  0014DE  50F5               	movf	tablat,w,c
  1471  0014E0  0A69               	xorlw	105
  1472  0014E2  A4D8               	btfss	status,2,c
  1473  0014E4  D03F               	goto	l2037
  1474  0014E6                     u1810:
  1475                           
  1476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1477  0014E6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1478  0014EA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1479  0014EE  2ADE               	incf	postinc2,f,c
  1480  0014F0  0E00               	movlw	0
  1481  0014F2  22DD               	addwfc	postdec2,f,c
  1482                           
  1483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1484  0014F4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1485  0014F8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1486  0014FC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1487  001500  0E02               	movlw	2
  1488  001502  26DE               	addwf	postinc2,f,c
  1489  001504  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1490  001508  0E00               	movlw	0
  1491  00150A  22DD               	addwfc	postdec2,f,c
  1492  00150C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1493  001510  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1494  001514  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1495  001518  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1496  00151C  0E00               	movlw	0
  1497  00151E  BE49               	btfsc	vfpfcnvrt@ll+1,7,c
  1498  001520  0EFF               	movlw	-1
  1499  001522  6E4A               	movwf	vfpfcnvrt@ll+2,c
  1500  001524  6E4B               	movwf	vfpfcnvrt@ll+3,c
  1501  001526  6E4C               	movwf	vfpfcnvrt@ll+4,c
  1502  001528  6E4D               	movwf	vfpfcnvrt@ll+5,c
  1503  00152A  6E4E               	movwf	vfpfcnvrt@ll+6,c
  1504  00152C  6E4F               	movwf	vfpfcnvrt@ll+7,c
  1505                           
  1506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1507  00152E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1508  001532  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1509  001536  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1510  00153A  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1511  00153E  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1512  001542  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1513  001546  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1514  00154A  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1515  00154E  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1516  001552  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1517  001556  ECE7  F008         	call	_dtoa	;wreg free
  1518  00155A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1519  00155E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1520  001562  0012               	return	
  1521  001564                     l2037:
  1522                           
  1523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1524  001564  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1525  001568  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1526  00156C  CFDE FFF6          	movff	postinc2,tblptrl
  1527  001570  CFDD FFF7          	movff	postdec2,tblptrh
  1528  001574                     	if	0	;tblptru may be non-zero
  1529  001574                     	endif
  1530  001574                     	if	0	;tblptru may be non-zero
  1531  001574                     	endif
  1532  001574  0008               	tblrd		*
  1533  001576  50F5               	movf	tablat,w,c
  1534  001578  0A25               	xorlw	37
  1535  00157A  A4D8               	btfss	status,2,c
  1536  00157C  D016               	goto	l2047
  1537                           
  1538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1539  00157E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1540  001582  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1541  001586  2ADE               	incf	postinc2,f,c
  1542  001588  0E00               	movlw	0
  1543  00158A  22DD               	addwfc	postdec2,f,c
  1544                           
  1545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1546  00158C  0E00               	movlw	0
  1547  00158E  6E02               	movwf	fputc@c+1,c
  1548  001590  0E25               	movlw	37
  1549  001592  6E01               	movwf	fputc@c,c
  1550  001594  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1551  001598  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1552  00159C  EC2F  F00E         	call	_fputc	;wreg free
  1553  0015A0                     l2043:
  1554                           
  1555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1556  0015A0  0E00               	movlw	0
  1557  0015A2  6E41               	movwf	?_vfpfcnvrt+1,c
  1558  0015A4  0E01               	movlw	1
  1559  0015A6  6E40               	movwf	?_vfpfcnvrt,c
  1560  0015A8  0012               	return	
  1561  0015AA                     l2047:
  1562                           
  1563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1564  0015AA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1565  0015AE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1566  0015B2  2ADE               	incf	postinc2,f,c
  1567  0015B4  0E00               	movlw	0
  1568  0015B6  22DD               	addwfc	postdec2,f,c
  1569                           
  1570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1571  0015B8  0E00               	movlw	0
  1572  0015BA  6E41               	movwf	?_vfpfcnvrt+1,c
  1573  0015BC  0E00               	movlw	0
  1574  0015BE  6E40               	movwf	?_vfpfcnvrt,c
  1575  0015C0  0012               	return	
  1576  0015C2                     l2053:
  1577                           
  1578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1579  0015C2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1580  0015C6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1581  0015CA  CFDE FFF6          	movff	postinc2,tblptrl
  1582  0015CE  CFDD FFF7          	movff	postdec2,tblptrh
  1583  0015D2                     	if	0	;tblptru may be non-zero
  1584  0015D2                     	endif
  1585  0015D2                     	if	0	;tblptru may be non-zero
  1586  0015D2                     	endif
  1587  0015D2  0008               	tblrd		*
  1588  0015D4  50F5               	movf	tablat,w,c
  1589  0015D6  6E01               	movwf	fputc@c,c
  1590  0015D8  6A02               	clrf	fputc@c+1,c
  1591  0015DA  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1592  0015DE  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1593  0015E2  EC2F  F00E         	call	_fputc	;wreg free
  1594                           
  1595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1596  0015E6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1597  0015EA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1598  0015EE  2ADE               	incf	postinc2,f,c
  1599  0015F0  0E00               	movlw	0
  1600  0015F2  22DD               	addwfc	postdec2,f,c
  1601  0015F4  D7D5               	goto	l2043
  1602  0015F6                     __end_of_vfpfcnvrt:
  1603                           	opt callstack 0
  1604                           
  1605 ;; *************** function _dtoa *****************
  1606 ;; Defined at:
  1607 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1610 ;;		 -> sprintf@f(6), 
  1611 ;;  d               8   29[COMRAM] long long 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  n               8   53[COMRAM] long long 
  1614 ;;  i               2   61[COMRAM] int 
  1615 ;;  s               2   51[COMRAM] int 
  1616 ;;  w               2   49[COMRAM] int 
  1617 ;;  p               2   47[COMRAM] int 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  2   27[COMRAM] int 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1627 ;;      Params:        10       0       0       0       0       0       0       0       0
  1628 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1629 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1630 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1631 ;;Total ram usage:       36 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    4
  1634 ;; This function calls:
  1635 ;;		___aodiv
  1636 ;;		___aomod
  1637 ;;		_abs
  1638 ;;		_pad
  1639 ;; This function is called by:
  1640 ;;		_vfpfcnvrt
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text4
  1645  0011CE                     __ptext4:
  1646                           	opt callstack 0
  1647  0011CE                     _dtoa:
  1648                           	opt callstack 23
  1649                           
  1650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1651                           
  1652                           ;incstack = 0
  1653  0011CE  C01E  F036         	movff	dtoa@d,dtoa@n
  1654  0011D2  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1655  0011D6  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1656  0011DA  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1657  0011DE  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1658  0011E2  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1659  0011E6  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1660  0011EA  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1661                           
  1662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1663  0011EE  AE3D               	btfss	dtoa@n+7,7,c
  1664  0011F0  D002               	goto	u1630
  1665  0011F2  0E01               	movlw	1
  1666  0011F4  D001               	goto	u1640
  1667  0011F6                     u1630:
  1668  0011F6  0E00               	movlw	0
  1669  0011F8                     u1640:
  1670  0011F8  6E34               	movwf	dtoa@s,c
  1671  0011FA  6A35               	clrf	dtoa@s+1,c
  1672                           
  1673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1674  0011FC  5034               	movf	dtoa@s,w,c
  1675  0011FE  1035               	iorwf	dtoa@s+1,w,c
  1676  001200  B4D8               	btfsc	status,2,c
  1677  001202  D010               	goto	l1943
  1678                           
  1679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1680  001204  1E3D               	comf	dtoa@n+7,f,c
  1681  001206  1E3C               	comf	dtoa@n+6,f,c
  1682  001208  1E3B               	comf	dtoa@n+5,f,c
  1683  00120A  1E3A               	comf	dtoa@n+4,f,c
  1684  00120C  1E39               	comf	dtoa@n+3,f,c
  1685  00120E  1E38               	comf	dtoa@n+2,f,c
  1686  001210  1E37               	comf	dtoa@n+1,f,c
  1687  001212  6C36               	negf	dtoa@n,c
  1688  001214  0E00               	movlw	0
  1689  001216  2237               	addwfc	dtoa@n+1,f,c
  1690  001218  2238               	addwfc	dtoa@n+2,f,c
  1691  00121A  2239               	addwfc	dtoa@n+3,f,c
  1692  00121C  223A               	addwfc	dtoa@n+4,f,c
  1693  00121E  223B               	addwfc	dtoa@n+5,f,c
  1694  001220  223C               	addwfc	dtoa@n+6,f,c
  1695  001222  223D               	addwfc	dtoa@n+7,f,c
  1696  001224                     l1943:
  1697                           
  1698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1699  001224  AE5D               	btfss	_prec+1,7,c
  1700                           
  1701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1702  001226  925E               	bcf	_flags,1,c
  1703                           
  1704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1705  001228  BE5D               	btfsc	_prec+1,7,c
  1706  00122A  D005               	goto	u1670
  1707  00122C  505D               	movf	_prec+1,w,c
  1708  00122E  E108               	bnz	l167
  1709  001230  045C               	decf	_prec,w,c
  1710  001232  B0D8               	btfsc	status,0,c
  1711  001234  D005               	goto	l167
  1712  001236                     u1670:
  1713  001236  0E00               	movlw	0
  1714  001238  6E31               	movwf	dtoa@p+1,c
  1715  00123A  0E01               	movlw	1
  1716  00123C  6E30               	movwf	dtoa@p,c
  1717  00123E  D004               	goto	l169
  1718  001240                     l167:
  1719  001240  C05C  F030         	movff	_prec,dtoa@p
  1720  001244  C05D  F031         	movff	_prec+1,dtoa@p+1
  1721  001248                     l169:
  1722                           
  1723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1724  001248  C05A  F032         	movff	_width,dtoa@w
  1725  00124C  C05B  F033         	movff	_width+1,dtoa@w+1
  1726                           
  1727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1728  001250  5034               	movf	dtoa@s,w,c
  1729  001252  1035               	iorwf	dtoa@s+1,w,c
  1730  001254  A4D8               	btfss	status,2,c
  1731  001256  D002               	goto	u1690
  1732  001258  A45E               	btfss	_flags,2,c
  1733  00125A  D003               	goto	l1957
  1734  00125C                     u1690:
  1735                           
  1736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1737  00125C  0632               	decf	dtoa@w,f,c
  1738  00125E  A0D8               	btfss	status,0,c
  1739  001260  0633               	decf	dtoa@w+1,f,c
  1740  001262                     l1957:
  1741                           
  1742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1743  001262  0E00               	movlw	0
  1744  001264  6E3F               	movwf	dtoa@i+1,c
  1745  001266  0E1F               	movlw	31
  1746  001268  6E3E               	movwf	dtoa@i,c
  1747                           
  1748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1749  00126A  0E00               	movlw	0
  1750  00126C  0100               	movlb	0	; () banked
  1751  00126E  6FB6               	movwf	(_dbuf+31)& (0+255),b
  1752                           
  1753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1754  001270  D07C               	goto	l1971
  1755  001272                     l1961:
  1756                           
  1757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1758  001272  063E               	decf	dtoa@i,f,c
  1759  001274  A0D8               	btfss	status,0,c
  1760  001276  063F               	decf	dtoa@i+1,f,c
  1761                           
  1762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1763  001278  0E97               	movlw	low _dbuf
  1764  00127A  243E               	addwf	dtoa@i,w,c
  1765  00127C  6ED9               	movwf	fsr2l,c
  1766  00127E  0E00               	movlw	high _dbuf
  1767  001280  203F               	addwfc	dtoa@i+1,w,c
  1768  001282  6EDA               	movwf	fsr2h,c
  1769  001284  C036  F001         	movff	dtoa@n,___aomod@dividend
  1770  001288  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1771  00128C  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1772  001290  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1773  001294  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1774  001298  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1775  00129C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1776  0012A0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1777  0012A4  0E0A               	movlw	10
  1778  0012A6  6E09               	movwf	___aomod@divisor,c
  1779  0012A8  0E00               	movlw	0
  1780  0012AA  6E0A               	movwf	___aomod@divisor+1,c
  1781  0012AC  0E00               	movlw	0
  1782  0012AE  6E0B               	movwf	___aomod@divisor+2,c
  1783  0012B0  0E00               	movlw	0
  1784  0012B2  6E0C               	movwf	___aomod@divisor+3,c
  1785  0012B4  0E00               	movlw	0
  1786  0012B6  6E0D               	movwf	___aomod@divisor+4,c
  1787  0012B8  0E00               	movlw	0
  1788  0012BA  6E0E               	movwf	___aomod@divisor+5,c
  1789  0012BC  0E00               	movlw	0
  1790  0012BE  6E0F               	movwf	___aomod@divisor+6,c
  1791  0012C0  0E00               	movlw	0
  1792  0012C2  6E10               	movwf	___aomod@divisor+7,c
  1793  0012C4  ECD8  F00C         	call	___aomod	;wreg free
  1794  0012C8  C001  F026         	movff	?___aomod,??_dtoa
  1795  0012CC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1796  0012D0  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1797  0012D4  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1798  0012D8  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1799  0012DC  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1800  0012E0  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1801  0012E4  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1802  0012E8  C026  F013         	movff	??_dtoa,abs@a
  1803  0012EC  C028  F014         	movff	??_dtoa+2,abs@a+1
  1804  0012F0  EC1F  F010         	call	_abs	;wreg free
  1805  0012F4  5013               	movf	?_abs,w,c
  1806  0012F6  0F30               	addlw	48
  1807  0012F8  6EDF               	movwf	indf2,c
  1808                           
  1809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1810  0012FA  0630               	decf	dtoa@p,f,c
  1811  0012FC  A0D8               	btfss	status,0,c
  1812  0012FE  0631               	decf	dtoa@p+1,f,c
  1813                           
  1814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1815  001300  0632               	decf	dtoa@w,f,c
  1816  001302  A0D8               	btfss	status,0,c
  1817  001304  0633               	decf	dtoa@w+1,f,c
  1818                           
  1819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1820  001306  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1821  00130A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1822  00130E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1823  001312  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1824  001316  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1825  00131A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1826  00131E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1827  001322  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1828  001326  0E0A               	movlw	10
  1829  001328  6E09               	movwf	___aodiv@divisor,c
  1830  00132A  0E00               	movlw	0
  1831  00132C  6E0A               	movwf	___aodiv@divisor+1,c
  1832  00132E  0E00               	movlw	0
  1833  001330  6E0B               	movwf	___aodiv@divisor+2,c
  1834  001332  0E00               	movlw	0
  1835  001334  6E0C               	movwf	___aodiv@divisor+3,c
  1836  001336  0E00               	movlw	0
  1837  001338  6E0D               	movwf	___aodiv@divisor+4,c
  1838  00133A  0E00               	movlw	0
  1839  00133C  6E0E               	movwf	___aodiv@divisor+5,c
  1840  00133E  0E00               	movlw	0
  1841  001340  6E0F               	movwf	___aodiv@divisor+6,c
  1842  001342  0E00               	movlw	0
  1843  001344  6E10               	movwf	___aodiv@divisor+7,c
  1844  001346  ECFB  F00A         	call	___aodiv	;wreg free
  1845  00134A  C001  F036         	movff	?___aodiv,dtoa@n
  1846  00134E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1847  001352  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1848  001356  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1849  00135A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1850  00135E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1851  001362  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1852  001366  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1853  00136A                     l1971:
  1854                           
  1855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1856  00136A  BE3F               	btfsc	dtoa@i+1,7,c
  1857  00136C  D01F               	goto	u1740
  1858  00136E  503F               	movf	dtoa@i+1,w,c
  1859  001370  E103               	bnz	u1700
  1860  001372  043E               	decf	dtoa@i,w,c
  1861  001374  A0D8               	btfss	status,0,c
  1862  001376  D01A               	goto	u1740
  1863  001378                     u1700:
  1864  001378  5036               	movf	dtoa@n,w,c
  1865  00137A  1037               	iorwf	dtoa@n+1,w,c
  1866  00137C  1038               	iorwf	dtoa@n+2,w,c
  1867  00137E  1039               	iorwf	dtoa@n+3,w,c
  1868  001380  103A               	iorwf	dtoa@n+4,w,c
  1869  001382  103B               	iorwf	dtoa@n+5,w,c
  1870  001384  103C               	iorwf	dtoa@n+6,w,c
  1871  001386  103D               	iorwf	dtoa@n+7,w,c
  1872  001388  A4D8               	btfss	status,2,c
  1873  00138A  D773               	goto	l1961
  1874  00138C  BE31               	btfsc	dtoa@p+1,7,c
  1875  00138E  D005               	goto	u1720
  1876  001390  5031               	movf	dtoa@p+1,w,c
  1877  001392  E102               	bnz	u1721
  1878  001394  0430               	decf	dtoa@p,w,c
  1879  001396  B0D8               	btfsc	status,0,c
  1880  001398                     u1721:
  1881  001398  D76C               	goto	l1961
  1882  00139A                     u1720:
  1883  00139A  BE33               	btfsc	dtoa@w+1,7,c
  1884  00139C  D007               	goto	u1740
  1885  00139E  5033               	movf	dtoa@w+1,w,c
  1886  0013A0  E103               	bnz	u1730
  1887  0013A2  0432               	decf	dtoa@w,w,c
  1888  0013A4  A0D8               	btfss	status,0,c
  1889  0013A6  D002               	goto	u1740
  1890  0013A8                     u1730:
  1891  0013A8  B25E               	btfsc	_flags,1,c
  1892  0013AA  D763               	goto	l1961
  1893  0013AC                     u1740:
  1894                           
  1895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1896  0013AC  5034               	movf	dtoa@s,w,c
  1897  0013AE  1035               	iorwf	dtoa@s+1,w,c
  1898  0013B0  A4D8               	btfss	status,2,c
  1899  0013B2  D002               	goto	u1760
  1900  0013B4  A45E               	btfss	_flags,2,c
  1901  0013B6  D017               	goto	l1995
  1902  0013B8                     u1760:
  1903                           
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1905  0013B8  063E               	decf	dtoa@i,f,c
  1906  0013BA  A0D8               	btfss	status,0,c
  1907  0013BC  063F               	decf	dtoa@i+1,f,c
  1908                           
  1909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1910  0013BE  5034               	movf	dtoa@s,w,c
  1911  0013C0  1035               	iorwf	dtoa@s+1,w,c
  1912  0013C2  A4D8               	btfss	status,2,c
  1913  0013C4  D004               	goto	l1991
  1914  0013C6  0E00               	movlw	0
  1915  0013C8  6E2F               	movwf	_dtoa$427+1,c
  1916  0013CA  0E2B               	movlw	43
  1917  0013CC  D003               	goto	L1
  1918  0013CE                     l1991:
  1919  0013CE  0E00               	movlw	0
  1920  0013D0  6E2F               	movwf	_dtoa$427+1,c
  1921  0013D2  0E2D               	movlw	45
  1922  0013D4                     L1:
  1923  0013D4  6E2E               	movwf	_dtoa$427,c
  1924  0013D6  0E97               	movlw	low _dbuf
  1925  0013D8  243E               	addwf	dtoa@i,w,c
  1926  0013DA  6ED9               	movwf	fsr2l,c
  1927  0013DC  0E00               	movlw	high _dbuf
  1928  0013DE  203F               	addwfc	dtoa@i+1,w,c
  1929  0013E0  6EDA               	movwf	fsr2h,c
  1930  0013E2  C02E  FFDF         	movff	_dtoa$427,indf2
  1931  0013E6                     l1995:
  1932                           
  1933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1934  0013E6  C01C  F011         	movff	dtoa@fp,pad@fp
  1935  0013EA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1936  0013EE  0E97               	movlw	low _dbuf
  1937  0013F0  243E               	addwf	dtoa@i,w,c
  1938  0013F2  6E13               	movwf	pad@buf,c
  1939  0013F4  0E00               	movlw	high _dbuf
  1940  0013F6  203F               	addwfc	dtoa@i+1,w,c
  1941  0013F8  6E14               	movwf	pad@buf+1,c
  1942  0013FA  C032  F015         	movff	dtoa@w,pad@p
  1943  0013FE  C033  F016         	movff	dtoa@w+1,pad@p+1
  1944  001402  EC7F  F00E         	call	_pad	;wreg free
  1945  001406  C011  F01C         	movff	?_pad,?_dtoa
  1946  00140A  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1947  00140E  0012               	return		;funcret
  1948  001410                     __end_of_dtoa:
  1949                           	opt callstack 0
  1950                           
  1951 ;; *************** function _abs *****************
  1952 ;; Defined at:
  1953 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  a               2   18[COMRAM] int 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2   18[COMRAM] int 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1967 ;;      Params:         2       0       0       0       0       0       0       0       0
  1968 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1969 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1970 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1971 ;;Total ram usage:        4 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; This function calls:
  1974 ;;		Nothing
  1975 ;; This function is called by:
  1976 ;;		_dtoa
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text5
  1981  00203E                     __ptext5:
  1982                           	opt callstack 0
  1983  00203E                     _abs:
  1984                           	opt callstack 26
  1985                           
  1986                           ;incstack = 0
  1987  00203E  BE14               	btfsc	abs@a+1,7,c
  1988  002040  D005               	goto	u1480
  1989  002042  5014               	movf	abs@a+1,w,c
  1990  002044  E110               	bnz	l880
  1991  002046  0413               	decf	abs@a,w,c
  1992  002048  B0D8               	btfsc	status,0,c
  1993  00204A  D00D               	goto	l880
  1994  00204C                     u1480:
  1995  00204C  C013  F015         	movff	abs@a,??_abs
  1996  002050  C014  F016         	movff	abs@a+1,??_abs+1
  1997  002054  1E15               	comf	??_abs,f,c
  1998  002056  1E16               	comf	??_abs+1,f,c
  1999  002058  4A15               	infsnz	??_abs,f,c
  2000  00205A  2A16               	incf	??_abs+1,f,c
  2001  00205C  C015  F013         	movff	??_abs,?_abs
  2002  002060  C016  F014         	movff	??_abs+1,?_abs+1
  2003  002064  0012               	return	
  2004  002066                     l880:
  2005  002066  C013  F013         	movff	abs@a,?_abs
  2006  00206A  C014  F014         	movff	abs@a+1,?_abs+1
  2007  00206E  0012               	return		;funcret
  2008  002070                     __end_of_abs:
  2009                           	opt callstack 0
  2010                           
  2011 ;; *************** function ___aomod *****************
  2012 ;; Defined at:
  2013 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  dividend        8    0[COMRAM] long long 
  2016 ;;  divisor         8    8[COMRAM] long long 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  sign            1   17[COMRAM] unsigned char 
  2019 ;;  counter         1   16[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  8    0[COMRAM] long long 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2029 ;;      Params:        16       0       0       0       0       0       0       0       0
  2030 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2032 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2033 ;;Total ram usage:       18 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_dtoa
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text6
  2043  0019B0                     __ptext6:
  2044                           	opt callstack 0
  2045  0019B0                     ___aomod:
  2046                           	opt callstack 26
  2047                           
  2048                           ;incstack = 0
  2049  0019B0  0E00               	movlw	0
  2050  0019B2  6E12               	movwf	___aomod@sign,c
  2051  0019B4  AE08               	btfss	___aomod@dividend+7,7,c
  2052  0019B6  D012               	goto	l1895
  2053  0019B8  1E08               	comf	___aomod@dividend+7,f,c
  2054  0019BA  1E07               	comf	___aomod@dividend+6,f,c
  2055  0019BC  1E06               	comf	___aomod@dividend+5,f,c
  2056  0019BE  1E05               	comf	___aomod@dividend+4,f,c
  2057  0019C0  1E04               	comf	___aomod@dividend+3,f,c
  2058  0019C2  1E03               	comf	___aomod@dividend+2,f,c
  2059  0019C4  1E02               	comf	___aomod@dividend+1,f,c
  2060  0019C6  6C01               	negf	___aomod@dividend,c
  2061  0019C8  0E00               	movlw	0
  2062  0019CA  2202               	addwfc	___aomod@dividend+1,f,c
  2063  0019CC  2203               	addwfc	___aomod@dividend+2,f,c
  2064  0019CE  2204               	addwfc	___aomod@dividend+3,f,c
  2065  0019D0  2205               	addwfc	___aomod@dividend+4,f,c
  2066  0019D2  2206               	addwfc	___aomod@dividend+5,f,c
  2067  0019D4  2207               	addwfc	___aomod@dividend+6,f,c
  2068  0019D6  2208               	addwfc	___aomod@dividend+7,f,c
  2069  0019D8  0E01               	movlw	1
  2070  0019DA  6E12               	movwf	___aomod@sign,c
  2071  0019DC                     l1895:
  2072  0019DC  AE10               	btfss	___aomod@divisor+7,7,c
  2073  0019DE  D010               	goto	l1899
  2074  0019E0  1E10               	comf	___aomod@divisor+7,f,c
  2075  0019E2  1E0F               	comf	___aomod@divisor+6,f,c
  2076  0019E4  1E0E               	comf	___aomod@divisor+5,f,c
  2077  0019E6  1E0D               	comf	___aomod@divisor+4,f,c
  2078  0019E8  1E0C               	comf	___aomod@divisor+3,f,c
  2079  0019EA  1E0B               	comf	___aomod@divisor+2,f,c
  2080  0019EC  1E0A               	comf	___aomod@divisor+1,f,c
  2081  0019EE  6C09               	negf	___aomod@divisor,c
  2082  0019F0  0E00               	movlw	0
  2083  0019F2  220A               	addwfc	___aomod@divisor+1,f,c
  2084  0019F4  220B               	addwfc	___aomod@divisor+2,f,c
  2085  0019F6  220C               	addwfc	___aomod@divisor+3,f,c
  2086  0019F8  220D               	addwfc	___aomod@divisor+4,f,c
  2087  0019FA  220E               	addwfc	___aomod@divisor+5,f,c
  2088  0019FC  220F               	addwfc	___aomod@divisor+6,f,c
  2089  0019FE  2210               	addwfc	___aomod@divisor+7,f,c
  2090  001A00                     l1899:
  2091  001A00  5009               	movf	___aomod@divisor,w,c
  2092  001A02  100A               	iorwf	___aomod@divisor+1,w,c
  2093  001A04  100B               	iorwf	___aomod@divisor+2,w,c
  2094  001A06  100C               	iorwf	___aomod@divisor+3,w,c
  2095  001A08  100D               	iorwf	___aomod@divisor+4,w,c
  2096  001A0A  100E               	iorwf	___aomod@divisor+5,w,c
  2097  001A0C  100F               	iorwf	___aomod@divisor+6,w,c
  2098  001A0E  1010               	iorwf	___aomod@divisor+7,w,c
  2099  001A10  B4D8               	btfsc	status,2,c
  2100  001A12  D03C               	goto	l1915
  2101  001A14  0E01               	movlw	1
  2102  001A16  6E11               	movwf	___aomod@counter,c
  2103  001A18  D00A               	goto	l1905
  2104  001A1A                     l1903:
  2105  001A1A  90D8               	bcf	status,0,c
  2106  001A1C  3609               	rlcf	___aomod@divisor,f,c
  2107  001A1E  360A               	rlcf	___aomod@divisor+1,f,c
  2108  001A20  360B               	rlcf	___aomod@divisor+2,f,c
  2109  001A22  360C               	rlcf	___aomod@divisor+3,f,c
  2110  001A24  360D               	rlcf	___aomod@divisor+4,f,c
  2111  001A26  360E               	rlcf	___aomod@divisor+5,f,c
  2112  001A28  360F               	rlcf	___aomod@divisor+6,f,c
  2113  001A2A  3610               	rlcf	___aomod@divisor+7,f,c
  2114  001A2C  2A11               	incf	___aomod@counter,f,c
  2115  001A2E                     l1905:
  2116  001A2E  AE10               	btfss	___aomod@divisor+7,7,c
  2117  001A30  D7F4               	goto	l1903
  2118  001A32                     u1590:
  2119  001A32  5009               	movf	___aomod@divisor,w,c
  2120  001A34  5C01               	subwf	___aomod@dividend,w,c
  2121  001A36  500A               	movf	___aomod@divisor+1,w,c
  2122  001A38  5802               	subwfb	___aomod@dividend+1,w,c
  2123  001A3A  500B               	movf	___aomod@divisor+2,w,c
  2124  001A3C  5803               	subwfb	___aomod@dividend+2,w,c
  2125  001A3E  500C               	movf	___aomod@divisor+3,w,c
  2126  001A40  5804               	subwfb	___aomod@dividend+3,w,c
  2127  001A42  500D               	movf	___aomod@divisor+4,w,c
  2128  001A44  5805               	subwfb	___aomod@dividend+4,w,c
  2129  001A46  500E               	movf	___aomod@divisor+5,w,c
  2130  001A48  5806               	subwfb	___aomod@dividend+5,w,c
  2131  001A4A  500F               	movf	___aomod@divisor+6,w,c
  2132  001A4C  5807               	subwfb	___aomod@dividend+6,w,c
  2133  001A4E  5010               	movf	___aomod@divisor+7,w,c
  2134  001A50  5808               	subwfb	___aomod@dividend+7,w,c
  2135  001A52  A0D8               	btfss	status,0,c
  2136  001A54  D010               	goto	l1911
  2137  001A56  5009               	movf	___aomod@divisor,w,c
  2138  001A58  5E01               	subwf	___aomod@dividend,f,c
  2139  001A5A  500A               	movf	___aomod@divisor+1,w,c
  2140  001A5C  5A02               	subwfb	___aomod@dividend+1,f,c
  2141  001A5E  500B               	movf	___aomod@divisor+2,w,c
  2142  001A60  5A03               	subwfb	___aomod@dividend+2,f,c
  2143  001A62  500C               	movf	___aomod@divisor+3,w,c
  2144  001A64  5A04               	subwfb	___aomod@dividend+3,f,c
  2145  001A66  500D               	movf	___aomod@divisor+4,w,c
  2146  001A68  5A05               	subwfb	___aomod@dividend+4,f,c
  2147  001A6A  500E               	movf	___aomod@divisor+5,w,c
  2148  001A6C  5A06               	subwfb	___aomod@dividend+5,f,c
  2149  001A6E  500F               	movf	___aomod@divisor+6,w,c
  2150  001A70  5A07               	subwfb	___aomod@dividend+6,f,c
  2151  001A72  5010               	movf	___aomod@divisor+7,w,c
  2152  001A74  5A08               	subwfb	___aomod@dividend+7,f,c
  2153  001A76                     l1911:
  2154  001A76  90D8               	bcf	status,0,c
  2155  001A78  3210               	rrcf	___aomod@divisor+7,f,c
  2156  001A7A  320F               	rrcf	___aomod@divisor+6,f,c
  2157  001A7C  320E               	rrcf	___aomod@divisor+5,f,c
  2158  001A7E  320D               	rrcf	___aomod@divisor+4,f,c
  2159  001A80  320C               	rrcf	___aomod@divisor+3,f,c
  2160  001A82  320B               	rrcf	___aomod@divisor+2,f,c
  2161  001A84  320A               	rrcf	___aomod@divisor+1,f,c
  2162  001A86  3209               	rrcf	___aomod@divisor,f,c
  2163  001A88  2E11               	decfsz	___aomod@counter,f,c
  2164  001A8A  D7D3               	goto	u1590
  2165  001A8C                     l1915:
  2166  001A8C  5012               	movf	___aomod@sign,w,c
  2167  001A8E  B4D8               	btfsc	status,2,c
  2168  001A90  D010               	goto	l1919
  2169  001A92  1E08               	comf	___aomod@dividend+7,f,c
  2170  001A94  1E07               	comf	___aomod@dividend+6,f,c
  2171  001A96  1E06               	comf	___aomod@dividend+5,f,c
  2172  001A98  1E05               	comf	___aomod@dividend+4,f,c
  2173  001A9A  1E04               	comf	___aomod@dividend+3,f,c
  2174  001A9C  1E03               	comf	___aomod@dividend+2,f,c
  2175  001A9E  1E02               	comf	___aomod@dividend+1,f,c
  2176  001AA0  6C01               	negf	___aomod@dividend,c
  2177  001AA2  0E00               	movlw	0
  2178  001AA4  2202               	addwfc	___aomod@dividend+1,f,c
  2179  001AA6  2203               	addwfc	___aomod@dividend+2,f,c
  2180  001AA8  2204               	addwfc	___aomod@dividend+3,f,c
  2181  001AAA  2205               	addwfc	___aomod@dividend+4,f,c
  2182  001AAC  2206               	addwfc	___aomod@dividend+5,f,c
  2183  001AAE  2207               	addwfc	___aomod@dividend+6,f,c
  2184  001AB0  2208               	addwfc	___aomod@dividend+7,f,c
  2185  001AB2                     l1919:
  2186  001AB2  C001  F001         	movff	___aomod@dividend,?___aomod
  2187  001AB6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2188  001ABA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2189  001ABE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2190  001AC2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2191  001AC6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2192  001ACA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2193  001ACE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2194  001AD2  0012               	return		;funcret
  2195  001AD4                     __end_of___aomod:
  2196                           	opt callstack 0
  2197                           
  2198 ;; *************** function ___aodiv *****************
  2199 ;; Defined at:
  2200 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  dividend        8    0[COMRAM] long long 
  2203 ;;  divisor         8    8[COMRAM] long long 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  quotient        8   18[COMRAM] long long 
  2206 ;;  sign            1   17[COMRAM] unsigned char 
  2207 ;;  counter         1   16[COMRAM] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  8    0[COMRAM] long long 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2217 ;;      Params:        16       0       0       0       0       0       0       0       0
  2218 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2220 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2221 ;;Total ram usage:       26 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_dtoa
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text7
  2231  0015F6                     __ptext7:
  2232                           	opt callstack 0
  2233  0015F6                     ___aodiv:
  2234                           	opt callstack 26
  2235                           
  2236                           ;incstack = 0
  2237  0015F6  0E00               	movlw	0
  2238  0015F8  6E12               	movwf	___aodiv@sign,c
  2239  0015FA  AE10               	btfss	___aodiv@divisor+7,7,c
  2240  0015FC  D012               	goto	l1851
  2241  0015FE  1E10               	comf	___aodiv@divisor+7,f,c
  2242  001600  1E0F               	comf	___aodiv@divisor+6,f,c
  2243  001602  1E0E               	comf	___aodiv@divisor+5,f,c
  2244  001604  1E0D               	comf	___aodiv@divisor+4,f,c
  2245  001606  1E0C               	comf	___aodiv@divisor+3,f,c
  2246  001608  1E0B               	comf	___aodiv@divisor+2,f,c
  2247  00160A  1E0A               	comf	___aodiv@divisor+1,f,c
  2248  00160C  6C09               	negf	___aodiv@divisor,c
  2249  00160E  0E00               	movlw	0
  2250  001610  220A               	addwfc	___aodiv@divisor+1,f,c
  2251  001612  220B               	addwfc	___aodiv@divisor+2,f,c
  2252  001614  220C               	addwfc	___aodiv@divisor+3,f,c
  2253  001616  220D               	addwfc	___aodiv@divisor+4,f,c
  2254  001618  220E               	addwfc	___aodiv@divisor+5,f,c
  2255  00161A  220F               	addwfc	___aodiv@divisor+6,f,c
  2256  00161C  2210               	addwfc	___aodiv@divisor+7,f,c
  2257  00161E  0E01               	movlw	1
  2258  001620  6E12               	movwf	___aodiv@sign,c
  2259  001622                     l1851:
  2260  001622  AE08               	btfss	___aodiv@dividend+7,7,c
  2261  001624  D012               	goto	l1857
  2262  001626  1E08               	comf	___aodiv@dividend+7,f,c
  2263  001628  1E07               	comf	___aodiv@dividend+6,f,c
  2264  00162A  1E06               	comf	___aodiv@dividend+5,f,c
  2265  00162C  1E05               	comf	___aodiv@dividend+4,f,c
  2266  00162E  1E04               	comf	___aodiv@dividend+3,f,c
  2267  001630  1E03               	comf	___aodiv@dividend+2,f,c
  2268  001632  1E02               	comf	___aodiv@dividend+1,f,c
  2269  001634  6C01               	negf	___aodiv@dividend,c
  2270  001636  0E00               	movlw	0
  2271  001638  2202               	addwfc	___aodiv@dividend+1,f,c
  2272  00163A  2203               	addwfc	___aodiv@dividend+2,f,c
  2273  00163C  2204               	addwfc	___aodiv@dividend+3,f,c
  2274  00163E  2205               	addwfc	___aodiv@dividend+4,f,c
  2275  001640  2206               	addwfc	___aodiv@dividend+5,f,c
  2276  001642  2207               	addwfc	___aodiv@dividend+6,f,c
  2277  001644  2208               	addwfc	___aodiv@dividend+7,f,c
  2278  001646  0E01               	movlw	1
  2279  001648  1A12               	xorwf	___aodiv@sign,f,c
  2280  00164A                     l1857:
  2281  00164A  EE20  F013         	lfsr	2,___aodiv@quotient
  2282  00164E  0E07               	movlw	7
  2283  001650                     u1511:
  2284  001650  6ADE               	clrf	postinc2,c
  2285  001652  06E8               	decf	wreg,f,c
  2286  001654  E2FD               	bc	u1511
  2287  001656  5009               	movf	___aodiv@divisor,w,c
  2288  001658  100A               	iorwf	___aodiv@divisor+1,w,c
  2289  00165A  100B               	iorwf	___aodiv@divisor+2,w,c
  2290  00165C  100C               	iorwf	___aodiv@divisor+3,w,c
  2291  00165E  100D               	iorwf	___aodiv@divisor+4,w,c
  2292  001660  100E               	iorwf	___aodiv@divisor+5,w,c
  2293  001662  100F               	iorwf	___aodiv@divisor+6,w,c
  2294  001664  1010               	iorwf	___aodiv@divisor+7,w,c
  2295  001666  B4D8               	btfsc	status,2,c
  2296  001668  D046               	goto	l1879
  2297  00166A  0E01               	movlw	1
  2298  00166C  6E11               	movwf	___aodiv@counter,c
  2299  00166E  D00A               	goto	l1865
  2300  001670                     l1863:
  2301  001670  90D8               	bcf	status,0,c
  2302  001672  3609               	rlcf	___aodiv@divisor,f,c
  2303  001674  360A               	rlcf	___aodiv@divisor+1,f,c
  2304  001676  360B               	rlcf	___aodiv@divisor+2,f,c
  2305  001678  360C               	rlcf	___aodiv@divisor+3,f,c
  2306  00167A  360D               	rlcf	___aodiv@divisor+4,f,c
  2307  00167C  360E               	rlcf	___aodiv@divisor+5,f,c
  2308  00167E  360F               	rlcf	___aodiv@divisor+6,f,c
  2309  001680  3610               	rlcf	___aodiv@divisor+7,f,c
  2310  001682  2A11               	incf	___aodiv@counter,f,c
  2311  001684                     l1865:
  2312  001684  AE10               	btfss	___aodiv@divisor+7,7,c
  2313  001686  D7F4               	goto	l1863
  2314  001688                     u1530:
  2315  001688  90D8               	bcf	status,0,c
  2316  00168A  3613               	rlcf	___aodiv@quotient,f,c
  2317  00168C  3614               	rlcf	___aodiv@quotient+1,f,c
  2318  00168E  3615               	rlcf	___aodiv@quotient+2,f,c
  2319  001690  3616               	rlcf	___aodiv@quotient+3,f,c
  2320  001692  3617               	rlcf	___aodiv@quotient+4,f,c
  2321  001694  3618               	rlcf	___aodiv@quotient+5,f,c
  2322  001696  3619               	rlcf	___aodiv@quotient+6,f,c
  2323  001698  361A               	rlcf	___aodiv@quotient+7,f,c
  2324  00169A  5009               	movf	___aodiv@divisor,w,c
  2325  00169C  5C01               	subwf	___aodiv@dividend,w,c
  2326  00169E  500A               	movf	___aodiv@divisor+1,w,c
  2327  0016A0  5802               	subwfb	___aodiv@dividend+1,w,c
  2328  0016A2  500B               	movf	___aodiv@divisor+2,w,c
  2329  0016A4  5803               	subwfb	___aodiv@dividend+2,w,c
  2330  0016A6  500C               	movf	___aodiv@divisor+3,w,c
  2331  0016A8  5804               	subwfb	___aodiv@dividend+3,w,c
  2332  0016AA  500D               	movf	___aodiv@divisor+4,w,c
  2333  0016AC  5805               	subwfb	___aodiv@dividend+4,w,c
  2334  0016AE  500E               	movf	___aodiv@divisor+5,w,c
  2335  0016B0  5806               	subwfb	___aodiv@dividend+5,w,c
  2336  0016B2  500F               	movf	___aodiv@divisor+6,w,c
  2337  0016B4  5807               	subwfb	___aodiv@dividend+6,w,c
  2338  0016B6  5010               	movf	___aodiv@divisor+7,w,c
  2339  0016B8  5808               	subwfb	___aodiv@dividend+7,w,c
  2340  0016BA  A0D8               	btfss	status,0,c
  2341  0016BC  D011               	goto	l1875
  2342  0016BE  5009               	movf	___aodiv@divisor,w,c
  2343  0016C0  5E01               	subwf	___aodiv@dividend,f,c
  2344  0016C2  500A               	movf	___aodiv@divisor+1,w,c
  2345  0016C4  5A02               	subwfb	___aodiv@dividend+1,f,c
  2346  0016C6  500B               	movf	___aodiv@divisor+2,w,c
  2347  0016C8  5A03               	subwfb	___aodiv@dividend+2,f,c
  2348  0016CA  500C               	movf	___aodiv@divisor+3,w,c
  2349  0016CC  5A04               	subwfb	___aodiv@dividend+3,f,c
  2350  0016CE  500D               	movf	___aodiv@divisor+4,w,c
  2351  0016D0  5A05               	subwfb	___aodiv@dividend+4,f,c
  2352  0016D2  500E               	movf	___aodiv@divisor+5,w,c
  2353  0016D4  5A06               	subwfb	___aodiv@dividend+5,f,c
  2354  0016D6  500F               	movf	___aodiv@divisor+6,w,c
  2355  0016D8  5A07               	subwfb	___aodiv@dividend+6,f,c
  2356  0016DA  5010               	movf	___aodiv@divisor+7,w,c
  2357  0016DC  5A08               	subwfb	___aodiv@dividend+7,f,c
  2358  0016DE  8013               	bsf	___aodiv@quotient,0,c
  2359  0016E0                     l1875:
  2360  0016E0  90D8               	bcf	status,0,c
  2361  0016E2  3210               	rrcf	___aodiv@divisor+7,f,c
  2362  0016E4  320F               	rrcf	___aodiv@divisor+6,f,c
  2363  0016E6  320E               	rrcf	___aodiv@divisor+5,f,c
  2364  0016E8  320D               	rrcf	___aodiv@divisor+4,f,c
  2365  0016EA  320C               	rrcf	___aodiv@divisor+3,f,c
  2366  0016EC  320B               	rrcf	___aodiv@divisor+2,f,c
  2367  0016EE  320A               	rrcf	___aodiv@divisor+1,f,c
  2368  0016F0  3209               	rrcf	___aodiv@divisor,f,c
  2369  0016F2  2E11               	decfsz	___aodiv@counter,f,c
  2370  0016F4  D7C9               	goto	u1530
  2371  0016F6                     l1879:
  2372  0016F6  5012               	movf	___aodiv@sign,w,c
  2373  0016F8  B4D8               	btfsc	status,2,c
  2374  0016FA  D010               	goto	l1883
  2375  0016FC  1E1A               	comf	___aodiv@quotient+7,f,c
  2376  0016FE  1E19               	comf	___aodiv@quotient+6,f,c
  2377  001700  1E18               	comf	___aodiv@quotient+5,f,c
  2378  001702  1E17               	comf	___aodiv@quotient+4,f,c
  2379  001704  1E16               	comf	___aodiv@quotient+3,f,c
  2380  001706  1E15               	comf	___aodiv@quotient+2,f,c
  2381  001708  1E14               	comf	___aodiv@quotient+1,f,c
  2382  00170A  6C13               	negf	___aodiv@quotient,c
  2383  00170C  0E00               	movlw	0
  2384  00170E  2214               	addwfc	___aodiv@quotient+1,f,c
  2385  001710  2215               	addwfc	___aodiv@quotient+2,f,c
  2386  001712  2216               	addwfc	___aodiv@quotient+3,f,c
  2387  001714  2217               	addwfc	___aodiv@quotient+4,f,c
  2388  001716  2218               	addwfc	___aodiv@quotient+5,f,c
  2389  001718  2219               	addwfc	___aodiv@quotient+6,f,c
  2390  00171A  221A               	addwfc	___aodiv@quotient+7,f,c
  2391  00171C                     l1883:
  2392  00171C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2393  001720  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2394  001724  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2395  001728  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2396  00172C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2397  001730  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2398  001734  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2399  001738  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2400  00173C  0012               	return		;funcret
  2401  00173E                     __end_of___aodiv:
  2402                           	opt callstack 0
  2403                           
  2404 ;; *************** function _ctoa *****************
  2405 ;; Defined at:
  2406 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2409 ;;		 -> sprintf@f(6), 
  2410 ;;  c               1   29[COMRAM] unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  w               2   30[COMRAM] int 
  2413 ;;  l               2    0        int 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  2   27[COMRAM] int 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2423 ;;      Params:         3       0       0       0       0       0       0       0       0
  2424 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2426 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2427 ;;Total ram usage:        5 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    4
  2430 ;; This function calls:
  2431 ;;		_pad
  2432 ;; This function is called by:
  2433 ;;		_vfpfcnvrt
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text8
  2438  001F08                     __ptext8:
  2439                           	opt callstack 0
  2440  001F08                     _ctoa:
  2441                           	opt callstack 23
  2442                           
  2443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  2444                           
  2445                           ;incstack = 0
  2446  001F08  505A               	movf	_width,w,c
  2447  001F0A  105B               	iorwf	_width+1,w,c
  2448  001F0C  A4D8               	btfss	status,2,c
  2449  001F0E  D005               	goto	l1927
  2450  001F10  C05A  F01F         	movff	_width,ctoa@w
  2451  001F14  C05B  F020         	movff	_width+1,ctoa@w+1
  2452  001F18  D006               	goto	l1929
  2453  001F1A                     l1927:
  2454  001F1A  0EFF               	movlw	255
  2455  001F1C  245A               	addwf	_width,w,c
  2456  001F1E  6E1F               	movwf	ctoa@w,c
  2457  001F20  0EFF               	movlw	255
  2458  001F22  205B               	addwfc	_width+1,w,c
  2459  001F24  6E20               	movwf	ctoa@w+1,c
  2460  001F26                     l1929:
  2461                           
  2462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  2463  001F26  C01E  F097         	movff	ctoa@c,_dbuf
  2464                           
  2465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  2466  001F2A  0E00               	movlw	0
  2467  001F2C  0100               	movlb	0	; () banked
  2468  001F2E  6F98               	movwf	(_dbuf+1)& (0+255),b
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  2472  001F30  C01C  F011         	movff	ctoa@fp,pad@fp
  2473  001F34  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  2474  001F38  0E97               	movlw	low _dbuf
  2475  001F3A  6E13               	movwf	pad@buf,c
  2476  001F3C  0E00               	movlw	high _dbuf
  2477  001F3E  6E14               	movwf	pad@buf+1,c
  2478  001F40  C01F  F015         	movff	ctoa@w,pad@p
  2479  001F44  C020  F016         	movff	ctoa@w+1,pad@p+1
  2480  001F48  EC7F  F00E         	call	_pad	;wreg free
  2481  001F4C  C011  F01C         	movff	?_pad,?_ctoa
  2482  001F50  C012  F01D         	movff	?_pad+1,?_ctoa+1
  2483  001F54  0012               	return		;funcret
  2484  001F56                     __end_of_ctoa:
  2485                           	opt callstack 0
  2486                           
  2487 ;; *************** function _pad *****************
  2488 ;; Defined at:
  2489 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2492 ;;		 -> sprintf@f(6), 
  2493 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2494 ;;		 -> dbuf(32), 
  2495 ;;  p               2   20[COMRAM] int 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  w               2   25[COMRAM] int 
  2498 ;;  i               2   23[COMRAM] int 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  2   16[COMRAM] int 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2508 ;;      Params:         6       0       0       0       0       0       0       0       0
  2509 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2510 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2511 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2512 ;;Total ram usage:       11 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    3
  2515 ;; This function calls:
  2516 ;;		_fputc
  2517 ;;		_fputs
  2518 ;;		_strlen
  2519 ;; This function is called by:
  2520 ;;		_ctoa
  2521 ;;		_dtoa
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text9
  2526  001CFE                     __ptext9:
  2527                           	opt callstack 0
  2528  001CFE                     _pad:
  2529                           	opt callstack 23
  2530                           
  2531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2532                           
  2533                           ;incstack = 0
  2534  001CFE  A05E               	btfss	_flags,0,c
  2535  001D00  D00A               	goto	l1821
  2536                           
  2537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2538  001D02  C013  F00A         	movff	pad@buf,fputs@s
  2539  001D06  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2540  001D0A  C011  F00C         	movff	pad@fp,fputs@fp
  2541  001D0E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2542  001D12  ECE9  F00F         	call	_fputs	;wreg free
  2543  001D16                     l1821:
  2544                           
  2545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2546  001D16  BE16               	btfsc	pad@p+1,7,c
  2547  001D18  D005               	goto	l1825
  2548  001D1A  C015  F01A         	movff	pad@p,pad@w
  2549  001D1E  C016  F01B         	movff	pad@p+1,pad@w+1
  2550  001D22  D004               	goto	l149
  2551  001D24                     l1825:
  2552  001D24  0E00               	movlw	0
  2553  001D26  6E1B               	movwf	pad@w+1,c
  2554  001D28  0E00               	movlw	0
  2555  001D2A  6E1A               	movwf	pad@w,c
  2556  001D2C                     l149:
  2557                           
  2558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2559  001D2C  0E00               	movlw	0
  2560  001D2E  6E19               	movwf	pad@i+1,c
  2561  001D30  0E00               	movlw	0
  2562  001D32  6E18               	movwf	pad@i,c
  2563                           
  2564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2565  001D34  D00C               	goto	l1831
  2566  001D36                     l1827:
  2567                           
  2568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2569  001D36  0E00               	movlw	0
  2570  001D38  6E02               	movwf	fputc@c+1,c
  2571  001D3A  0E20               	movlw	32
  2572  001D3C  6E01               	movwf	fputc@c,c
  2573  001D3E  C011  F003         	movff	pad@fp,fputc@fp
  2574  001D42  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2575  001D46  EC2F  F00E         	call	_fputc	;wreg free
  2576                           
  2577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2578  001D4A  4A18               	infsnz	pad@i,f,c
  2579  001D4C  2A19               	incf	pad@i+1,f,c
  2580  001D4E                     l1831:
  2581                           
  2582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2583  001D4E  501A               	movf	pad@w,w,c
  2584  001D50  5C18               	subwf	pad@i,w,c
  2585  001D52  5019               	movf	pad@i+1,w,c
  2586  001D54  0A80               	xorlw	128
  2587  001D56  6E17               	movwf	??_pad& (0+255),c
  2588  001D58  501B               	movf	pad@w+1,w,c
  2589  001D5A  0A80               	xorlw	128
  2590  001D5C  5817               	subwfb	??_pad& (0+255),w,c
  2591  001D5E  A0D8               	btfss	status,0,c
  2592  001D60  D7EA               	goto	l1827
  2593                           
  2594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2595  001D62  B05E               	btfsc	_flags,0,c
  2596  001D64  D00A               	goto	l1835
  2597                           
  2598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2599  001D66  C013  F00A         	movff	pad@buf,fputs@s
  2600  001D6A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2601  001D6E  C011  F00C         	movff	pad@fp,fputs@fp
  2602  001D72  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2603  001D76  ECE9  F00F         	call	_fputs	;wreg free
  2604  001D7A                     l1835:
  2605                           
  2606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2607  001D7A  C013  F001         	movff	pad@buf,strlen@s
  2608  001D7E  C014  F002         	movff	pad@buf+1,strlen@s+1
  2609  001D82  EC51  F010         	call	_strlen	;wreg free
  2610  001D86  501A               	movf	pad@w,w,c
  2611  001D88  2401               	addwf	?_strlen,w,c
  2612  001D8A  6E11               	movwf	?_pad,c
  2613  001D8C  501B               	movf	pad@w+1,w,c
  2614  001D8E  2002               	addwfc	?_strlen+1,w,c
  2615  001D90  6E12               	movwf	?_pad+1,c
  2616  001D92  0012               	return		;funcret
  2617  001D94                     __end_of_pad:
  2618                           	opt callstack 0
  2619                           
  2620 ;; *************** function _strlen *****************
  2621 ;; Defined at:
  2622 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2625 ;;		 -> dbuf(32), 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2628 ;;		 -> dbuf(32), 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  2    0[COMRAM] unsigned int 
  2631 ;; Registers used:
  2632 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2638 ;;      Params:         2       0       0       0       0       0       0       0       0
  2639 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2641 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2642 ;;Total ram usage:        4 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_pad
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text10
  2652  0020A2                     __ptext10:
  2653                           	opt callstack 0
  2654  0020A2                     _strlen:
  2655                           	opt callstack 25
  2656                           
  2657                           ;incstack = 0
  2658  0020A2  C001  F003         	movff	strlen@s,strlen@a
  2659  0020A6  C002  F004         	movff	strlen@s+1,strlen@a+1
  2660  0020AA  D002               	goto	l1811
  2661  0020AC                     l1809:
  2662  0020AC  4A01               	infsnz	strlen@s,f,c
  2663  0020AE  2A02               	incf	strlen@s+1,f,c
  2664  0020B0                     l1811:
  2665  0020B0  C001  FFD9         	movff	strlen@s,fsr2l
  2666  0020B4  C002  FFDA         	movff	strlen@s+1,fsr2h
  2667  0020B8  50DF               	movf	indf2,w,c
  2668  0020BA  A4D8               	btfss	status,2,c
  2669  0020BC  D7F7               	goto	l1809
  2670  0020BE  5003               	movf	strlen@a,w,c
  2671  0020C0  5C01               	subwf	strlen@s,w,c
  2672  0020C2  6E01               	movwf	?_strlen,c
  2673  0020C4  5004               	movf	strlen@a+1,w,c
  2674  0020C6  5802               	subwfb	strlen@s+1,w,c
  2675  0020C8  6E02               	movwf	?_strlen+1,c
  2676  0020CA  0012               	return		;funcret
  2677  0020CC                     __end_of_strlen:
  2678                           	opt callstack 0
  2679                           
  2680 ;; *************** function _fputs *****************
  2681 ;; Defined at:
  2682 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2685 ;;		 -> dbuf(32), 
  2686 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2687 ;;		 -> sprintf@f(6), 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  i               2   14[COMRAM] int 
  2690 ;;  c               1   13[COMRAM] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  2    9[COMRAM] int 
  2693 ;; Registers used:
  2694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2700 ;;      Params:         4       0       0       0       0       0       0       0       0
  2701 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2703 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2704 ;;Total ram usage:        7 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    2
  2707 ;; This function calls:
  2708 ;;		_fputc
  2709 ;; This function is called by:
  2710 ;;		_pad
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text11
  2715  001FD2                     __ptext11:
  2716                           	opt callstack 0
  2717  001FD2                     _fputs:
  2718                           	opt callstack 23
  2719                           
  2720                           ;incstack = 0
  2721  001FD2  0E00               	movlw	0
  2722  001FD4  6E10               	movwf	fputs@i+1,c
  2723  001FD6  0E00               	movlw	0
  2724  001FD8  6E0F               	movwf	fputs@i,c
  2725  001FDA  D00B               	goto	l1805
  2726  001FDC                     l1801:
  2727  001FDC  C00E  F001         	movff	fputs@c,fputc@c
  2728  001FE0  6A02               	clrf	fputc@c+1,c
  2729  001FE2  C00C  F003         	movff	fputs@fp,fputc@fp
  2730  001FE6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2731  001FEA  EC2F  F00E         	call	_fputc	;wreg free
  2732  001FEE  4A0F               	infsnz	fputs@i,f,c
  2733  001FF0  2A10               	incf	fputs@i+1,f,c
  2734  001FF2                     l1805:
  2735  001FF2  500F               	movf	fputs@i,w,c
  2736  001FF4  240A               	addwf	fputs@s,w,c
  2737  001FF6  6ED9               	movwf	fsr2l,c
  2738  001FF8  5010               	movf	fputs@i+1,w,c
  2739  001FFA  200B               	addwfc	fputs@s+1,w,c
  2740  001FFC  6EDA               	movwf	fsr2h,c
  2741  001FFE  50DF               	movf	indf2,w,c
  2742  002000  6E0E               	movwf	fputs@c,c
  2743  002002  500E               	movf	fputs@c,w,c
  2744  002004  B4D8               	btfsc	status,2,c
  2745  002006  0012               	return	
  2746  002008  D7E9               	goto	l1801
  2747  00200A                     __end_of_fputs:
  2748                           	opt callstack 0
  2749                           
  2750 ;; *************** function _fputc *****************
  2751 ;; Defined at:
  2752 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  c               2    0[COMRAM] int 
  2755 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2756 ;;		 -> sprintf@f(6), 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  2    0[COMRAM] int 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2768 ;;      Params:         4       0       0       0       0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2770 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2771 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2772 ;;Total ram usage:        9 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    1
  2775 ;; This function calls:
  2776 ;;		_putch
  2777 ;; This function is called by:
  2778 ;;		_pad
  2779 ;;		_vfpfcnvrt
  2780 ;;		_fputs
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text12
  2785  001C5E                     __ptext12:
  2786                           	opt callstack 0
  2787  001C5E                     _fputc:
  2788                           	opt callstack 26
  2789                           
  2790                           ;incstack = 0
  2791  001C5E  5003               	movf	fputc@fp,w,c
  2792  001C60  1004               	iorwf	fputc@fp+1,w,c
  2793  001C62  B4D8               	btfsc	status,2,c
  2794  001C64  D004               	goto	u1390
  2795  001C66  5003               	movf	fputc@fp,w,c
  2796  001C68  1004               	iorwf	fputc@fp+1,w,c
  2797  001C6A  A4D8               	btfss	status,2,c
  2798  001C6C  D004               	goto	l1791
  2799  001C6E                     u1390:
  2800  001C6E  5001               	movf	fputc@c,w,c
  2801  001C70  ECA3  F010         	call	_putch
  2802  001C74  0012               	return	
  2803  001C76                     l1791:
  2804  001C76  EE20 F004          	lfsr	2,4
  2805  001C7A  5003               	movf	fputc@fp,w,c
  2806  001C7C  26D9               	addwf	fsr2l,f,c
  2807  001C7E  5004               	movf	fputc@fp+1,w,c
  2808  001C80  22DA               	addwfc	fsr2h,f,c
  2809  001C82  50DE               	movf	postinc2,w,c
  2810  001C84  10DE               	iorwf	postinc2,w,c
  2811  001C86  B4D8               	btfsc	status,2,c
  2812  001C88  D016               	goto	u1410
  2813  001C8A  EE20 F004          	lfsr	2,4
  2814  001C8E  5003               	movf	fputc@fp,w,c
  2815  001C90  26D9               	addwf	fsr2l,f,c
  2816  001C92  5004               	movf	fputc@fp+1,w,c
  2817  001C94  22DA               	addwfc	fsr2h,f,c
  2818  001C96  EE10 F002          	lfsr	1,2
  2819  001C9A  5003               	movf	fputc@fp,w,c
  2820  001C9C  26E1               	addwf	fsr1l,f,c
  2821  001C9E  5004               	movf	fputc@fp+1,w,c
  2822  001CA0  22E2               	addwfc	fsr1h,f,c
  2823  001CA2  50DE               	movf	postinc2,w,c
  2824  001CA4  5CE6               	subwf	postinc1,w,c
  2825  001CA6  50E6               	movf	postinc1,w,c
  2826  001CA8  0A80               	xorlw	128
  2827  001CAA  6E09               	movwf	(??_fputc+4)& (0+255),c
  2828  001CAC  50DE               	movf	postinc2,w,c
  2829  001CAE  0A80               	xorlw	128
  2830  001CB0  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  2831  001CB2  B0D8               	btfsc	status,0,c
  2832  001CB4  0012               	return	
  2833  001CB6                     u1410:
  2834  001CB6  EE20 F002          	lfsr	2,2
  2835  001CBA  5003               	movf	fputc@fp,w,c
  2836  001CBC  26D9               	addwf	fsr2l,f,c
  2837  001CBE  5004               	movf	fputc@fp+1,w,c
  2838  001CC0  22DA               	addwfc	fsr2h,f,c
  2839  001CC2  CFDE F005          	movff	postinc2,??_fputc
  2840  001CC6  CFDD F006          	movff	postdec2,??_fputc+1
  2841  001CCA  C003  FFD9         	movff	fputc@fp,fsr2l
  2842  001CCE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2843  001CD2  CFDE F007          	movff	postinc2,??_fputc+2
  2844  001CD6  CFDD F008          	movff	postdec2,??_fputc+3
  2845  001CDA  5005               	movf	??_fputc,w,c
  2846  001CDC  2407               	addwf	??_fputc+2,w,c
  2847  001CDE  6ED9               	movwf	fsr2l,c
  2848  001CE0  5006               	movf	??_fputc+1,w,c
  2849  001CE2  2008               	addwfc	??_fputc+3,w,c
  2850  001CE4  6EDA               	movwf	fsr2h,c
  2851  001CE6  C001  FFDF         	movff	fputc@c,indf2
  2852  001CEA  EE20 F002          	lfsr	2,2
  2853  001CEE  5003               	movf	fputc@fp,w,c
  2854  001CF0  26D9               	addwf	fsr2l,f,c
  2855  001CF2  5004               	movf	fputc@fp+1,w,c
  2856  001CF4  22DA               	addwfc	fsr2h,f,c
  2857  001CF6  2ADE               	incf	postinc2,f,c
  2858  001CF8  0E00               	movlw	0
  2859  001CFA  22DD               	addwfc	postdec2,f,c
  2860  001CFC  0012               	return		;funcret
  2861  001CFE                     __end_of_fputc:
  2862                           	opt callstack 0
  2863                           
  2864 ;; *************** function _putch *****************
  2865 ;; Defined at:
  2866 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  c               1    wreg     unsigned char 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  c               1    0[COMRAM] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2880 ;;      Params:         0       0       0       0       0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_fputc
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text13
  2894  002146                     __ptext13:
  2895                           	opt callstack 0
  2896  002146                     _putch:
  2897                           	opt callstack 26
  2898                           
  2899                           ;incstack = 0
  2900  002146  0012               	return		;funcret
  2901  002148                     __end_of_putch:
  2902                           	opt callstack 0
  2903                           
  2904 ;; *************** function _servoRotate90 *****************
  2905 ;; Defined at:
  2906 ;;		line 16 in file "servo.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  i               2    1[COMRAM] unsigned int 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0
  2921 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2922 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2923 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2924 ;;Total ram usage:        3 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_main
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text14
  2934  001F56                     __ptext14:
  2935                           	opt callstack 0
  2936  001F56                     _servoRotate90:
  2937                           	opt callstack 30
  2938                           
  2939                           ;servo.c: 17:     unsigned int i;;servo.c: 18:     for (i = 0; i < 50; i++) {
  2940                           
  2941                           ;incstack = 0
  2942  001F56  0E00               	movlw	0
  2943  001F58  6E03               	movwf	servoRotate90@i+1,c
  2944  001F5A  0E00               	movlw	0
  2945  001F5C  6E02               	movwf	servoRotate90@i,c
  2946  001F5E                     l120:
  2947                           
  2948                           ;servo.c: 19:         LATCbits.LATC2 = 1;
  2949  001F5E  848B               	bsf	3979,2,c	;volatile
  2950                           
  2951                           ;servo.c: 20:         _delay((unsigned long)((2200)*(8000000/4000000.0)));
  2952  001F60  0E06               	movlw	6
  2953  001F62  6E01               	movwf	??_servoRotate90& (0+255),c
  2954  001F64  0EB6               	movlw	182
  2955  001F66                     u2757:
  2956  001F66  2EE8               	decfsz	wreg,f,c
  2957  001F68  D7FE               	bra	u2757
  2958  001F6A  2E01               	decfsz	??_servoRotate90& (0+255),f,c
  2959  001F6C  D7FC               	bra	u2757
  2960                           
  2961                           ;servo.c: 21:         LATCbits.LATC2 = 0;
  2962  001F6E  948B               	bcf	3979,2,c	;volatile
  2963                           
  2964                           ;servo.c: 22:         _delay((unsigned long)((17800)*(8000000/4000000.0)));
  2965  001F70  0E2F               	movlw	47
  2966  001F72  6E01               	movwf	??_servoRotate90& (0+255),c
  2967  001F74  0E3A               	movlw	58
  2968  001F76                     u2767:
  2969  001F76  2EE8               	decfsz	wreg,f,c
  2970  001F78  D7FE               	bra	u2767
  2971  001F7A  2E01               	decfsz	??_servoRotate90& (0+255),f,c
  2972  001F7C  D7FC               	bra	u2767
  2973  001F7E  D000               	nop2	
  2974                           
  2975                           ;servo.c: 23:     }
  2976  001F80  4A02               	infsnz	servoRotate90@i,f,c
  2977  001F82  2A03               	incf	servoRotate90@i+1,f,c
  2978  001F84  5003               	movf	servoRotate90@i+1,w,c
  2979  001F86  E105               	bnz	u2010
  2980  001F88  0E32               	movlw	50
  2981  001F8A  5C02               	subwf	servoRotate90@i,w,c
  2982  001F8C  B0D8               	btfsc	status,0,c
  2983  001F8E  0012               	return	
  2984  001F90  D7E6               	goto	l120
  2985  001F92                     u2010:
  2986  001F92  0012               	return		;funcret
  2987  001F94                     __end_of_servoRotate90:
  2988                           	opt callstack 0
  2989                           
  2990 ;; *************** function _servoRotate0 *****************
  2991 ;; Defined at:
  2992 ;;		line 6 in file "servo.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;  i               2    1[COMRAM] unsigned int 
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, status,2, status,0
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3006 ;;      Params:         0       0       0       0       0       0       0       0       0
  3007 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3008 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3009 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3010 ;;Total ram usage:        3 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text15
  3020  001F94                     __ptext15:
  3021                           	opt callstack 0
  3022  001F94                     _servoRotate0:
  3023                           	opt callstack 30
  3024                           
  3025                           ;servo.c: 7:     unsigned int i;;servo.c: 8:     for (i = 0; i < 50; i++) {
  3026                           
  3027                           ;incstack = 0
  3028  001F94  0E00               	movlw	0
  3029  001F96  6E03               	movwf	servoRotate0@i+1,c
  3030  001F98  0E00               	movlw	0
  3031  001F9A  6E02               	movwf	servoRotate0@i,c
  3032  001F9C                     l115:
  3033                           
  3034                           ;servo.c: 9:         LATCbits.LATC2 = 1;
  3035  001F9C  848B               	bsf	3979,2,c	;volatile
  3036                           
  3037                           ;servo.c: 10:         _delay((unsigned long)((1500)*(8000000/4000000.0)));
  3038  001F9E  0E04               	movlw	4
  3039  001FA0  6E01               	movwf	??_servoRotate0& (0+255),c
  3040  001FA2  0EE4               	movlw	228
  3041  001FA4                     u2777:
  3042  001FA4  2EE8               	decfsz	wreg,f,c
  3043  001FA6  D7FE               	bra	u2777
  3044  001FA8  2E01               	decfsz	??_servoRotate0& (0+255),f,c
  3045  001FAA  D7FC               	bra	u2777
  3046  001FAC  D000               	nop2	
  3047                           
  3048                           ;servo.c: 11:         LATCbits.LATC2 = 0;
  3049  001FAE  948B               	bcf	3979,2,c	;volatile
  3050                           
  3051                           ;servo.c: 12:         _delay((unsigned long)((18500)*(8000000/4000000.0)));
  3052  001FB0  0E31               	movlw	49
  3053  001FB2  6E01               	movwf	??_servoRotate0& (0+255),c
  3054  001FB4  0E0C               	movlw	12
  3055  001FB6                     u2787:
  3056  001FB6  2EE8               	decfsz	wreg,f,c
  3057  001FB8  D7FE               	bra	u2787
  3058  001FBA  2E01               	decfsz	??_servoRotate0& (0+255),f,c
  3059  001FBC  D7FC               	bra	u2787
  3060                           
  3061                           ;servo.c: 13:     }
  3062  001FBE  4A02               	infsnz	servoRotate0@i,f,c
  3063  001FC0  2A03               	incf	servoRotate0@i+1,f,c
  3064  001FC2  5003               	movf	servoRotate0@i+1,w,c
  3065  001FC4  E105               	bnz	u2000
  3066  001FC6  0E32               	movlw	50
  3067  001FC8  5C02               	subwf	servoRotate0@i,w,c
  3068  001FCA  B0D8               	btfsc	status,0,c
  3069  001FCC  0012               	return	
  3070  001FCE  D7E6               	goto	l115
  3071  001FD0                     u2000:
  3072  001FD0  0012               	return		;funcret
  3073  001FD2                     __end_of_servoRotate0:
  3074                           	opt callstack 0
  3075                           
  3076 ;; *************** function _memset *****************
  3077 ;; Defined at:
  3078 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  dest            2    0[COMRAM] PTR void 
  3081 ;;		 -> main@Soil(10), main@Temperature(10), 
  3082 ;;  c               2    2[COMRAM] int 
  3083 ;;  n               2    4[COMRAM] unsigned int 
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;  s               2   10[COMRAM] PTR unsigned char 
  3086 ;;		 -> main@Soil(10), main@Temperature(10), 
  3087 ;;  k               2    8[COMRAM] unsigned int 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  2    0[COMRAM] PTR void 
  3090 ;; Registers used:
  3091 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3097 ;;      Params:         6       0       0       0       0       0       0       0       0
  3098 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3099 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3100 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3101 ;;Total ram usage:       12 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text16
  3111  00187E                     __ptext16:
  3112                           	opt callstack 0
  3113  00187E                     _memset:
  3114                           	opt callstack 30
  3115                           
  3116                           ;incstack = 0
  3117  00187E  C001  F00B         	movff	memset@dest,memset@s
  3118  001882  C002  F00C         	movff	memset@dest+1,memset@s+1
  3119  001886  5005               	movf	memset@n,w,c
  3120  001888  1006               	iorwf	memset@n+1,w,c
  3121  00188A  B4D8               	btfsc	status,2,c
  3122  00188C  0012               	return	
  3123  00188E  C00B  FFD9         	movff	memset@s,fsr2l
  3124  001892  C00C  FFDA         	movff	memset@s+1,fsr2h
  3125  001896  C003  FFDF         	movff	memset@c,indf2
  3126  00189A  5005               	movf	memset@n,w,c
  3127  00189C  240B               	addwf	memset@s,w,c
  3128  00189E  6E07               	movwf	??_memset& (0+255),c
  3129  0018A0  5006               	movf	memset@n+1,w,c
  3130  0018A2  200C               	addwfc	memset@s+1,w,c
  3131  0018A4  6E08               	movwf	(??_memset+1)& (0+255),c
  3132  0018A6  0EFF               	movlw	255
  3133  0018A8  2407               	addwf	??_memset,w,c
  3134  0018AA  6ED9               	movwf	fsr2l,c
  3135  0018AC  0EFF               	movlw	255
  3136  0018AE  2008               	addwfc	??_memset+1,w,c
  3137  0018B0  6EDA               	movwf	fsr2h,c
  3138  0018B2  C003  FFDF         	movff	memset@c,indf2
  3139  0018B6  5006               	movf	memset@n+1,w,c
  3140  0018B8  E104               	bnz	l2153
  3141  0018BA  0E03               	movlw	3
  3142  0018BC  5C05               	subwf	memset@n,w,c
  3143  0018BE  A0D8               	btfss	status,0,c
  3144  0018C0  0012               	return	
  3145  0018C2                     l2153:
  3146  0018C2  EE20 F001          	lfsr	2,1
  3147  0018C6  500B               	movf	memset@s,w,c
  3148  0018C8  26D9               	addwf	fsr2l,f,c
  3149  0018CA  500C               	movf	memset@s+1,w,c
  3150  0018CC  22DA               	addwfc	fsr2h,f,c
  3151  0018CE  C003  FFDF         	movff	memset@c,indf2
  3152  0018D2  EE20 F002          	lfsr	2,2
  3153  0018D6  500B               	movf	memset@s,w,c
  3154  0018D8  26D9               	addwf	fsr2l,f,c
  3155  0018DA  500C               	movf	memset@s+1,w,c
  3156  0018DC  22DA               	addwfc	fsr2h,f,c
  3157  0018DE  C003  FFDF         	movff	memset@c,indf2
  3158  0018E2  5005               	movf	memset@n,w,c
  3159  0018E4  240B               	addwf	memset@s,w,c
  3160  0018E6  6E07               	movwf	??_memset& (0+255),c
  3161  0018E8  5006               	movf	memset@n+1,w,c
  3162  0018EA  200C               	addwfc	memset@s+1,w,c
  3163  0018EC  6E08               	movwf	(??_memset+1)& (0+255),c
  3164  0018EE  0EFE               	movlw	254
  3165  0018F0  2407               	addwf	??_memset,w,c
  3166  0018F2  6ED9               	movwf	fsr2l,c
  3167  0018F4  0EFF               	movlw	255
  3168  0018F6  2008               	addwfc	??_memset+1,w,c
  3169  0018F8  6EDA               	movwf	fsr2h,c
  3170  0018FA  C003  FFDF         	movff	memset@c,indf2
  3171  0018FE  5005               	movf	memset@n,w,c
  3172  001900  240B               	addwf	memset@s,w,c
  3173  001902  6E07               	movwf	??_memset& (0+255),c
  3174  001904  5006               	movf	memset@n+1,w,c
  3175  001906  200C               	addwfc	memset@s+1,w,c
  3176  001908  6E08               	movwf	(??_memset+1)& (0+255),c
  3177  00190A  0EFD               	movlw	253
  3178  00190C  2407               	addwf	??_memset,w,c
  3179  00190E  6ED9               	movwf	fsr2l,c
  3180  001910  0EFF               	movlw	255
  3181  001912  2008               	addwfc	??_memset+1,w,c
  3182  001914  6EDA               	movwf	fsr2h,c
  3183  001916  C003  FFDF         	movff	memset@c,indf2
  3184  00191A  5006               	movf	memset@n+1,w,c
  3185  00191C  E104               	bnz	l2159
  3186  00191E  0E07               	movlw	7
  3187  001920  5C05               	subwf	memset@n,w,c
  3188  001922  A0D8               	btfss	status,0,c
  3189  001924  0012               	return	
  3190  001926                     l2159:
  3191  001926  EE20 F003          	lfsr	2,3
  3192  00192A  500B               	movf	memset@s,w,c
  3193  00192C  26D9               	addwf	fsr2l,f,c
  3194  00192E  500C               	movf	memset@s+1,w,c
  3195  001930  22DA               	addwfc	fsr2h,f,c
  3196  001932  C003  FFDF         	movff	memset@c,indf2
  3197  001936  5005               	movf	memset@n,w,c
  3198  001938  240B               	addwf	memset@s,w,c
  3199  00193A  6E07               	movwf	??_memset& (0+255),c
  3200  00193C  5006               	movf	memset@n+1,w,c
  3201  00193E  200C               	addwfc	memset@s+1,w,c
  3202  001940  6E08               	movwf	(??_memset+1)& (0+255),c
  3203  001942  0EFC               	movlw	252
  3204  001944  2407               	addwf	??_memset,w,c
  3205  001946  6ED9               	movwf	fsr2l,c
  3206  001948  0EFF               	movlw	255
  3207  00194A  2008               	addwfc	??_memset+1,w,c
  3208  00194C  6EDA               	movwf	fsr2h,c
  3209  00194E  C003  FFDF         	movff	memset@c,indf2
  3210  001952  5006               	movf	memset@n+1,w,c
  3211  001954  E104               	bnz	l2165
  3212  001956  0E09               	movlw	9
  3213  001958  5C05               	subwf	memset@n,w,c
  3214  00195A  A0D8               	btfss	status,0,c
  3215  00195C  0012               	return	
  3216  00195E                     l2165:
  3217  00195E  C00B  F007         	movff	memset@s,??_memset
  3218  001962  C00C  F008         	movff	memset@s+1,??_memset+1
  3219  001966  1E07               	comf	??_memset,f,c
  3220  001968  1E08               	comf	??_memset+1,f,c
  3221  00196A  4A07               	infsnz	??_memset,f,c
  3222  00196C  2A08               	incf	??_memset+1,f,c
  3223  00196E  0E03               	movlw	3
  3224  001970  1407               	andwf	??_memset,w,c
  3225  001972  6E09               	movwf	memset@k,c
  3226  001974  6A0A               	clrf	memset@k+1,c
  3227  001976  5009               	movf	memset@k,w,c
  3228  001978  260B               	addwf	memset@s,f,c
  3229  00197A  500A               	movf	memset@k+1,w,c
  3230  00197C  220C               	addwfc	memset@s+1,f,c
  3231  00197E  5009               	movf	memset@k,w,c
  3232  001980  5E05               	subwf	memset@n,f,c
  3233  001982  500A               	movf	memset@k+1,w,c
  3234  001984  5A06               	subwfb	memset@n+1,f,c
  3235  001986  0EFC               	movlw	252
  3236  001988  1605               	andwf	memset@n,f,c
  3237  00198A  0EFF               	movlw	255
  3238  00198C  1606               	andwf	memset@n+1,f,c
  3239  00198E  D00B               	goto	l2173
  3240  001990                     l2167:
  3241  001990  C00B  FFD9         	movff	memset@s,fsr2l
  3242  001994  C00C  FFDA         	movff	memset@s+1,fsr2h
  3243  001998  C003  FFDF         	movff	memset@c,indf2
  3244  00199C  0605               	decf	memset@n,f,c
  3245  00199E  A0D8               	btfss	status,0,c
  3246  0019A0  0606               	decf	memset@n+1,f,c
  3247  0019A2  4A0B               	infsnz	memset@s,f,c
  3248  0019A4  2A0C               	incf	memset@s+1,f,c
  3249  0019A6                     l2173:
  3250  0019A6  5005               	movf	memset@n,w,c
  3251  0019A8  1006               	iorwf	memset@n+1,w,c
  3252  0019AA  B4D8               	btfsc	status,2,c
  3253  0019AC  0012               	return	
  3254  0019AE  D7F0               	goto	l2167
  3255  0019B0                     __end_of_memset:
  3256                           	opt callstack 0
  3257                           
  3258 ;; *************** function ___xxtofl *****************
  3259 ;; Defined at:
  3260 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  sign            1    wreg     unsigned char 
  3263 ;;  val             4    8[COMRAM] long 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  sign            1   16[COMRAM] unsigned char 
  3266 ;;  arg             4   18[COMRAM] unsigned long 
  3267 ;;  exp             1   17[COMRAM] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  4    8[COMRAM] unsigned char 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3277 ;;      Params:         4       0       0       0       0       0       0       0       0
  3278 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3279 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3280 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3281 ;;Total ram usage:       14 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text17
  3291  00173E                     __ptext17:
  3292                           	opt callstack 0
  3293  00173E                     ___xxtofl:
  3294                           	opt callstack 30
  3295                           
  3296                           ;incstack = 0
  3297                           ;___xxtofl@sign stored from wreg
  3298  00173E  6E11               	movwf	___xxtofl@sign,c
  3299  001740  5011               	movf	___xxtofl@sign,w,c
  3300  001742  A4D8               	btfss	status,2,c
  3301  001744  AE0C               	btfss	___xxtofl@val+3,7,c
  3302  001746  D01A               	goto	l860
  3303  001748  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  3304  00174C  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  3305  001750  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  3306  001754  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  3307  001758  1E0D               	comf	??___xxtofl,f,c
  3308  00175A  1E0E               	comf	??___xxtofl+1,f,c
  3309  00175C  1E0F               	comf	??___xxtofl+2,f,c
  3310  00175E  1E10               	comf	??___xxtofl+3,f,c
  3311  001760  2A0D               	incf	??___xxtofl,f,c
  3312  001762  0E00               	movlw	0
  3313  001764  220E               	addwfc	??___xxtofl+1,f,c
  3314  001766  220F               	addwfc	??___xxtofl+2,f,c
  3315  001768  2210               	addwfc	??___xxtofl+3,f,c
  3316  00176A  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  3317  00176E  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  3318  001772  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  3319  001776  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  3320  00177A  D008               	goto	l2539
  3321  00177C                     l860:
  3322  00177C  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  3323  001780  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3324  001784  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3325  001788  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3326  00178C                     l2539:
  3327  00178C  5009               	movf	___xxtofl@val,w,c
  3328  00178E  100A               	iorwf	___xxtofl@val+1,w,c
  3329  001790  100B               	iorwf	___xxtofl@val+2,w,c
  3330  001792  100C               	iorwf	___xxtofl@val+3,w,c
  3331  001794  A4D8               	btfss	status,2,c
  3332  001796  D009               	goto	l2545
  3333  001798  0E00               	movlw	0
  3334  00179A  6E09               	movwf	?___xxtofl,c
  3335  00179C  0E00               	movlw	0
  3336  00179E  6E0A               	movwf	?___xxtofl+1,c
  3337  0017A0  0E00               	movlw	0
  3338  0017A2  6E0B               	movwf	?___xxtofl+2,c
  3339  0017A4  0E00               	movlw	0
  3340  0017A6  6E0C               	movwf	?___xxtofl+3,c
  3341  0017A8  0012               	return	
  3342  0017AA                     l2545:
  3343  0017AA  0E96               	movlw	150
  3344  0017AC  6E12               	movwf	___xxtofl@exp,c
  3345  0017AE  D006               	goto	l2549
  3346  0017B0                     l2547:
  3347  0017B0  2A12               	incf	___xxtofl@exp,f,c
  3348  0017B2  90D8               	bcf	status,0,c
  3349  0017B4  3216               	rrcf	___xxtofl@arg+3,f,c
  3350  0017B6  3215               	rrcf	___xxtofl@arg+2,f,c
  3351  0017B8  3214               	rrcf	___xxtofl@arg+1,f,c
  3352  0017BA  3213               	rrcf	___xxtofl@arg,f,c
  3353  0017BC                     l2549:
  3354  0017BC  0E00               	movlw	0
  3355  0017BE  1413               	andwf	___xxtofl@arg,w,c
  3356  0017C0  6E0D               	movwf	??___xxtofl& (0+255),c
  3357  0017C2  0E00               	movlw	0
  3358  0017C4  1414               	andwf	___xxtofl@arg+1,w,c
  3359  0017C6  6E0E               	movwf	(??___xxtofl+1)& (0+255),c
  3360  0017C8  0E00               	movlw	0
  3361  0017CA  1415               	andwf	___xxtofl@arg+2,w,c
  3362  0017CC  6E0F               	movwf	(??___xxtofl+2)& (0+255),c
  3363  0017CE  0EFE               	movlw	254
  3364  0017D0  1416               	andwf	___xxtofl@arg+3,w,c
  3365  0017D2  6E10               	movwf	(??___xxtofl+3)& (0+255),c
  3366  0017D4  500D               	movf	??___xxtofl,w,c
  3367  0017D6  100E               	iorwf	??___xxtofl+1,w,c
  3368  0017D8  100F               	iorwf	??___xxtofl+2,w,c
  3369  0017DA  1010               	iorwf	??___xxtofl+3,w,c
  3370  0017DC  B4D8               	btfsc	status,2,c
  3371  0017DE  D00D               	goto	l867
  3372  0017E0  D7E7               	goto	l2547
  3373  0017E2                     l2551:
  3374  0017E2  2A12               	incf	___xxtofl@exp,f,c
  3375  0017E4  0E01               	movlw	1
  3376  0017E6  2613               	addwf	___xxtofl@arg,f,c
  3377  0017E8  0E00               	movlw	0
  3378  0017EA  2214               	addwfc	___xxtofl@arg+1,f,c
  3379  0017EC  2215               	addwfc	___xxtofl@arg+2,f,c
  3380  0017EE  2216               	addwfc	___xxtofl@arg+3,f,c
  3381  0017F0  90D8               	bcf	status,0,c
  3382  0017F2  3216               	rrcf	___xxtofl@arg+3,f,c
  3383  0017F4  3215               	rrcf	___xxtofl@arg+2,f,c
  3384  0017F6  3214               	rrcf	___xxtofl@arg+1,f,c
  3385  0017F8  3213               	rrcf	___xxtofl@arg,f,c
  3386  0017FA                     l867:
  3387  0017FA  0E00               	movlw	0
  3388  0017FC  1413               	andwf	___xxtofl@arg,w,c
  3389  0017FE  6E0D               	movwf	??___xxtofl& (0+255),c
  3390  001800  0E00               	movlw	0
  3391  001802  1414               	andwf	___xxtofl@arg+1,w,c
  3392  001804  6E0E               	movwf	(??___xxtofl+1)& (0+255),c
  3393  001806  0E00               	movlw	0
  3394  001808  1415               	andwf	___xxtofl@arg+2,w,c
  3395  00180A  6E0F               	movwf	(??___xxtofl+2)& (0+255),c
  3396  00180C  0EFF               	movlw	255
  3397  00180E  1416               	andwf	___xxtofl@arg+3,w,c
  3398  001810  6E10               	movwf	(??___xxtofl+3)& (0+255),c
  3399  001812  500D               	movf	??___xxtofl,w,c
  3400  001814  100E               	iorwf	??___xxtofl+1,w,c
  3401  001816  100F               	iorwf	??___xxtofl+2,w,c
  3402  001818  1010               	iorwf	??___xxtofl+3,w,c
  3403  00181A  B4D8               	btfsc	status,2,c
  3404  00181C  D007               	goto	l2559
  3405  00181E  D7E1               	goto	l2551
  3406  001820                     l2557:
  3407  001820  0612               	decf	___xxtofl@exp,f,c
  3408  001822  90D8               	bcf	status,0,c
  3409  001824  3613               	rlcf	___xxtofl@arg,f,c
  3410  001826  3614               	rlcf	___xxtofl@arg+1,f,c
  3411  001828  3615               	rlcf	___xxtofl@arg+2,f,c
  3412  00182A  3616               	rlcf	___xxtofl@arg+3,f,c
  3413  00182C                     l2559:
  3414  00182C  BE15               	btfsc	___xxtofl@arg+2,7,c
  3415  00182E  D003               	goto	u2620
  3416  001830  0E02               	movlw	2
  3417  001832  6012               	cpfslt	___xxtofl@exp,c
  3418  001834  D7F5               	goto	l2557
  3419  001836                     u2620:
  3420  001836  A012               	btfss	___xxtofl@exp,0,c
  3421  001838  9E15               	bcf	___xxtofl@arg+2,7,c
  3422  00183A  90D8               	bcf	status,0,c
  3423  00183C  3212               	rrcf	___xxtofl@exp,f,c
  3424  00183E  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  3425  001842  6A0E               	clrf	(??___xxtofl+1)& (0+255),c
  3426  001844  6A0F               	clrf	(??___xxtofl+2)& (0+255),c
  3427  001846  6A10               	clrf	(??___xxtofl+3)& (0+255),c
  3428  001848  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  3429  00184C  6A0F               	clrf	??___xxtofl+2,c
  3430  00184E  6A0E               	clrf	??___xxtofl+1,c
  3431  001850  6A0D               	clrf	??___xxtofl,c
  3432  001852  500D               	movf	??___xxtofl,w,c
  3433  001854  1213               	iorwf	___xxtofl@arg,f,c
  3434  001856  500E               	movf	??___xxtofl+1,w,c
  3435  001858  1214               	iorwf	___xxtofl@arg+1,f,c
  3436  00185A  500F               	movf	??___xxtofl+2,w,c
  3437  00185C  1215               	iorwf	___xxtofl@arg+2,f,c
  3438  00185E  5010               	movf	??___xxtofl+3,w,c
  3439  001860  1216               	iorwf	___xxtofl@arg+3,f,c
  3440  001862  5011               	movf	___xxtofl@sign,w,c
  3441  001864  A4D8               	btfss	status,2,c
  3442  001866  AE0C               	btfss	___xxtofl@val+3,7,c
  3443  001868  D001               	goto	l2575
  3444  00186A  8E16               	bsf	___xxtofl@arg+3,7,c
  3445  00186C                     l2575:
  3446  00186C  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  3447  001870  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  3448  001874  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  3449  001878  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  3450  00187C  0012               	return		;funcret
  3451  00187E                     __end_of___xxtofl:
  3452                           	opt callstack 0
  3453                           
  3454 ;; *************** function ___fltol *****************
  3455 ;; Defined at:
  3456 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  f1              4    0[COMRAM] unsigned char 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  exp1            1    9[COMRAM] unsigned char 
  3461 ;;  sign1           1    8[COMRAM] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  4    0[COMRAM] long 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3471 ;;      Params:         4       0       0       0       0       0       0       0       0
  3472 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3473 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3474 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3475 ;;Total ram usage:       10 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; This function calls:
  3478 ;;		Nothing
  3479 ;; This function is called by:
  3480 ;;		_main
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text18
  3485  001BA4                     __ptext18:
  3486                           	opt callstack 0
  3487  001BA4                     ___fltol:
  3488                           	opt callstack 30
  3489                           
  3490                           ;incstack = 0
  3491  001BA4  3403               	rlcf	___fltol@f1+2,w,c
  3492  001BA6  3404               	rlcf	___fltol@f1+3,w,c
  3493  001BA8  6E0A               	movwf	___fltol@exp1,c
  3494  001BAA  500A               	movf	___fltol@exp1,w,c
  3495  001BAC  A4D8               	btfss	status,2,c
  3496  001BAE  D009               	goto	l2495
  3497  001BB0                     u2490:
  3498  001BB0  0E00               	movlw	0
  3499  001BB2  6E01               	movwf	?___fltol,c
  3500  001BB4  0E00               	movlw	0
  3501  001BB6  6E02               	movwf	?___fltol+1,c
  3502  001BB8  0E00               	movlw	0
  3503  001BBA  6E03               	movwf	?___fltol+2,c
  3504  001BBC  0E00               	movlw	0
  3505  001BBE  6E04               	movwf	?___fltol+3,c
  3506  001BC0  0012               	return	
  3507  001BC2                     l2495:
  3508  001BC2  C001  F005         	movff	___fltol@f1,??___fltol
  3509  001BC6  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3510  001BCA  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3511  001BCE  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3512  001BD2  0E20               	movlw	32
  3513  001BD4  D005               	goto	u2500
  3514  001BD6                     u2505:
  3515  001BD6  90D8               	bcf	status,0,c
  3516  001BD8  3208               	rrcf	??___fltol+3,f,c
  3517  001BDA  3207               	rrcf	??___fltol+2,f,c
  3518  001BDC  3206               	rrcf	??___fltol+1,f,c
  3519  001BDE  3205               	rrcf	??___fltol,f,c
  3520  001BE0                     u2500:
  3521  001BE0  2EE8               	decfsz	wreg,f,c
  3522  001BE2  D7F9               	goto	u2505
  3523  001BE4  5005               	movf	??___fltol,w,c
  3524  001BE6  6E09               	movwf	___fltol@sign1,c
  3525  001BE8  8E03               	bsf	___fltol@f1+2,7,c
  3526  001BEA  0EFF               	movlw	255
  3527  001BEC  1601               	andwf	___fltol@f1,f,c
  3528  001BEE  0EFF               	movlw	255
  3529  001BF0  1602               	andwf	___fltol@f1+1,f,c
  3530  001BF2  0EFF               	movlw	255
  3531  001BF4  1603               	andwf	___fltol@f1+2,f,c
  3532  001BF6  0E00               	movlw	0
  3533  001BF8  1604               	andwf	___fltol@f1+3,f,c
  3534  001BFA  0E96               	movlw	150
  3535  001BFC  5E0A               	subwf	___fltol@exp1,f,c
  3536  001BFE  AE0A               	btfss	___fltol@exp1,7,c
  3537  001C00  D00D               	goto	l2515
  3538  001C02  500A               	movf	___fltol@exp1,w,c
  3539  001C04  0A80               	xorlw	128
  3540  001C06  0F97               	addlw	151
  3541  001C08  A0D8               	btfss	status,0,c
  3542  001C0A  D7D2               	goto	u2490
  3543  001C0C                     l2511:
  3544  001C0C  90D8               	bcf	status,0,c
  3545  001C0E  3204               	rrcf	___fltol@f1+3,f,c
  3546  001C10  3203               	rrcf	___fltol@f1+2,f,c
  3547  001C12  3202               	rrcf	___fltol@f1+1,f,c
  3548  001C14  3201               	rrcf	___fltol@f1,f,c
  3549  001C16  3E0A               	incfsz	___fltol@exp1,f,c
  3550  001C18  D7F9               	goto	l2511
  3551  001C1A  D00D               	goto	u2540
  3552  001C1C                     l2515:
  3553  001C1C  0E1F               	movlw	31
  3554  001C1E  640A               	cpfsgt	___fltol@exp1,c
  3555  001C20  D007               	goto	l2523
  3556  001C22  D7C6               	goto	u2490
  3557  001C24                     l2521:
  3558  001C24  90D8               	bcf	status,0,c
  3559  001C26  3601               	rlcf	___fltol@f1,f,c
  3560  001C28  3602               	rlcf	___fltol@f1+1,f,c
  3561  001C2A  3603               	rlcf	___fltol@f1+2,f,c
  3562  001C2C  3604               	rlcf	___fltol@f1+3,f,c
  3563  001C2E  060A               	decf	___fltol@exp1,f,c
  3564  001C30                     l2523:
  3565  001C30  500A               	movf	___fltol@exp1,w,c
  3566  001C32  A4D8               	btfss	status,2,c
  3567  001C34  D7F7               	goto	l2521
  3568  001C36                     u2540:
  3569  001C36  5009               	movf	___fltol@sign1,w,c
  3570  001C38  B4D8               	btfsc	status,2,c
  3571  001C3A  D008               	goto	l2529
  3572  001C3C  1E04               	comf	___fltol@f1+3,f,c
  3573  001C3E  1E03               	comf	___fltol@f1+2,f,c
  3574  001C40  1E02               	comf	___fltol@f1+1,f,c
  3575  001C42  6C01               	negf	___fltol@f1,c
  3576  001C44  0E00               	movlw	0
  3577  001C46  2202               	addwfc	___fltol@f1+1,f,c
  3578  001C48  2203               	addwfc	___fltol@f1+2,f,c
  3579  001C4A  2204               	addwfc	___fltol@f1+3,f,c
  3580  001C4C                     l2529:
  3581  001C4C  C001  F001         	movff	___fltol@f1,?___fltol
  3582  001C50  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3583  001C54  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3584  001C58  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3585  001C5C  0012               	return		;funcret
  3586  001C5E                     __end_of___fltol:
  3587                           	opt callstack 0
  3588                           
  3589 ;; *************** function ___flmul *****************
  3590 ;; Defined at:
  3591 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  b               4   22[COMRAM] long 
  3594 ;;  a               4   26[COMRAM] long 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  prod            4   41[COMRAM] struct .
  3597 ;;  grs             4   35[COMRAM] unsigned long 
  3598 ;;  temp            2   45[COMRAM] struct .
  3599 ;;  bexp            1   40[COMRAM] unsigned char 
  3600 ;;  aexp            1   39[COMRAM] unsigned char 
  3601 ;;  sign            1   34[COMRAM] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  4   22[COMRAM] unsigned char 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, prodl, prodh
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3611 ;;      Params:         8       0       0       0       0       0       0       0       0
  3612 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3613 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3614 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3615 ;;Total ram usage:       25 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_main
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text19
  3625  000BF4                     __ptext19:
  3626                           	opt callstack 0
  3627  000BF4                     ___flmul:
  3628                           	opt callstack 30
  3629                           
  3630                           ;incstack = 0
  3631  000BF4  501A               	movf	___flmul@b+3,w,c
  3632  000BF6  0B80               	andlw	128
  3633  000BF8  6E23               	movwf	___flmul@sign,c
  3634  000BFA  501A               	movf	___flmul@b+3,w,c
  3635  000BFC  241A               	addwf	___flmul@b+3,w,c
  3636  000BFE  6E29               	movwf	___flmul@bexp,c
  3637  000C00  BE19               	btfsc	___flmul@b+2,7,c
  3638  000C02  8029               	bsf	___flmul@bexp,0,c
  3639  000C04  5029               	movf	___flmul@bexp,w,c
  3640  000C06  B4D8               	btfsc	status,2,c
  3641  000C08  D00D               	goto	l2351
  3642  000C0A  2829               	incf	___flmul@bexp,w,c
  3643  000C0C  A4D8               	btfss	status,2,c
  3644  000C0E  D008               	goto	l2349
  3645  000C10  0E00               	movlw	0
  3646  000C12  6E17               	movwf	___flmul@b,c
  3647  000C14  0E00               	movlw	0
  3648  000C16  6E18               	movwf	___flmul@b+1,c
  3649  000C18  0E00               	movlw	0
  3650  000C1A  6E19               	movwf	___flmul@b+2,c
  3651  000C1C  0E00               	movlw	0
  3652  000C1E  6E1A               	movwf	___flmul@b+3,c
  3653  000C20                     l2349:
  3654  000C20  8E19               	bsf	___flmul@b+2,7,c
  3655  000C22  D008               	goto	l2353
  3656  000C24                     l2351:
  3657  000C24  0E00               	movlw	0
  3658  000C26  6E17               	movwf	___flmul@b,c
  3659  000C28  0E00               	movlw	0
  3660  000C2A  6E18               	movwf	___flmul@b+1,c
  3661  000C2C  0E00               	movlw	0
  3662  000C2E  6E19               	movwf	___flmul@b+2,c
  3663  000C30  0E00               	movlw	0
  3664  000C32  6E1A               	movwf	___flmul@b+3,c
  3665  000C34                     l2353:
  3666  000C34  501E               	movf	___flmul@a+3,w,c
  3667  000C36  0B80               	andlw	128
  3668  000C38  1A23               	xorwf	___flmul@sign,f,c
  3669  000C3A  501E               	movf	___flmul@a+3,w,c
  3670  000C3C  241E               	addwf	___flmul@a+3,w,c
  3671  000C3E  6E28               	movwf	___flmul@aexp,c
  3672  000C40  BE1D               	btfsc	___flmul@a+2,7,c
  3673  000C42  8028               	bsf	___flmul@aexp,0,c
  3674  000C44  5028               	movf	___flmul@aexp,w,c
  3675  000C46  B4D8               	btfsc	status,2,c
  3676  000C48  D00D               	goto	l2369
  3677  000C4A  2828               	incf	___flmul@aexp,w,c
  3678  000C4C  A4D8               	btfss	status,2,c
  3679  000C4E  D008               	goto	l2367
  3680  000C50  0E00               	movlw	0
  3681  000C52  6E1B               	movwf	___flmul@a,c
  3682  000C54  0E00               	movlw	0
  3683  000C56  6E1C               	movwf	___flmul@a+1,c
  3684  000C58  0E00               	movlw	0
  3685  000C5A  6E1D               	movwf	___flmul@a+2,c
  3686  000C5C  0E00               	movlw	0
  3687  000C5E  6E1E               	movwf	___flmul@a+3,c
  3688  000C60                     l2367:
  3689  000C60  8E1D               	bsf	___flmul@a+2,7,c
  3690  000C62  D008               	goto	l819
  3691  000C64                     l2369:
  3692  000C64  0E00               	movlw	0
  3693  000C66  6E1B               	movwf	___flmul@a,c
  3694  000C68  0E00               	movlw	0
  3695  000C6A  6E1C               	movwf	___flmul@a+1,c
  3696  000C6C  0E00               	movlw	0
  3697  000C6E  6E1D               	movwf	___flmul@a+2,c
  3698  000C70  0E00               	movlw	0
  3699  000C72  6E1E               	movwf	___flmul@a+3,c
  3700  000C74                     l819:
  3701  000C74  5028               	movf	___flmul@aexp,w,c
  3702  000C76  B4D8               	btfsc	status,2,c
  3703  000C78  D003               	goto	u2320
  3704  000C7A  5029               	movf	___flmul@bexp,w,c
  3705  000C7C  A4D8               	btfss	status,2,c
  3706  000C7E  D009               	goto	l2377
  3707  000C80                     u2320:
  3708  000C80  0E00               	movlw	0
  3709  000C82  6E17               	movwf	?___flmul,c
  3710  000C84  0E00               	movlw	0
  3711  000C86  6E18               	movwf	?___flmul+1,c
  3712  000C88  0E00               	movlw	0
  3713  000C8A  6E19               	movwf	?___flmul+2,c
  3714  000C8C  0E00               	movlw	0
  3715  000C8E  6E1A               	movwf	?___flmul+3,c
  3716  000C90  0012               	return	
  3717  000C92                     l2377:
  3718  000C92  501D               	movf	___flmul@a+2,w,c
  3719  000C94  0217               	mulwf	___flmul@b,c
  3720  000C96  CFF3 F02E          	movff	prodl,___flmul@temp
  3721  000C9A  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3722  000C9E  502E               	movf	___flmul@temp,w,c
  3723  000CA0  6E24               	movwf	___flmul@grs,c
  3724  000CA2  6A25               	clrf	___flmul@grs+1,c
  3725  000CA4  6A26               	clrf	___flmul@grs+2,c
  3726  000CA6  6A27               	clrf	___flmul@grs+3,c
  3727  000CA8  502F               	movf	___flmul@temp+1,w,c
  3728  000CAA  6E2A               	movwf	___flmul@prod,c
  3729  000CAC  6A2B               	clrf	___flmul@prod+1,c
  3730  000CAE  6A2C               	clrf	___flmul@prod+2,c
  3731  000CB0  6A2D               	clrf	___flmul@prod+3,c
  3732  000CB2  501C               	movf	___flmul@a+1,w,c
  3733  000CB4  0218               	mulwf	___flmul@b+1,c
  3734  000CB6  CFF3 F02E          	movff	prodl,___flmul@temp
  3735  000CBA  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3736  000CBE  502E               	movf	___flmul@temp,w,c
  3737  000CC0  2624               	addwf	___flmul@grs,f,c
  3738  000CC2  0E00               	movlw	0
  3739  000CC4  2225               	addwfc	___flmul@grs+1,f,c
  3740  000CC6  2226               	addwfc	___flmul@grs+2,f,c
  3741  000CC8  2227               	addwfc	___flmul@grs+3,f,c
  3742  000CCA  502F               	movf	___flmul@temp+1,w,c
  3743  000CCC  262A               	addwf	___flmul@prod,f,c
  3744  000CCE  0E00               	movlw	0
  3745  000CD0  222B               	addwfc	___flmul@prod+1,f,c
  3746  000CD2  222C               	addwfc	___flmul@prod+2,f,c
  3747  000CD4  222D               	addwfc	___flmul@prod+3,f,c
  3748  000CD6  501B               	movf	___flmul@a,w,c
  3749  000CD8  0219               	mulwf	___flmul@b+2,c
  3750  000CDA  CFF3 F02E          	movff	prodl,___flmul@temp
  3751  000CDE  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3752  000CE2  502E               	movf	___flmul@temp,w,c
  3753  000CE4  2624               	addwf	___flmul@grs,f,c
  3754  000CE6  0E00               	movlw	0
  3755  000CE8  2225               	addwfc	___flmul@grs+1,f,c
  3756  000CEA  2226               	addwfc	___flmul@grs+2,f,c
  3757  000CEC  2227               	addwfc	___flmul@grs+3,f,c
  3758  000CEE  502F               	movf	___flmul@temp+1,w,c
  3759  000CF0  262A               	addwf	___flmul@prod,f,c
  3760  000CF2  0E00               	movlw	0
  3761  000CF4  222B               	addwfc	___flmul@prod+1,f,c
  3762  000CF6  222C               	addwfc	___flmul@prod+2,f,c
  3763  000CF8  222D               	addwfc	___flmul@prod+3,f,c
  3764  000CFA  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3765  000CFE  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3766  000D02  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3767  000D06  6A24               	clrf	___flmul@grs,c
  3768  000D08  501B               	movf	___flmul@a,w,c
  3769  000D0A  0218               	mulwf	___flmul@b+1,c
  3770  000D0C  CFF3 F02E          	movff	prodl,___flmul@temp
  3771  000D10  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3772  000D14  502E               	movf	___flmul@temp,w,c
  3773  000D16  2624               	addwf	___flmul@grs,f,c
  3774  000D18  502F               	movf	___flmul@temp+1,w,c
  3775  000D1A  2225               	addwfc	___flmul@grs+1,f,c
  3776  000D1C  0E00               	movlw	0
  3777  000D1E  2226               	addwfc	___flmul@grs+2,f,c
  3778  000D20  0E00               	movlw	0
  3779  000D22  2227               	addwfc	___flmul@grs+3,f,c
  3780  000D24  501C               	movf	___flmul@a+1,w,c
  3781  000D26  0217               	mulwf	___flmul@b,c
  3782  000D28  CFF3 F02E          	movff	prodl,___flmul@temp
  3783  000D2C  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3784  000D30  502E               	movf	___flmul@temp,w,c
  3785  000D32  2624               	addwf	___flmul@grs,f,c
  3786  000D34  502F               	movf	___flmul@temp+1,w,c
  3787  000D36  2225               	addwfc	___flmul@grs+1,f,c
  3788  000D38  0E00               	movlw	0
  3789  000D3A  2226               	addwfc	___flmul@grs+2,f,c
  3790  000D3C  0E00               	movlw	0
  3791  000D3E  2227               	addwfc	___flmul@grs+3,f,c
  3792  000D40  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3793  000D44  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3794  000D48  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3795  000D4C  6A24               	clrf	___flmul@grs,c
  3796  000D4E  501B               	movf	___flmul@a,w,c
  3797  000D50  0217               	mulwf	___flmul@b,c
  3798  000D52  CFF3 F02E          	movff	prodl,___flmul@temp
  3799  000D56  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3800  000D5A  502E               	movf	___flmul@temp,w,c
  3801  000D5C  2624               	addwf	___flmul@grs,f,c
  3802  000D5E  502F               	movf	___flmul@temp+1,w,c
  3803  000D60  2225               	addwfc	___flmul@grs+1,f,c
  3804  000D62  0E00               	movlw	0
  3805  000D64  2226               	addwfc	___flmul@grs+2,f,c
  3806  000D66  0E00               	movlw	0
  3807  000D68  2227               	addwfc	___flmul@grs+3,f,c
  3808  000D6A  501D               	movf	___flmul@a+2,w,c
  3809  000D6C  0218               	mulwf	___flmul@b+1,c
  3810  000D6E  CFF3 F02E          	movff	prodl,___flmul@temp
  3811  000D72  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3812  000D76  502E               	movf	___flmul@temp,w,c
  3813  000D78  262A               	addwf	___flmul@prod,f,c
  3814  000D7A  502F               	movf	___flmul@temp+1,w,c
  3815  000D7C  222B               	addwfc	___flmul@prod+1,f,c
  3816  000D7E  0E00               	movlw	0
  3817  000D80  222C               	addwfc	___flmul@prod+2,f,c
  3818  000D82  0E00               	movlw	0
  3819  000D84  222D               	addwfc	___flmul@prod+3,f,c
  3820  000D86  501C               	movf	___flmul@a+1,w,c
  3821  000D88  0219               	mulwf	___flmul@b+2,c
  3822  000D8A  CFF3 F02E          	movff	prodl,___flmul@temp
  3823  000D8E  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3824  000D92  502E               	movf	___flmul@temp,w,c
  3825  000D94  262A               	addwf	___flmul@prod,f,c
  3826  000D96  502F               	movf	___flmul@temp+1,w,c
  3827  000D98  222B               	addwfc	___flmul@prod+1,f,c
  3828  000D9A  0E00               	movlw	0
  3829  000D9C  222C               	addwfc	___flmul@prod+2,f,c
  3830  000D9E  0E00               	movlw	0
  3831  000DA0  222D               	addwfc	___flmul@prod+3,f,c
  3832  000DA2  501D               	movf	___flmul@a+2,w,c
  3833  000DA4  0219               	mulwf	___flmul@b+2,c
  3834  000DA6  CFF3 F02E          	movff	prodl,___flmul@temp
  3835  000DAA  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3836  000DAE  502E               	movf	___flmul@temp,w,c
  3837  000DB0  6E1F               	movwf	??___flmul& (0+255),c
  3838  000DB2  502F               	movf	___flmul@temp+1,w,c
  3839  000DB4  6E20               	movwf	(??___flmul+1)& (0+255),c
  3840  000DB6  6A21               	clrf	(??___flmul+2)& (0+255),c
  3841  000DB8  6A22               	clrf	(??___flmul+3)& (0+255),c
  3842  000DBA  C021  F022         	movff	??___flmul+2,??___flmul+3
  3843  000DBE  C020  F021         	movff	??___flmul+1,??___flmul+2
  3844  000DC2  C01F  F020         	movff	??___flmul,??___flmul+1
  3845  000DC6  6A1F               	clrf	??___flmul,c
  3846  000DC8  501F               	movf	??___flmul,w,c
  3847  000DCA  262A               	addwf	___flmul@prod,f,c
  3848  000DCC  5020               	movf	??___flmul+1,w,c
  3849  000DCE  222B               	addwfc	___flmul@prod+1,f,c
  3850  000DD0  5021               	movf	??___flmul+2,w,c
  3851  000DD2  222C               	addwfc	___flmul@prod+2,f,c
  3852  000DD4  5022               	movf	??___flmul+3,w,c
  3853  000DD6  222D               	addwfc	___flmul@prod+3,f,c
  3854  000DD8  C024  F01F         	movff	___flmul@grs,??___flmul
  3855  000DDC  C025  F020         	movff	___flmul@grs+1,??___flmul+1
  3856  000DE0  C026  F021         	movff	___flmul@grs+2,??___flmul+2
  3857  000DE4  C027  F022         	movff	___flmul@grs+3,??___flmul+3
  3858  000DE8  0E19               	movlw	25
  3859  000DEA  D005               	goto	u2330
  3860  000DEC                     u2335:
  3861  000DEC  90D8               	bcf	status,0,c
  3862  000DEE  3222               	rrcf	??___flmul+3,f,c
  3863  000DF0  3221               	rrcf	??___flmul+2,f,c
  3864  000DF2  3220               	rrcf	??___flmul+1,f,c
  3865  000DF4  321F               	rrcf	??___flmul,f,c
  3866  000DF6                     u2330:
  3867  000DF6  2EE8               	decfsz	wreg,f,c
  3868  000DF8  D7F9               	goto	u2335
  3869  000DFA  501F               	movf	??___flmul,w,c
  3870  000DFC  262A               	addwf	___flmul@prod,f,c
  3871  000DFE  5020               	movf	??___flmul+1,w,c
  3872  000E00  222B               	addwfc	___flmul@prod+1,f,c
  3873  000E02  5021               	movf	??___flmul+2,w,c
  3874  000E04  222C               	addwfc	___flmul@prod+2,f,c
  3875  000E06  5022               	movf	??___flmul+3,w,c
  3876  000E08  222D               	addwfc	___flmul@prod+3,f,c
  3877  000E0A  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3878  000E0E  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3879  000E12  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3880  000E16  6A24               	clrf	___flmul@grs,c
  3881  000E18  5028               	movf	___flmul@aexp,w,c
  3882  000E1A  C029  F01F         	movff	___flmul@bexp,??___flmul
  3883  000E1E  6A20               	clrf	(??___flmul+1)& (0+255),c
  3884  000E20  261F               	addwf	??___flmul,f,c
  3885  000E22  0E00               	movlw	0
  3886  000E24  2220               	addwfc	??___flmul+1,f,c
  3887  000E26  0E82               	movlw	130
  3888  000E28  241F               	addwf	??___flmul,w,c
  3889  000E2A  6E2E               	movwf	___flmul@temp,c
  3890  000E2C  0EFF               	movlw	255
  3891  000E2E  2020               	addwfc	??___flmul+1,w,c
  3892  000E30  6E2F               	movwf	___flmul@temp+1,c
  3893  000E32  D00F               	goto	l2425
  3894  000E34                     l2419:
  3895  000E34  90D8               	bcf	status,0,c
  3896  000E36  362A               	rlcf	___flmul@prod,f,c
  3897  000E38  362B               	rlcf	___flmul@prod+1,f,c
  3898  000E3A  362C               	rlcf	___flmul@prod+2,f,c
  3899  000E3C  362D               	rlcf	___flmul@prod+3,f,c
  3900  000E3E  BE27               	btfsc	___flmul@grs+3,7,c
  3901  000E40  802A               	bsf	___flmul@prod,0,c
  3902  000E42  90D8               	bcf	status,0,c
  3903  000E44  3624               	rlcf	___flmul@grs,f,c
  3904  000E46  3625               	rlcf	___flmul@grs+1,f,c
  3905  000E48  3626               	rlcf	___flmul@grs+2,f,c
  3906  000E4A  3627               	rlcf	___flmul@grs+3,f,c
  3907  000E4C  062E               	decf	___flmul@temp,f,c
  3908  000E4E  A0D8               	btfss	status,0,c
  3909  000E50  062F               	decf	___flmul@temp+1,f,c
  3910  000E52                     l2425:
  3911  000E52  AE2C               	btfss	___flmul@prod+2,7,c
  3912  000E54  D7EF               	goto	l2419
  3913  000E56  0E00               	movlw	0
  3914  000E58  6E28               	movwf	___flmul@aexp,c
  3915  000E5A  AE27               	btfss	___flmul@grs+3,7,c
  3916  000E5C  D017               	goto	l828
  3917  000E5E  0EFF               	movlw	255
  3918  000E60  1424               	andwf	___flmul@grs,w,c
  3919  000E62  6E1F               	movwf	??___flmul& (0+255),c
  3920  000E64  0EFF               	movlw	255
  3921  000E66  1425               	andwf	___flmul@grs+1,w,c
  3922  000E68  6E20               	movwf	(??___flmul+1)& (0+255),c
  3923  000E6A  0EFF               	movlw	255
  3924  000E6C  1426               	andwf	___flmul@grs+2,w,c
  3925  000E6E  6E21               	movwf	(??___flmul+2)& (0+255),c
  3926  000E70  0E7F               	movlw	127
  3927  000E72  1427               	andwf	___flmul@grs+3,w,c
  3928  000E74  6E22               	movwf	(??___flmul+3)& (0+255),c
  3929  000E76  501F               	movf	??___flmul,w,c
  3930  000E78  1020               	iorwf	??___flmul+1,w,c
  3931  000E7A  1021               	iorwf	??___flmul+2,w,c
  3932  000E7C  1022               	iorwf	??___flmul+3,w,c
  3933  000E7E  B4D8               	btfsc	status,2,c
  3934  000E80  D003               	goto	l829
  3935  000E82                     u2370:
  3936  000E82  0E01               	movlw	1
  3937  000E84  6E28               	movwf	___flmul@aexp,c
  3938  000E86  D002               	goto	l828
  3939  000E88                     l829:
  3940  000E88  B02A               	btfsc	___flmul@prod,0,c
  3941  000E8A  D7FB               	goto	u2370
  3942  000E8C                     l828:
  3943  000E8C  5028               	movf	___flmul@aexp,w,c
  3944  000E8E  B4D8               	btfsc	status,2,c
  3945  000E90  D01F               	goto	l2445
  3946  000E92  0E01               	movlw	1
  3947  000E94  262A               	addwf	___flmul@prod,f,c
  3948  000E96  0E00               	movlw	0
  3949  000E98  222B               	addwfc	___flmul@prod+1,f,c
  3950  000E9A  222C               	addwfc	___flmul@prod+2,f,c
  3951  000E9C  222D               	addwfc	___flmul@prod+3,f,c
  3952  000E9E  A02D               	btfss	___flmul@prod+3,0,c
  3953  000EA0  D017               	goto	l2445
  3954  000EA2  C02A  F01F         	movff	___flmul@prod,??___flmul
  3955  000EA6  C02B  F020         	movff	___flmul@prod+1,??___flmul+1
  3956  000EAA  C02C  F021         	movff	___flmul@prod+2,??___flmul+2
  3957  000EAE  C02D  F022         	movff	___flmul@prod+3,??___flmul+3
  3958  000EB2  3422               	rlcf	??___flmul+3,w,c
  3959  000EB4  3222               	rrcf	??___flmul+3,f,c
  3960  000EB6  3221               	rrcf	??___flmul+2,f,c
  3961  000EB8  3220               	rrcf	??___flmul+1,f,c
  3962  000EBA  321F               	rrcf	??___flmul,f,c
  3963  000EBC  C01F  F02A         	movff	??___flmul,___flmul@prod
  3964  000EC0  C020  F02B         	movff	??___flmul+1,___flmul@prod+1
  3965  000EC4  C021  F02C         	movff	??___flmul+2,___flmul@prod+2
  3966  000EC8  C022  F02D         	movff	??___flmul+3,___flmul@prod+3
  3967  000ECC  4A2E               	infsnz	___flmul@temp,f,c
  3968  000ECE  2A2F               	incf	___flmul@temp+1,f,c
  3969  000ED0                     l2445:
  3970  000ED0  BE2F               	btfsc	___flmul@temp+1,7,c
  3971  000ED2  D00D               	goto	l2449
  3972  000ED4  502F               	movf	___flmul@temp+1,w,c
  3973  000ED6  E103               	bnz	u2410
  3974  000ED8  282E               	incf	___flmul@temp,w,c
  3975  000EDA  A0D8               	btfss	status,0,c
  3976  000EDC  D008               	goto	l2449
  3977  000EDE                     u2410:
  3978  000EDE  0E00               	movlw	0
  3979  000EE0  6E2A               	movwf	___flmul@prod,c
  3980  000EE2  0E00               	movlw	0
  3981  000EE4  6E2B               	movwf	___flmul@prod+1,c
  3982  000EE6  0E80               	movlw	128
  3983  000EE8  6E2C               	movwf	___flmul@prod+2,c
  3984  000EEA  0E7F               	movlw	127
  3985  000EEC  D020               	goto	L2
  3986  000EEE                     l2449:
  3987  000EEE  BE2F               	btfsc	___flmul@temp+1,7,c
  3988  000EF0  D005               	goto	u2420
  3989  000EF2  502F               	movf	___flmul@temp+1,w,c
  3990  000EF4  E10E               	bnz	l836
  3991  000EF6  042E               	decf	___flmul@temp,w,c
  3992  000EF8  B0D8               	btfsc	status,0,c
  3993  000EFA  D00B               	goto	l836
  3994  000EFC                     u2420:
  3995  000EFC  0E00               	movlw	0
  3996  000EFE  6E2A               	movwf	___flmul@prod,c
  3997  000F00  0E00               	movlw	0
  3998  000F02  6E2B               	movwf	___flmul@prod+1,c
  3999  000F04  0E00               	movlw	0
  4000  000F06  6E2C               	movwf	___flmul@prod+2,c
  4001  000F08  0E00               	movlw	0
  4002  000F0A  6E2D               	movwf	___flmul@prod+3,c
  4003  000F0C  0E00               	movlw	0
  4004  000F0E  6E23               	movwf	___flmul@sign,c
  4005  000F10  D00F               	goto	l2461
  4006  000F12                     l836:
  4007  000F12  C02E  F029         	movff	___flmul@temp,___flmul@bexp
  4008  000F16  0EFF               	movlw	255
  4009  000F18  162A               	andwf	___flmul@prod,f,c
  4010  000F1A  0EFF               	movlw	255
  4011  000F1C  162B               	andwf	___flmul@prod+1,f,c
  4012  000F1E  0E7F               	movlw	127
  4013  000F20  162C               	andwf	___flmul@prod+2,f,c
  4014  000F22  0E00               	movlw	0
  4015  000F24  162D               	andwf	___flmul@prod+3,f,c
  4016  000F26  B029               	btfsc	___flmul@bexp,0,c
  4017  000F28  8E2C               	bsf	___flmul@prod+2,7,c
  4018  000F2A  90D8               	bcf	status,0,c
  4019  000F2C  3029               	rrcf	___flmul@bexp,w,c
  4020  000F2E                     L2:
  4021  000F2E  6E2D               	movwf	___flmul@prod+3,c
  4022  000F30                     l2461:
  4023  000F30  5023               	movf	___flmul@sign,w,c
  4024  000F32  122D               	iorwf	___flmul@prod+3,f,c
  4025  000F34  C02A  F017         	movff	___flmul@prod,?___flmul
  4026  000F38  C02B  F018         	movff	___flmul@prod+1,?___flmul+1
  4027  000F3C  C02C  F019         	movff	___flmul@prod+2,?___flmul+2
  4028  000F40  C02D  F01A         	movff	___flmul@prod+3,?___flmul+3
  4029  000F44  0012               	return		;funcret
  4030  000F46                     __end_of___flmul:
  4031                           	opt callstack 0
  4032                           
  4033 ;; *************** function ___flge *****************
  4034 ;; Defined at:
  4035 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  ff1             4   22[COMRAM] unsigned char 
  4038 ;;  ff2             4   26[COMRAM] unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;		None
  4041 ;; Return value:  Size  Location     Type
  4042 ;;		None               void
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4050 ;;      Params:         8       0       0       0       0       0       0       0       0
  4051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4052 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4053 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4054 ;;Total ram usage:       12 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_main
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text20
  4064  001AD4                     __ptext20:
  4065                           	opt callstack 0
  4066  001AD4                     ___flge:
  4067                           	opt callstack 30
  4068                           
  4069                           ;incstack = 0
  4070  001AD4  0E00               	movlw	0
  4071  001AD6  1417               	andwf	___flge@ff1,w,c
  4072  001AD8  6E1F               	movwf	??___flge& (0+255),c
  4073  001ADA  0E00               	movlw	0
  4074  001ADC  1418               	andwf	___flge@ff1+1,w,c
  4075  001ADE  6E20               	movwf	(??___flge+1)& (0+255),c
  4076  001AE0  0E80               	movlw	128
  4077  001AE2  1419               	andwf	___flge@ff1+2,w,c
  4078  001AE4  6E21               	movwf	(??___flge+2)& (0+255),c
  4079  001AE6  0E7F               	movlw	127
  4080  001AE8  141A               	andwf	___flge@ff1+3,w,c
  4081  001AEA  6E22               	movwf	(??___flge+3)& (0+255),c
  4082  001AEC  501F               	movf	??___flge,w,c
  4083  001AEE  1020               	iorwf	??___flge+1,w,c
  4084  001AF0  1021               	iorwf	??___flge+2,w,c
  4085  001AF2  1022               	iorwf	??___flge+3,w,c
  4086  001AF4  A4D8               	btfss	status,2,c
  4087  001AF6  D008               	goto	l2471
  4088  001AF8  0E00               	movlw	0
  4089  001AFA  6E17               	movwf	___flge@ff1,c
  4090  001AFC  0E00               	movlw	0
  4091  001AFE  6E18               	movwf	___flge@ff1+1,c
  4092  001B00  0E00               	movlw	0
  4093  001B02  6E19               	movwf	___flge@ff1+2,c
  4094  001B04  0E00               	movlw	0
  4095  001B06  6E1A               	movwf	___flge@ff1+3,c
  4096  001B08                     l2471:
  4097  001B08  0E00               	movlw	0
  4098  001B0A  141B               	andwf	___flge@ff2,w,c
  4099  001B0C  6E1F               	movwf	??___flge& (0+255),c
  4100  001B0E  0E00               	movlw	0
  4101  001B10  141C               	andwf	___flge@ff2+1,w,c
  4102  001B12  6E20               	movwf	(??___flge+1)& (0+255),c
  4103  001B14  0E80               	movlw	128
  4104  001B16  141D               	andwf	___flge@ff2+2,w,c
  4105  001B18  6E21               	movwf	(??___flge+2)& (0+255),c
  4106  001B1A  0E7F               	movlw	127
  4107  001B1C  141E               	andwf	___flge@ff2+3,w,c
  4108  001B1E  6E22               	movwf	(??___flge+3)& (0+255),c
  4109  001B20  501F               	movf	??___flge,w,c
  4110  001B22  1020               	iorwf	??___flge+1,w,c
  4111  001B24  1021               	iorwf	??___flge+2,w,c
  4112  001B26  1022               	iorwf	??___flge+3,w,c
  4113  001B28  A4D8               	btfss	status,2,c
  4114  001B2A  D008               	goto	l2475
  4115  001B2C  0E00               	movlw	0
  4116  001B2E  6E1B               	movwf	___flge@ff2,c
  4117  001B30  0E00               	movlw	0
  4118  001B32  6E1C               	movwf	___flge@ff2+1,c
  4119  001B34  0E00               	movlw	0
  4120  001B36  6E1D               	movwf	___flge@ff2+2,c
  4121  001B38  0E00               	movlw	0
  4122  001B3A  6E1E               	movwf	___flge@ff2+3,c
  4123  001B3C                     l2475:
  4124  001B3C  AE1A               	btfss	___flge@ff1+3,7,c
  4125  001B3E  D009               	goto	l2479
  4126  001B40  6C17               	negf	___flge@ff1,c
  4127  001B42  1E18               	comf	___flge@ff1+1,f,c
  4128  001B44  B0D8               	btfsc	status,0,c
  4129  001B46  2A18               	incf	___flge@ff1+1,f,c
  4130  001B48  1E19               	comf	___flge@ff1+2,f,c
  4131  001B4A  B0D8               	btfsc	status,0,c
  4132  001B4C  2A19               	incf	___flge@ff1+2,f,c
  4133  001B4E  0E80               	movlw	128
  4134  001B50  561A               	subfwb	___flge@ff1+3,f,c
  4135  001B52                     l2479:
  4136  001B52  AE1E               	btfss	___flge@ff2+3,7,c
  4137  001B54  D009               	goto	l470
  4138  001B56  6C1B               	negf	___flge@ff2,c
  4139  001B58  1E1C               	comf	___flge@ff2+1,f,c
  4140  001B5A  B0D8               	btfsc	status,0,c
  4141  001B5C  2A1C               	incf	___flge@ff2+1,f,c
  4142  001B5E  1E1D               	comf	___flge@ff2+2,f,c
  4143  001B60  B0D8               	btfsc	status,0,c
  4144  001B62  2A1D               	incf	___flge@ff2+2,f,c
  4145  001B64  0E80               	movlw	128
  4146  001B66  561E               	subfwb	___flge@ff2+3,f,c
  4147  001B68                     l470:
  4148  001B68  0E00               	movlw	0
  4149  001B6A  1A17               	xorwf	___flge@ff1,f,c
  4150  001B6C  0E00               	movlw	0
  4151  001B6E  1A18               	xorwf	___flge@ff1+1,f,c
  4152  001B70  0E00               	movlw	0
  4153  001B72  1A19               	xorwf	___flge@ff1+2,f,c
  4154  001B74  0E80               	movlw	128
  4155  001B76  1A1A               	xorwf	___flge@ff1+3,f,c
  4156  001B78  0E00               	movlw	0
  4157  001B7A  1A1B               	xorwf	___flge@ff2,f,c
  4158  001B7C  0E00               	movlw	0
  4159  001B7E  1A1C               	xorwf	___flge@ff2+1,f,c
  4160  001B80  0E00               	movlw	0
  4161  001B82  1A1D               	xorwf	___flge@ff2+2,f,c
  4162  001B84  0E80               	movlw	128
  4163  001B86  1A1E               	xorwf	___flge@ff2+3,f,c
  4164  001B88  501B               	movf	___flge@ff2,w,c
  4165  001B8A  5C17               	subwf	___flge@ff1,w,c
  4166  001B8C  501C               	movf	___flge@ff2+1,w,c
  4167  001B8E  5818               	subwfb	___flge@ff1+1,w,c
  4168  001B90  501D               	movf	___flge@ff2+2,w,c
  4169  001B92  5819               	subwfb	___flge@ff1+2,w,c
  4170  001B94  501E               	movf	___flge@ff2+3,w,c
  4171  001B96  581A               	subwfb	___flge@ff1+3,w,c
  4172  001B98  B0D8               	btfsc	status,0,c
  4173  001B9A  D002               	goto	l2485
  4174  001B9C  90D8               	bcf	status,0,c
  4175  001B9E  0012               	return	
  4176  001BA0                     l2485:
  4177  001BA0  80D8               	bsf	status,0,c
  4178  001BA2  0012               	return		;funcret
  4179  001BA4                     __end_of___flge:
  4180                           	opt callstack 0
  4181                           
  4182 ;; *************** function ___fldiv *****************
  4183 ;; Defined at:
  4184 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  b               4   47[COMRAM] unsigned char 
  4187 ;;  a               4   51[COMRAM] unsigned char 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  grs             4   66[COMRAM] unsigned long 
  4190 ;;  rem             4   59[COMRAM] unsigned long 
  4191 ;;  new_exp         2   64[COMRAM] short 
  4192 ;;  aexp            1   71[COMRAM] unsigned char 
  4193 ;;  bexp            1   70[COMRAM] unsigned char 
  4194 ;;  sign            1   63[COMRAM] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  4   47[COMRAM] unsigned char 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4204 ;;      Params:         8       0       0       0       0       0       0       0       0
  4205 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4206 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4207 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4208 ;;Total ram usage:       25 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_main
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text21
  4218  000F46                     __ptext21:
  4219                           	opt callstack 0
  4220  000F46                     ___fldiv:
  4221                           	opt callstack 30
  4222                           
  4223                           ;incstack = 0
  4224  000F46  5033               	movf	___fldiv@b+3,w,c
  4225  000F48  0B80               	andlw	128
  4226  000F4A  6E40               	movwf	___fldiv@sign,c
  4227  000F4C  5033               	movf	___fldiv@b+3,w,c
  4228  000F4E  2433               	addwf	___fldiv@b+3,w,c
  4229  000F50  6E47               	movwf	___fldiv@bexp,c
  4230  000F52  BE32               	btfsc	___fldiv@b+2,7,c
  4231  000F54  8047               	bsf	___fldiv@bexp,0,c
  4232  000F56  5047               	movf	___fldiv@bexp,w,c
  4233  000F58  B4D8               	btfsc	status,2,c
  4234  000F5A  D00D               	goto	l2215
  4235  000F5C  2847               	incf	___fldiv@bexp,w,c
  4236  000F5E  A4D8               	btfss	status,2,c
  4237  000F60  D008               	goto	l2211
  4238  000F62  0E00               	movlw	0
  4239  000F64  6E30               	movwf	___fldiv@b,c
  4240  000F66  0E00               	movlw	0
  4241  000F68  6E31               	movwf	___fldiv@b+1,c
  4242  000F6A  0E00               	movlw	0
  4243  000F6C  6E32               	movwf	___fldiv@b+2,c
  4244  000F6E  0E00               	movlw	0
  4245  000F70  6E33               	movwf	___fldiv@b+3,c
  4246  000F72                     l2211:
  4247  000F72  8E32               	bsf	___fldiv@b+2,7,c
  4248  000F74  D006               	goto	L3
  4249  000F76                     l2215:
  4250  000F76  0E00               	movlw	0
  4251  000F78  6E30               	movwf	___fldiv@b,c
  4252  000F7A  0E00               	movlw	0
  4253  000F7C  6E31               	movwf	___fldiv@b+1,c
  4254  000F7E  0E00               	movlw	0
  4255  000F80  6E32               	movwf	___fldiv@b+2,c
  4256  000F82                     L3:
  4257  000F82  0E00               	movlw	0
  4258  000F84  6E33               	movwf	___fldiv@b+3,c
  4259  000F86  5037               	movf	___fldiv@a+3,w,c
  4260  000F88  0B80               	andlw	128
  4261  000F8A  1A40               	xorwf	___fldiv@sign,f,c
  4262  000F8C  5037               	movf	___fldiv@a+3,w,c
  4263  000F8E  2437               	addwf	___fldiv@a+3,w,c
  4264  000F90  6E48               	movwf	___fldiv@aexp,c
  4265  000F92  BE36               	btfsc	___fldiv@a+2,7,c
  4266  000F94  8048               	bsf	___fldiv@aexp,0,c
  4267  000F96  5048               	movf	___fldiv@aexp,w,c
  4268  000F98  B4D8               	btfsc	status,2,c
  4269  000F9A  D00D               	goto	l2235
  4270  000F9C  2848               	incf	___fldiv@aexp,w,c
  4271  000F9E  A4D8               	btfss	status,2,c
  4272  000FA0  D008               	goto	l2231
  4273  000FA2  0E00               	movlw	0
  4274  000FA4  6E34               	movwf	___fldiv@a,c
  4275  000FA6  0E00               	movlw	0
  4276  000FA8  6E35               	movwf	___fldiv@a+1,c
  4277  000FAA  0E00               	movlw	0
  4278  000FAC  6E36               	movwf	___fldiv@a+2,c
  4279  000FAE  0E00               	movlw	0
  4280  000FB0  6E37               	movwf	___fldiv@a+3,c
  4281  000FB2                     l2231:
  4282  000FB2  8E36               	bsf	___fldiv@a+2,7,c
  4283  000FB4  D006               	goto	L4
  4284  000FB6                     l2235:
  4285  000FB6  0E00               	movlw	0
  4286  000FB8  6E34               	movwf	___fldiv@a,c
  4287  000FBA  0E00               	movlw	0
  4288  000FBC  6E35               	movwf	___fldiv@a+1,c
  4289  000FBE  0E00               	movlw	0
  4290  000FC0  6E36               	movwf	___fldiv@a+2,c
  4291  000FC2                     L4:
  4292  000FC2  0E00               	movlw	0
  4293  000FC4  6E37               	movwf	___fldiv@a+3,c
  4294  000FC6  5034               	movf	___fldiv@a,w,c
  4295  000FC8  1035               	iorwf	___fldiv@a+1,w,c
  4296  000FCA  1036               	iorwf	___fldiv@a+2,w,c
  4297  000FCC  1037               	iorwf	___fldiv@a+3,w,c
  4298  000FCE  A4D8               	btfss	status,2,c
  4299  000FD0  D017               	goto	l2249
  4300  000FD2  0E00               	movlw	0
  4301  000FD4  6E30               	movwf	___fldiv@b,c
  4302  000FD6  0E00               	movlw	0
  4303  000FD8  6E31               	movwf	___fldiv@b+1,c
  4304  000FDA  0E00               	movlw	0
  4305  000FDC  6E32               	movwf	___fldiv@b+2,c
  4306  000FDE  0E00               	movlw	0
  4307  000FE0  6E33               	movwf	___fldiv@b+3,c
  4308  000FE2  0E80               	movlw	128
  4309  000FE4  1232               	iorwf	___fldiv@b+2,f,c
  4310  000FE6  0E7F               	movlw	127
  4311  000FE8  1233               	iorwf	___fldiv@b+3,f,c
  4312  000FEA                     l2243:
  4313  000FEA  5040               	movf	___fldiv@sign,w,c
  4314  000FEC  1233               	iorwf	___fldiv@b+3,f,c
  4315  000FEE  C030  F030         	movff	___fldiv@b,?___fldiv
  4316  000FF2  C031  F031         	movff	___fldiv@b+1,?___fldiv+1
  4317  000FF6  C032  F032         	movff	___fldiv@b+2,?___fldiv+2
  4318  000FFA  C033  F033         	movff	___fldiv@b+3,?___fldiv+3
  4319  000FFE  0012               	return	
  4320  001000                     l2249:
  4321  001000  5047               	movf	___fldiv@bexp,w,c
  4322  001002  A4D8               	btfss	status,2,c
  4323  001004  D009               	goto	l2257
  4324  001006  0E00               	movlw	0
  4325  001008  6E30               	movwf	?___fldiv,c
  4326  00100A  0E00               	movlw	0
  4327  00100C  6E31               	movwf	?___fldiv+1,c
  4328  00100E  0E00               	movlw	0
  4329  001010  6E32               	movwf	?___fldiv+2,c
  4330  001012  0E00               	movlw	0
  4331  001014  6E33               	movwf	?___fldiv+3,c
  4332  001016  0012               	return	
  4333  001018                     l2257:
  4334  001018  5048               	movf	___fldiv@aexp,w,c
  4335  00101A  C047  F038         	movff	___fldiv@bexp,??___fldiv
  4336  00101E  6A39               	clrf	(??___fldiv+1)& (0+255),c
  4337  001020  5E38               	subwf	??___fldiv,f,c
  4338  001022  0E00               	movlw	0
  4339  001024  5A39               	subwfb	??___fldiv+1,f,c
  4340  001026  0E7F               	movlw	127
  4341  001028  2438               	addwf	??___fldiv,w,c
  4342  00102A  6E41               	movwf	___fldiv@new_exp,c
  4343  00102C  0E00               	movlw	0
  4344  00102E  2039               	addwfc	??___fldiv+1,w,c
  4345  001030  6E42               	movwf	___fldiv@new_exp+1,c
  4346  001032  C030  F03C         	movff	___fldiv@b,___fldiv@rem
  4347  001036  C031  F03D         	movff	___fldiv@b+1,___fldiv@rem+1
  4348  00103A  C032  F03E         	movff	___fldiv@b+2,___fldiv@rem+2
  4349  00103E  C033  F03F         	movff	___fldiv@b+3,___fldiv@rem+3
  4350  001042  0E00               	movlw	0
  4351  001044  6E30               	movwf	___fldiv@b,c
  4352  001046  0E00               	movlw	0
  4353  001048  6E31               	movwf	___fldiv@b+1,c
  4354  00104A  0E00               	movlw	0
  4355  00104C  6E32               	movwf	___fldiv@b+2,c
  4356  00104E  0E00               	movlw	0
  4357  001050  6E33               	movwf	___fldiv@b+3,c
  4358  001052  0E00               	movlw	0
  4359  001054  6E43               	movwf	___fldiv@grs,c
  4360  001056  0E00               	movlw	0
  4361  001058  6E44               	movwf	___fldiv@grs+1,c
  4362  00105A  0E00               	movlw	0
  4363  00105C  6E45               	movwf	___fldiv@grs+2,c
  4364  00105E  0E00               	movlw	0
  4365  001060  6E46               	movwf	___fldiv@grs+3,c
  4366  001062  0E00               	movlw	0
  4367  001064  6E48               	movwf	___fldiv@aexp,c
  4368  001066  D028               	goto	l789
  4369  001068                     l2267:
  4370  001068  5048               	movf	___fldiv@aexp,w,c
  4371  00106A  B4D8               	btfsc	status,2,c
  4372  00106C  D011               	goto	l2275
  4373  00106E  90D8               	bcf	status,0,c
  4374  001070  363C               	rlcf	___fldiv@rem,f,c
  4375  001072  363D               	rlcf	___fldiv@rem+1,f,c
  4376  001074  363E               	rlcf	___fldiv@rem+2,f,c
  4377  001076  363F               	rlcf	___fldiv@rem+3,f,c
  4378  001078  90D8               	bcf	status,0,c
  4379  00107A  3630               	rlcf	___fldiv@b,f,c
  4380  00107C  3631               	rlcf	___fldiv@b+1,f,c
  4381  00107E  3632               	rlcf	___fldiv@b+2,f,c
  4382  001080  3633               	rlcf	___fldiv@b+3,f,c
  4383  001082  BE46               	btfsc	___fldiv@grs+3,7,c
  4384  001084  8030               	bsf	___fldiv@b,0,c
  4385  001086  90D8               	bcf	status,0,c
  4386  001088  3643               	rlcf	___fldiv@grs,f,c
  4387  00108A  3644               	rlcf	___fldiv@grs+1,f,c
  4388  00108C  3645               	rlcf	___fldiv@grs+2,f,c
  4389  00108E  3646               	rlcf	___fldiv@grs+3,f,c
  4390  001090                     l2275:
  4391  001090  5034               	movf	___fldiv@a,w,c
  4392  001092  5C3C               	subwf	___fldiv@rem,w,c
  4393  001094  5035               	movf	___fldiv@a+1,w,c
  4394  001096  583D               	subwfb	___fldiv@rem+1,w,c
  4395  001098  5036               	movf	___fldiv@a+2,w,c
  4396  00109A  583E               	subwfb	___fldiv@rem+2,w,c
  4397  00109C  5037               	movf	___fldiv@a+3,w,c
  4398  00109E  583F               	subwfb	___fldiv@rem+3,w,c
  4399  0010A0  A0D8               	btfss	status,0,c
  4400  0010A2  D009               	goto	l2281
  4401  0010A4  8C46               	bsf	___fldiv@grs+3,6,c
  4402  0010A6  5034               	movf	___fldiv@a,w,c
  4403  0010A8  5E3C               	subwf	___fldiv@rem,f,c
  4404  0010AA  5035               	movf	___fldiv@a+1,w,c
  4405  0010AC  5A3D               	subwfb	___fldiv@rem+1,f,c
  4406  0010AE  5036               	movf	___fldiv@a+2,w,c
  4407  0010B0  5A3E               	subwfb	___fldiv@rem+2,f,c
  4408  0010B2  5037               	movf	___fldiv@a+3,w,c
  4409  0010B4  5A3F               	subwfb	___fldiv@rem+3,f,c
  4410  0010B6                     l2281:
  4411  0010B6  2A48               	incf	___fldiv@aexp,f,c
  4412  0010B8                     l789:
  4413  0010B8  0E19               	movlw	25
  4414  0010BA  6448               	cpfsgt	___fldiv@aexp,c
  4415  0010BC  D7D5               	goto	l2267
  4416  0010BE  503C               	movf	___fldiv@rem,w,c
  4417  0010C0  103D               	iorwf	___fldiv@rem+1,w,c
  4418  0010C2  103E               	iorwf	___fldiv@rem+2,w,c
  4419  0010C4  103F               	iorwf	___fldiv@rem+3,w,c
  4420  0010C6  B4D8               	btfsc	status,2,c
  4421  0010C8  D011               	goto	l2293
  4422  0010CA  8043               	bsf	___fldiv@grs,0,c
  4423  0010CC  D00F               	goto	l2293
  4424  0010CE                     l2287:
  4425  0010CE  90D8               	bcf	status,0,c
  4426  0010D0  3630               	rlcf	___fldiv@b,f,c
  4427  0010D2  3631               	rlcf	___fldiv@b+1,f,c
  4428  0010D4  3632               	rlcf	___fldiv@b+2,f,c
  4429  0010D6  3633               	rlcf	___fldiv@b+3,f,c
  4430  0010D8  BE46               	btfsc	___fldiv@grs+3,7,c
  4431  0010DA  8030               	bsf	___fldiv@b,0,c
  4432  0010DC  90D8               	bcf	status,0,c
  4433  0010DE  3643               	rlcf	___fldiv@grs,f,c
  4434  0010E0  3644               	rlcf	___fldiv@grs+1,f,c
  4435  0010E2  3645               	rlcf	___fldiv@grs+2,f,c
  4436  0010E4  3646               	rlcf	___fldiv@grs+3,f,c
  4437  0010E6  0641               	decf	___fldiv@new_exp,f,c
  4438  0010E8  A0D8               	btfss	status,0,c
  4439  0010EA  0642               	decf	___fldiv@new_exp+1,f,c
  4440  0010EC                     l2293:
  4441  0010EC  AE32               	btfss	___fldiv@b+2,7,c
  4442  0010EE  D7EF               	goto	l2287
  4443  0010F0  0E00               	movlw	0
  4444  0010F2  6E48               	movwf	___fldiv@aexp,c
  4445  0010F4  AE46               	btfss	___fldiv@grs+3,7,c
  4446  0010F6  D017               	goto	l800
  4447  0010F8  0EFF               	movlw	255
  4448  0010FA  1443               	andwf	___fldiv@grs,w,c
  4449  0010FC  6E38               	movwf	??___fldiv& (0+255),c
  4450  0010FE  0EFF               	movlw	255
  4451  001100  1444               	andwf	___fldiv@grs+1,w,c
  4452  001102  6E39               	movwf	(??___fldiv+1)& (0+255),c
  4453  001104  0EFF               	movlw	255
  4454  001106  1445               	andwf	___fldiv@grs+2,w,c
  4455  001108  6E3A               	movwf	(??___fldiv+2)& (0+255),c
  4456  00110A  0E7F               	movlw	127
  4457  00110C  1446               	andwf	___fldiv@grs+3,w,c
  4458  00110E  6E3B               	movwf	(??___fldiv+3)& (0+255),c
  4459  001110  5038               	movf	??___fldiv,w,c
  4460  001112  1039               	iorwf	??___fldiv+1,w,c
  4461  001114  103A               	iorwf	??___fldiv+2,w,c
  4462  001116  103B               	iorwf	??___fldiv+3,w,c
  4463  001118  B4D8               	btfsc	status,2,c
  4464  00111A  D003               	goto	l801
  4465  00111C                     u2180:
  4466  00111C  0E01               	movlw	1
  4467  00111E  6E48               	movwf	___fldiv@aexp,c
  4468  001120  D002               	goto	l800
  4469  001122                     l801:
  4470  001122  B030               	btfsc	___fldiv@b,0,c
  4471  001124  D7FB               	goto	u2180
  4472  001126                     l800:
  4473  001126  5048               	movf	___fldiv@aexp,w,c
  4474  001128  B4D8               	btfsc	status,2,c
  4475  00112A  D01F               	goto	l2313
  4476  00112C  0E01               	movlw	1
  4477  00112E  2630               	addwf	___fldiv@b,f,c
  4478  001130  0E00               	movlw	0
  4479  001132  2231               	addwfc	___fldiv@b+1,f,c
  4480  001134  2232               	addwfc	___fldiv@b+2,f,c
  4481  001136  2233               	addwfc	___fldiv@b+3,f,c
  4482  001138  A033               	btfss	___fldiv@b+3,0,c
  4483  00113A  D017               	goto	l2313
  4484  00113C  C030  F038         	movff	___fldiv@b,??___fldiv
  4485  001140  C031  F039         	movff	___fldiv@b+1,??___fldiv+1
  4486  001144  C032  F03A         	movff	___fldiv@b+2,??___fldiv+2
  4487  001148  C033  F03B         	movff	___fldiv@b+3,??___fldiv+3
  4488  00114C  343B               	rlcf	??___fldiv+3,w,c
  4489  00114E  323B               	rrcf	??___fldiv+3,f,c
  4490  001150  323A               	rrcf	??___fldiv+2,f,c
  4491  001152  3239               	rrcf	??___fldiv+1,f,c
  4492  001154  3238               	rrcf	??___fldiv,f,c
  4493  001156  C038  F030         	movff	??___fldiv,___fldiv@b
  4494  00115A  C039  F031         	movff	??___fldiv+1,___fldiv@b+1
  4495  00115E  C03A  F032         	movff	??___fldiv+2,___fldiv@b+2
  4496  001162  C03B  F033         	movff	??___fldiv+3,___fldiv@b+3
  4497  001166  4A41               	infsnz	___fldiv@new_exp,f,c
  4498  001168  2A42               	incf	___fldiv@new_exp+1,f,c
  4499  00116A                     l2313:
  4500  00116A  BE42               	btfsc	___fldiv@new_exp+1,7,c
  4501  00116C  D010               	goto	l2317
  4502  00116E  5042               	movf	___fldiv@new_exp+1,w,c
  4503  001170  E103               	bnz	u2220
  4504  001172  2841               	incf	___fldiv@new_exp,w,c
  4505  001174  A0D8               	btfss	status,0,c
  4506  001176  D00B               	goto	l2317
  4507  001178                     u2220:
  4508  001178  0E00               	movlw	0
  4509  00117A  6E42               	movwf	___fldiv@new_exp+1,c
  4510  00117C  6841               	setf	___fldiv@new_exp,c
  4511  00117E  0E00               	movlw	0
  4512  001180  6E30               	movwf	___fldiv@b,c
  4513  001182  0E00               	movlw	0
  4514  001184  6E31               	movwf	___fldiv@b+1,c
  4515  001186  0E00               	movlw	0
  4516  001188  6E32               	movwf	___fldiv@b+2,c
  4517  00118A  0E00               	movlw	0
  4518  00118C  6E33               	movwf	___fldiv@b+3,c
  4519  00118E                     l2317:
  4520  00118E  BE42               	btfsc	___fldiv@new_exp+1,7,c
  4521  001190  D005               	goto	u2230
  4522  001192  5042               	movf	___fldiv@new_exp+1,w,c
  4523  001194  E111               	bnz	l2321
  4524  001196  0441               	decf	___fldiv@new_exp,w,c
  4525  001198  B0D8               	btfsc	status,0,c
  4526  00119A  D00E               	goto	l2321
  4527  00119C                     u2230:
  4528  00119C  0E00               	movlw	0
  4529  00119E  6E42               	movwf	___fldiv@new_exp+1,c
  4530  0011A0  0E00               	movlw	0
  4531  0011A2  6E41               	movwf	___fldiv@new_exp,c
  4532  0011A4  0E00               	movlw	0
  4533  0011A6  6E30               	movwf	___fldiv@b,c
  4534  0011A8  0E00               	movlw	0
  4535  0011AA  6E31               	movwf	___fldiv@b+1,c
  4536  0011AC  0E00               	movlw	0
  4537  0011AE  6E32               	movwf	___fldiv@b+2,c
  4538  0011B0  0E00               	movlw	0
  4539  0011B2  6E33               	movwf	___fldiv@b+3,c
  4540  0011B4  0E00               	movlw	0
  4541  0011B6  6E40               	movwf	___fldiv@sign,c
  4542  0011B8                     l2321:
  4543  0011B8  C041  F047         	movff	___fldiv@new_exp,___fldiv@bexp
  4544  0011BC  A047               	btfss	___fldiv@bexp,0,c
  4545  0011BE  D002               	goto	l2327
  4546  0011C0  8E32               	bsf	___fldiv@b+2,7,c
  4547  0011C2  D001               	goto	l2329
  4548  0011C4                     l2327:
  4549  0011C4  9E32               	bcf	___fldiv@b+2,7,c
  4550  0011C6                     l2329:
  4551  0011C6  90D8               	bcf	status,0,c
  4552  0011C8  3047               	rrcf	___fldiv@bexp,w,c
  4553  0011CA  6E33               	movwf	___fldiv@b+3,c
  4554  0011CC  D70E               	goto	l2243
  4555  0011CE                     __end_of___fldiv:
  4556                           	opt callstack 0
  4557                           
  4558 ;; *************** function _LCD_String_xy *****************
  4559 ;; Defined at:
  4560 ;;		line 58 in file "lcd.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  row             1    wreg     unsigned char 
  4563 ;;  pos             1    4[COMRAM] unsigned char 
  4564 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  4565 ;;		 -> STR_4(4), STR_3(4), main@Soil(10), main@Temperature(10), 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  row             1    7[COMRAM] unsigned char 
  4568 ;;  location        1    8[COMRAM] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      void 
  4571 ;; Registers used:
  4572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4578 ;;      Params:         3       0       0       0       0       0       0       0       0
  4579 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4581 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4582 ;;Total ram usage:        5 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    2
  4585 ;; This function calls:
  4586 ;;		_LCD_Command
  4587 ;;		_LCD_String
  4588 ;; This function is called by:
  4589 ;;		_main
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text22
  4594  00200A                     __ptext22:
  4595                           	opt callstack 0
  4596  00200A                     _LCD_String_xy:
  4597                           	opt callstack 28
  4598                           
  4599                           ;incstack = 0
  4600                           ;LCD_String_xy@row stored from wreg
  4601  00200A  6E08               	movwf	LCD_String_xy@row,c
  4602                           
  4603                           ;lcd.c: 61:     if (row <= 1) {
  4604  00200C  0E02               	movlw	2
  4605  00200E  6008               	cpfslt	LCD_String_xy@row,c
  4606  002010  D008               	goto	l2137
  4607                           
  4608                           ;lcd.c: 62:         location = (0x80) | ((pos) & 0x0f);
  4609  002012  5005               	movf	LCD_String_xy@pos,w,c
  4610  002014  0B0F               	andlw	15
  4611  002016  0980               	iorlw	128
  4612  002018  6E09               	movwf	LCD_String_xy@location,c
  4613                           
  4614                           ;lcd.c: 63:         LCD_Command(location);
  4615  00201A  5009               	movf	LCD_String_xy@location,w,c
  4616  00201C  EC86  F010         	call	_LCD_Command
  4617                           
  4618                           ;lcd.c: 64:     } else {
  4619  002020  D007               	goto	l2141
  4620  002022                     l2137:
  4621                           
  4622                           ;lcd.c: 65:         location = (0xC0) | ((pos) & 0x0f);
  4623  002022  5005               	movf	LCD_String_xy@pos,w,c
  4624  002024  0B0F               	andlw	15
  4625  002026  09C0               	iorlw	192
  4626  002028  6E09               	movwf	LCD_String_xy@location,c
  4627                           
  4628                           ;lcd.c: 66:         LCD_Command(location);
  4629  00202A  5009               	movf	LCD_String_xy@location,w,c
  4630  00202C  EC86  F010         	call	_LCD_Command
  4631  002030                     l2141:
  4632                           
  4633                           ;lcd.c: 68:     LCD_String(msg);
  4634  002030  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  4635  002034  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  4636  002038  EC5B  F00F         	call	_LCD_String	;wreg free
  4637  00203C  0012               	return		;funcret
  4638  00203E                     __end_of_LCD_String_xy:
  4639                           	opt callstack 0
  4640                           
  4641 ;; *************** function _LCD_String *****************
  4642 ;; Defined at:
  4643 ;;		line 51 in file "lcd.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  4646 ;;		 -> STR_4(4), STR_3(4), main@Soil(10), main@Temperature(10), 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4658 ;;      Params:         2       0       0       0       0       0       0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4661 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4662 ;;Total ram usage:        2 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:    1
  4665 ;; This function calls:
  4666 ;;		_LCD_Char
  4667 ;; This function is called by:
  4668 ;;		_LCD_String_xy
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text23
  4673  001EB6                     __ptext23:
  4674                           	opt callstack 0
  4675  001EB6                     _LCD_String:
  4676                           	opt callstack 28
  4677                           
  4678                           ;lcd.c: 52:     while (( * msg) != 0) {
  4679                           
  4680                           ;incstack = 0
  4681  001EB6  D014               	goto	l2079
  4682  001EB8                     l2075:
  4683                           
  4684                           ;lcd.c: 53:         LCD_Char( * msg);
  4685  001EB8  C003  FFF6         	movff	LCD_String@msg,tblptrl
  4686  001EBC  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4687  001EC0  6AF8               	clrf	tblptru,c
  4688  001EC2  0E07               	movlw	(high __ramtop+-1)
  4689  001EC4  64F7               	cpfsgt	tblptrh,c
  4690  001EC6  D003               	bra	u1837
  4691  001EC8  0008               	tblrd		*
  4692  001ECA  50F5               	movf	tablat,w,c
  4693  001ECC  D005               	bra	u1830
  4694  001ECE                     u1837:
  4695  001ECE  CFF6 FFE1          	movff	tblptrl,fsr1l
  4696  001ED2  CFF7 FFE2          	movff	tblptrh,fsr1h
  4697  001ED6  50E7               	movf	indf1,w,c
  4698  001ED8                     u1830:
  4699  001ED8  EC77  F010         	call	_LCD_Char
  4700                           
  4701                           ;lcd.c: 54:         msg++;
  4702  001EDC  4A03               	infsnz	LCD_String@msg,f,c
  4703  001EDE  2A04               	incf	LCD_String@msg+1,f,c
  4704  001EE0                     l2079:
  4705                           
  4706                           ;lcd.c: 52:     while (( * msg) != 0) {
  4707  001EE0  C003  FFF6         	movff	LCD_String@msg,tblptrl
  4708  001EE4  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4709  001EE8  6AF8               	clrf	tblptru,c
  4710  001EEA  0E07               	movlw	(high __ramtop+-1)
  4711  001EEC  64F7               	cpfsgt	tblptrh,c
  4712  001EEE  D003               	bra	u1847
  4713  001EF0  0008               	tblrd		*
  4714  001EF2  50F5               	movf	tablat,w,c
  4715  001EF4  D005               	bra	u1840
  4716  001EF6                     u1847:
  4717  001EF6  CFF6 FFE1          	movff	tblptrl,fsr1l
  4718  001EFA  CFF7 FFE2          	movff	tblptrh,fsr1h
  4719  001EFE  50E7               	movf	indf1,w,c
  4720  001F00                     u1840:
  4721  001F00  0900               	iorlw	0
  4722  001F02  B4D8               	btfsc	status,2,c
  4723  001F04  0012               	return	
  4724  001F06  D7D8               	goto	l2075
  4725  001F08                     __end_of_LCD_String:
  4726                           	opt callstack 0
  4727                           
  4728 ;; *************** function _LCD_Char *****************
  4729 ;; Defined at:
  4730 ;;		line 42 in file "lcd.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  dat             1    wreg     unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  dat             1    1[COMRAM] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4744 ;;      Params:         0       0       0       0       0       0       0       0       0
  4745 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4746 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4747 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4748 ;;Total ram usage:        2 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_LCD_String
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text24
  4758  0020EE                     __ptext24:
  4759                           	opt callstack 0
  4760  0020EE                     _LCD_Char:
  4761                           	opt callstack 28
  4762                           
  4763                           ;incstack = 0
  4764                           ;LCD_Char@dat stored from wreg
  4765  0020EE  6E02               	movwf	LCD_Char@dat,c
  4766                           
  4767                           ;lcd.c: 43:     LATB = dat;
  4768  0020F0  C002  FF8A         	movff	LCD_Char@dat,3978	;volatile
  4769                           
  4770                           ;lcd.c: 44:     LATD0 = 1;
  4771  0020F4  808C               	bsf	3980,0,c	;volatile
  4772                           
  4773                           ;lcd.c: 45:     LATD1 = 1;
  4774  0020F6  828C               	bsf	3980,1,c	;volatile
  4775                           
  4776                           ;lcd.c: 46:     __nop();
  4777  0020F8  F000               	nop	
  4778                           
  4779                           ;lcd.c: 47:     LATD1 = 0;
  4780  0020FA  928C               	bcf	3980,1,c	;volatile
  4781                           
  4782                           ;lcd.c: 48:     _delay((unsigned long)((1)*(8000000/4000.0)));
  4783  0020FC  0E03               	movlw	3
  4784  0020FE  6E01               	movwf	??_LCD_Char& (0+255),c
  4785  002100  0E98               	movlw	152
  4786  002102                     u2797:
  4787  002102  2EE8               	decfsz	wreg,f,c
  4788  002104  D7FE               	bra	u2797
  4789  002106  2E01               	decfsz	??_LCD_Char& (0+255),f,c
  4790  002108  D7FC               	bra	u2797
  4791  00210A  0012               	return		;funcret
  4792  00210C                     __end_of_LCD_Char:
  4793                           	opt callstack 0
  4794                           
  4795 ;; *************** function _LCD_Init *****************
  4796 ;; Defined at:
  4797 ;;		line 19 in file "lcd.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, cstack
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4811 ;;      Params:         0       0       0       0       0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4813 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4814 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4815 ;;Total ram usage:        1 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    1
  4818 ;; This function calls:
  4819 ;;		_LCD_Command
  4820 ;; This function is called by:
  4821 ;;		_main
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text25
  4826  002070                     __ptext25:
  4827                           	opt callstack 0
  4828  002070                     _LCD_Init:
  4829                           	opt callstack 29
  4830                           
  4831                           ;lcd.c: 20:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4832                           
  4833                           ;incstack = 0
  4834  002070  0E27               	movlw	39
  4835  002072  6E03               	movwf	??_LCD_Init& (0+255),c
  4836  002074  0EF5               	movlw	245
  4837  002076                     u2807:
  4838  002076  2EE8               	decfsz	wreg,f,c
  4839  002078  D7FE               	bra	u2807
  4840  00207A  2E03               	decfsz	??_LCD_Init& (0+255),f,c
  4841  00207C  D7FC               	bra	u2807
  4842  00207E  F000               	nop	
  4843                           
  4844                           ;lcd.c: 21:     TRISB = 0x00;
  4845  002080  0E00               	movlw	0
  4846  002082  6E93               	movwf	3987,c	;volatile
  4847                           
  4848                           ;lcd.c: 22:     TRISD = 0x00;
  4849  002084  0E00               	movlw	0
  4850  002086  6E95               	movwf	3989,c	;volatile
  4851                           
  4852                           ;lcd.c: 23:     LCD_Command(0x38);
  4853  002088  0E38               	movlw	56
  4854  00208A  EC86  F010         	call	_LCD_Command
  4855                           
  4856                           ;lcd.c: 24:     LCD_Command(0x01);
  4857  00208E  0E01               	movlw	1
  4858  002090  EC86  F010         	call	_LCD_Command
  4859                           
  4860                           ;lcd.c: 25:     LCD_Command(0x0c);
  4861  002094  0E0C               	movlw	12
  4862  002096  EC86  F010         	call	_LCD_Command
  4863                           
  4864                           ;lcd.c: 26:     LCD_Command(0x06);
  4865  00209A  0E06               	movlw	6
  4866  00209C  EC86  F010         	call	_LCD_Command
  4867  0020A0  0012               	return		;funcret
  4868  0020A2                     __end_of_LCD_Init:
  4869                           	opt callstack 0
  4870                           
  4871 ;; *************** function _LCD_Clear *****************
  4872 ;; Defined at:
  4873 ;;		line 29 in file "lcd.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, cstack
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4887 ;;      Params:         0       0       0       0       0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4890 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4891 ;;Total ram usage:        0 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    1
  4894 ;; This function calls:
  4895 ;;		_LCD_Command
  4896 ;; This function is called by:
  4897 ;;		_main
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text26
  4902  00213E                     __ptext26:
  4903                           	opt callstack 0
  4904  00213E                     _LCD_Clear:
  4905                           	opt callstack 29
  4906                           
  4907                           ;lcd.c: 30:     LCD_Command(0x01);
  4908                           
  4909                           ;incstack = 0
  4910  00213E  0E01               	movlw	1
  4911  002140  EC86  F010         	call	_LCD_Command
  4912  002144  0012               	return		;funcret
  4913  002146                     __end_of_LCD_Clear:
  4914                           	opt callstack 0
  4915                           
  4916 ;; *************** function _LCD_Command *****************
  4917 ;; Defined at:
  4918 ;;		line 33 in file "lcd.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  cmd             1    wreg     unsigned char 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  cmd             1    1[COMRAM] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4932 ;;      Params:         0       0       0       0       0       0       0       0       0
  4933 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4934 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4935 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4936 ;;Total ram usage:        2 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_LCD_Init
  4942 ;;		_LCD_Clear
  4943 ;;		_LCD_String_xy
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           	psect	text27
  4948  00210C                     __ptext27:
  4949                           	opt callstack 0
  4950  00210C                     _LCD_Command:
  4951                           	opt callstack 29
  4952                           
  4953                           ;incstack = 0
  4954                           ;LCD_Command@cmd stored from wreg
  4955  00210C  6E02               	movwf	LCD_Command@cmd,c
  4956                           
  4957                           ;lcd.c: 34:     LATB = cmd;
  4958  00210E  C002  FF8A         	movff	LCD_Command@cmd,3978	;volatile
  4959                           
  4960                           ;lcd.c: 35:     LATD0 = 0;
  4961  002112  908C               	bcf	3980,0,c	;volatile
  4962                           
  4963                           ;lcd.c: 36:     LATD1 = 1;
  4964  002114  828C               	bsf	3980,1,c	;volatile
  4965                           
  4966                           ;lcd.c: 37:     __nop();
  4967  002116  F000               	nop	
  4968                           
  4969                           ;lcd.c: 38:     LATD1 = 0;
  4970  002118  928C               	bcf	3980,1,c	;volatile
  4971                           
  4972                           ;lcd.c: 39:     _delay((unsigned long)((3)*(8000000/4000.0)));
  4973  00211A  0E08               	movlw	8
  4974  00211C  6E01               	movwf	??_LCD_Command& (0+255),c
  4975  00211E  0ECA               	movlw	202
  4976  002120                     u2817:
  4977  002120  2EE8               	decfsz	wreg,f,c
  4978  002122  D7FE               	bra	u2817
  4979  002124  2E01               	decfsz	??_LCD_Command& (0+255),f,c
  4980  002126  D7FC               	bra	u2817
  4981  002128  0012               	return		;funcret
  4982  00212A                     __end_of_LCD_Command:
  4983                           	opt callstack 0
  4984                           
  4985 ;; *************** function _ADC_Read *****************
  4986 ;; Defined at:
  4987 ;;		line 16 in file "adc_source.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  channel         2    0[COMRAM] int 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  digital         2    6[COMRAM] int 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  2    0[COMRAM] int 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5001 ;;      Params:         2       0       0       0       0       0       0       0       0
  5002 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5003 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5004 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5005 ;;Total ram usage:        8 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_main
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text28
  5015  001D94                     __ptext28:
  5016                           	opt callstack 0
  5017  001D94                     _ADC_Read:
  5018                           	opt callstack 30
  5019                           
  5020                           ;adc_source.c: 17:     int digital;;adc_source.c: 18:     ADCON0 = (ADCON0 & 0b11000011)
      +                           | ((channel << 2) & 0b00111100);
  5021                           
  5022                           ;incstack = 0
  5023  001D94  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  5024  001D98  90D8               	bcf	status,0,c
  5025  001D9A  3603               	rlcf	??_ADC_Read,f,c
  5026  001D9C  90D8               	bcf	status,0,c
  5027  001D9E  3603               	rlcf	??_ADC_Read,f,c
  5028  001DA0  0E3C               	movlw	60
  5029  001DA2  1603               	andwf	??_ADC_Read,f,c
  5030  001DA4  50C2               	movf	4034,w,c	;volatile
  5031  001DA6  0BC3               	andlw	195
  5032  001DA8  1003               	iorwf	??_ADC_Read,w,c
  5033  001DAA  6EC2               	movwf	4034,c	;volatile
  5034                           
  5035                           ;adc_source.c: 21:     ADCON0 |= ((1 << ADON) | (1 << GO));
  5036  001DAC  A2C2               	btfss	4034,1,c	;volatile
  5037  001DAE  D003               	goto	u1870
  5038  001DB0  6A03               	clrf	??_ADC_Read& (0+255),c
  5039  001DB2  2A03               	incf	??_ADC_Read& (0+255),f,c
  5040  001DB4  D001               	goto	u1888
  5041  001DB6                     u1870:
  5042  001DB6  6A03               	clrf	??_ADC_Read& (0+255),c
  5043  001DB8                     u1888:
  5044  001DB8  0E01               	movlw	1
  5045  001DBA  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  5046  001DBC  2A03               	incf	??_ADC_Read,f,c
  5047  001DBE  D002               	goto	u1894
  5048  001DC0                     u1895:
  5049  001DC0  90D8               	bcf	status,0,c
  5050  001DC2  3604               	rlcf	??_ADC_Read+1,f,c
  5051  001DC4                     u1894:
  5052  001DC4  2E03               	decfsz	??_ADC_Read,f,c
  5053  001DC6  D7FC               	goto	u1895
  5054  001DC8  A0C2               	btfss	4034,0,c	;volatile
  5055  001DCA  D003               	goto	u1900
  5056  001DCC  6A05               	clrf	(??_ADC_Read+2)& (0+255),c
  5057  001DCE  2A05               	incf	(??_ADC_Read+2)& (0+255),f,c
  5058  001DD0  D001               	goto	u1918
  5059  001DD2                     u1900:
  5060  001DD2  6A05               	clrf	(??_ADC_Read+2)& (0+255),c
  5061  001DD4                     u1918:
  5062  001DD4  0E01               	movlw	1
  5063  001DD6  6E06               	movwf	(??_ADC_Read+3)& (0+255),c
  5064  001DD8  2A05               	incf	??_ADC_Read+2,f,c
  5065  001DDA  D002               	goto	u1924
  5066  001DDC                     u1925:
  5067  001DDC  90D8               	bcf	status,0,c
  5068  001DDE  3606               	rlcf	??_ADC_Read+3,f,c
  5069  001DE0                     u1924:
  5070  001DE0  2E05               	decfsz	??_ADC_Read+2,f,c
  5071  001DE2  D7FC               	goto	u1925
  5072  001DE4  5006               	movf	??_ADC_Read+3,w,c
  5073  001DE6  1004               	iorwf	??_ADC_Read+1,w,c
  5074  001DE8  12C2               	iorwf	4034,f,c	;volatile
  5075  001DEA                     l66:
  5076  001DEA  B2C2               	btfsc	4034,1,c	;volatile
  5077  001DEC  D7FE               	goto	l66
  5078                           
  5079                           ;adc_source.c: 23:     digital = (ADRESH * 256) | (ADRESL);
  5080  001DEE  50C3               	movf	4035,w,c	;volatile
  5081  001DF0  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  5082  001DF4  6A04               	clrf	(??_ADC_Read+1)& (0+255),c
  5083  001DF6  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  5084  001DFA  6A03               	clrf	??_ADC_Read,c
  5085  001DFC  1003               	iorwf	??_ADC_Read,w,c
  5086  001DFE  6E07               	movwf	ADC_Read@digital,c
  5087  001E00  5004               	movf	??_ADC_Read+1,w,c
  5088  001E02  6E08               	movwf	ADC_Read@digital+1,c
  5089                           
  5090                           ;adc_source.c: 24:     return (digital);
  5091  001E04  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  5092  001E08  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  5093  001E0C  0012               	return		;funcret
  5094  001E0E                     __end_of_ADC_Read:
  5095                           	opt callstack 0
  5096                           
  5097 ;; *************** function _ADC_Init *****************
  5098 ;; Defined at:
  5099 ;;		line 8 in file "adc_source.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1    wreg      void 
  5106 ;; Registers used:
  5107 ;;		wreg, status,2
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5113 ;;      Params:         0       0       0       0       0       0       0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5116 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5117 ;;Total ram usage:        0 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_main
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text29
  5127  00212A                     __ptext29:
  5128                           	opt callstack 0
  5129  00212A                     _ADC_Init:
  5130                           	opt callstack 30
  5131                           
  5132                           ;adc_source.c: 9:     TRISA = 0xff;
  5133                           
  5134                           ;incstack = 0
  5135  00212A  6892               	setf	3986,c	;volatile
  5136                           
  5137                           ;adc_source.c: 10:     ADCON1 = 0x00;
  5138  00212C  0E00               	movlw	0
  5139  00212E  6EC1               	movwf	4033,c	;volatile
  5140                           
  5141                           ;adc_source.c: 11:     ADCON2 = 0x92;
  5142  002130  0E92               	movlw	146
  5143  002132  6EC0               	movwf	4032,c	;volatile
  5144                           
  5145                           ;adc_source.c: 12:     ADRESH = 0;
  5146  002134  0E00               	movlw	0
  5147  002136  6EC4               	movwf	4036,c	;volatile
  5148                           
  5149                           ;adc_source.c: 13:     ADRESL = 0;
  5150  002138  0E00               	movlw	0
  5151  00213A  6EC3               	movwf	4035,c	;volatile
  5152  00213C  0012               	return		;funcret
  5153  00213E                     __end_of_ADC_Init:
  5154                           	opt callstack 0
  5155                           
  5156                           	psect	rparam
  5157  0000                     tosu	equ	0xFFF
  5158                           tosh	equ	0xFFE
  5159                           tosl	equ	0xFFD
  5160                           stkptr	equ	0xFFC
  5161                           pclatu	equ	0xFFB
  5162                           pclath	equ	0xFFA
  5163                           pcl	equ	0xFF9
  5164                           tblptru	equ	0xFF8
  5165                           tblptrh	equ	0xFF7
  5166                           tblptrl	equ	0xFF6
  5167                           tablat	equ	0xFF5
  5168                           prodh	equ	0xFF4
  5169                           prodl	equ	0xFF3
  5170                           indf0	equ	0xFEF
  5171                           postinc0	equ	0xFEE
  5172                           postdec0	equ	0xFED
  5173                           preinc0	equ	0xFEC
  5174                           plusw0	equ	0xFEB
  5175                           fsr0h	equ	0xFEA
  5176                           fsr0l	equ	0xFE9
  5177                           wreg	equ	0xFE8
  5178                           indf1	equ	0xFE7
  5179                           postinc1	equ	0xFE6
  5180                           postdec1	equ	0xFE5
  5181                           preinc1	equ	0xFE4
  5182                           plusw1	equ	0xFE3
  5183                           fsr1h	equ	0xFE2
  5184                           fsr1l	equ	0xFE1
  5185                           bsr	equ	0xFE0
  5186                           indf2	equ	0xFDF
  5187                           postinc2	equ	0xFDE
  5188                           postdec2	equ	0xFDD
  5189                           preinc2	equ	0xFDC
  5190                           plusw2	equ	0xFDB
  5191                           fsr2h	equ	0xFDA
  5192                           fsr2l	equ	0xFD9
  5193                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      95
    BANK0           160     53      87
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S895_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    memset@dest	PTR void  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    memset@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[4]), STR_3(CODE[4]), main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[4]), STR_3(CODE[4]), main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    sp__memset	PTR void  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___xxtofl->_ADC_Read
    ___flmul->___xxtofl
    ___flge->___xxtofl
    ___fldiv->___flmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   18796
                                             88 COMRAM     1     1      0
                                             18 BANK0     35    35      0
                           _ADC_Init
                           _ADC_Read
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _memset
                       _servoRotate0
                      _servoRotate90
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   10109
                                              0 BANK0     18    10      8
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9604
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    9247
                                             63 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3157
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _servoRotate90                                        3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate0                                         3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    1175
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     854
                                              8 COMRAM    14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             22 COMRAM    25    17      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    1094
                                             22 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1551
                                             47 COMRAM    25    17      8
                           _ADC_Read (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     908
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     143
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      22
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             8     6      2     197
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   ___fldiv
     _ADC_Read (ARG)
     ___flmul (ARG)
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl (ARG)
       _ADC_Read (ARG)
   ___flge
     ___xxtofl (ARG)
       _ADC_Read (ARG)
   ___flmul
     _ADC_Read (ARG)
     ___xxtofl (ARG)
       _ADC_Read (ARG)
   ___fltol
   ___xxtofl
     _ADC_Read (ARG)
   _memset
   _servoRotate0
   _servoRotate90
   _sprintf
     ___fltol (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     35      57       5       54.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B6      20        0.0%
DATA                 0      0      B6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jun 03 20:42:16 2019

           ___fldiv@aexp 0048             ___fldiv@bexp 0047             ___fldiv@sign 0040  
           ?_LCD_Command 0001                       l66 1DEA                       _GO 007E11  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000              ?_LCD_String 0003  
          servoRotate0@i 0002             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
            __CFG_WDT$ON 000000                      l120 1F5E                      l115 1F9C  
                    l149 1D2C                      l167 1240                      l169 1248  
                    l470 1B68                      l800 1126                      l801 1122  
                    l819 0C74                      l836 0F12                      l828 0E8C  
                    l860 177C                      l829 0E88                      l880 2066  
                    l867 17FA                      l789 10B8             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _abs 203E                      _pad 1CFE  
                    wreg 000FE8             ___flmul@aexp 0028             ___flmul@bexp 0029  
         servoRotate90@i 0002             ___flmul@sign 0023             ___flmul@temp 002E  
           ___flmul@prod 002A              LCD_Char@dat 0002             ___fltol@exp1 000A  
                   ?_abs 0013                     l2211 0F72                     l2043 15A0  
                   l2027 14B2                     l2141 2030                     l2037 1564  
                   l2053 15C2                     l2231 0FB2                     l2215 0F76  
                   l2047 15AA                     l2137 2022                     l2321 11B8  
                   l2313 116A                     l2153 18C2                     l2075 1EB8  
                   l2243 0FEA                     l2235 0FB6                     l2317 118E  
                   l2173 19A6                     l2165 195E                     l2085 1E22  
                   l2079 1EE0                     l2327 11C4                     l2351 0C24  
                   l2511 1C0C                     l2167 1990                     l2159 1926  
                   l2087 1E48                     l2329 11C6                     l2281 10B6  
                   l2257 1018                     l2249 1000                     l2425 0E52  
                   l2353 0C34                     l2521 1C24                     l1801 1FDC  
                   l2275 1090                     l2267 1068                     l2419 0E34  
                   l2523 1C30                     l2515 1C1C                     l1811 20B0  
                   l2293 10EC                     l2461 0F30                     l2445 0ED0  
                   l2349 0C20                     l1805 1FF2                     l1821 1D16  
                   l2287 10CE                     l2471 1B08                     l2367 0C60  
                   l2551 17E2                     l1831 1D4E                     l1911 1A76  
                   l1903 1A1A                     l2449 0EEE                     l2377 0C92  
                   l2369 0C64                     l2529 1C4C                     l2545 17AA  
                   l1809 20AC                     l1825 1D24                     l1905 1A2E  
                   l2625 0B16                     l2475 1B3C                     l2547 17B0  
                   l2539 178C                     l1835 1D7A                     l1827 1D36  
                   l1851 1622                     l1915 1A8C                     l2627 0B1A  
                   l2485 1BA0                     l2557 1820                     l2549 17BC  
                   l2637 0BE6                     l2479 1B52                     l2495 1BC2  
                   l2575 186C                     l2559 182C                     l1791 1C76  
                   l1927 1F1A                     l1863 1670                     l1919 1AB2  
                   l1943 1224                     l1929 1F26                     l1865 1684  
                   l1857 164A                     l1961 1272                     l1883 171C  
                   l1875 16E0                     l1971 136A                     l2595 084A  
                   l1957 1262                     ?_pad 0011                     l1879 16F6  
                   l1895 19DC                     l1991 13CE                     l1899 1A00  
                   l1995 13E6                     _ADON 007E10                     STR_1 0801  
                   STR_2 0807                     STR_3 0810                     STR_4 080C  
                   u2000 1FD0                     u2010 1F92                     u1410 1CB6  
                   u2220 1178                     u2230 119C                     _LATB 000F8A  
                   u1511 1650                     u2320 0C80                     u2410 0EDE  
                   u2330 0DF6                     u1530 1688                     u2180 111C  
                   u2420 0EFC                     u2500 1BE0                     u1700 1378  
                   u1390 1C6E                     u1630 11F6                     u2335 0DEC  
                   u1480 204C                     u1720 139A                     u1640 11F8  
                   u2505 1BD6                     u1721 1398                     u2370 0E82  
                   u1730 13A8                     u1810 14E6                     u1900 1DD2  
                   u2540 1C36                     u2620 1836                     u1740 13AC  
                   u1830 1ED8                     u1590 1A32                     u1670 1236  
                   u1840 1F00                     u1760 13B8                     u2490 1BB0  
                   u1690 125C                     u1924 1DE0                     u2660 0A84  
                   u1925 1DDC                     u1837 1ECE                     u1918 1DD4  
                   u1870 1DB6                     u2807 2076                     u1847 1EF6  
                   u2680 0AC0                     u2817 2120                     u2745 0BF0  
                   u2746 0BF2                     u2757 1F66                     u1894 1DC4  
                   u2678 0A86                     u1895 1DC0                     u2767 1F76  
                   u1888 1DB8                     u2777 1FA4                     u2698 0AC2  
                   u2787 1FB6                     u2797 2102                     abs@a 0013  
                   _dbuf 0097                     _ctoa 1F08                     _main 0816  
                   _dtoa 11CE       __size_of_LCD_Clear 0008                     _prec 005C  
                   _nout 0095                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9         __end_of_ADC_Init 213E         __end_of_ADC_Read 1E0E  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000          ___fldiv@new_exp 0041          ??_servoRotate90 0001  
          _LCD_String_xy 200A            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_abs 0015                    ??_pad 0017         __end_of_LCD_Char 210C  
       __end_of_LCD_Init 20A2            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
          ___fltol@sign1 0009          __end_of___aodiv 173E                    ?_ctoa 001C  
                  ?_main 0001                    ?_dtoa 001C          __end_of___aomod 1AD4  
        __end_of___fldiv 11CE          __end_of___flmul 0F46          __end_of___fltol 1C5E  
                  _LATD0 007C60                    _LATD1 007C61             vfpfcnvrt@fmt 0042  
          __CFG_USBDIV$1 000000                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000             main@humidity 0089  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _flags 005E                    _fputc 1C5E  
                  _fputs 1FD2                    pad@fp 0011                    _width 005A  
                  ctoa@c 001E                    _putch 2146                    ctoa@w 001F  
                  dtoa@d 001E                    dtoa@i 003E                    dtoa@n 0036  
                  dtoa@p 0030                    dtoa@s 0034                    dtoa@w 0032  
                  tablat 000FF5                    status 000FD8      __size_of_LCD_String 0052  
        __end_of_sprintf 1EB6      main@max_temperature 008B           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000           ?_LCD_String_xy 0005          __initialization 20CC  
           __end_of_ctoa 1F56             __end_of_main 0BF4             __end_of_dtoa 1410  
                 ??_ctoa 001F                   ??_main 0059                   ??_dtoa 0026  
      __end_of_LCD_Clear 2146            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_fputc 0001  
                 ?_fputs 000A                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 ?_putch 0001         LCD_String_xy@msg 0006         LCD_String_xy@pos 0005  
       LCD_String_xy@row 0008                   _OSCCON 000FD3         __end_of___xxtofl 187E  
         __CFG_XINST$OFF 000000             vfprintf@cfmt 0057                   ___flge 1AD4  
              ??___aodiv 0011                ??___aomod 0011                ??___fldiv 0038  
         __CFG_STVREN$ON 000000                ??___flmul 001F                ??___fltol 0005  
        ADC_Read@channel 0001                   _memset 187E          ADC_Read@digital 0007  
                 clear_0 20D2                   pad@buf 0013                   ctoa@fp 001C  
   __size_of_LCD_Command 001E                   dtoa@fp 001C                   _strlen 20A2  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ?_ADC_Init 0001                ?_ADC_Read 0001  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 1E64  
              ??_sprintf 0059          __CFG_FOSC$EC_EC 000000               ___flge@ff1 0017  
             ___flge@ff2 001B             ___xxtofl@arg 0013             ___xxtofl@exp 0012  
           ___xxtofl@val 0009                ?_LCD_Char 0001               __accesstop 0060  
__end_of__initialization 20E4                ?_LCD_Init 0001          ??_LCD_String_xy 0008  
          ___rparam_used 000001               ___fltol@f1 0001           __pcstackCOMRAM 0001  
          __end_of_fputc 1CFE            __end_of_fputs 200A            __end_of_putch 2148  
           ??_LCD_String 0005               ??_ADC_Init 0001               ??_ADC_Read 0003  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
             __pbssBANK0 0095               ??_LCD_Char 0001               ??_LCD_Init 0003  
     __end_of_LCD_String 1F08                  ?___flge 0017          main@Temperature 0072  
                ?_memset 0001                  ?_strlen 0001                ?___xxtofl 0009  
     __size_of_vfpfcnvrt 01E6          __CFG_VREGEN$OFF 000000            LCD_String@msg 0003  
                __Hparam 0000                  __Lparam 0000    __end_of_servoRotate90 1F94  
        __size_of___flge 00D0                  ___aodiv 15F6                  ___aomod 19B0  
                ___fldiv 0F46                  ___flmul 0BF4                  ___fltol 1BA4  
              ?_vfprintf 0051             __psmallconst 0800                  __pcinit 20CC  
        __size_of_memset 0132                  __ramtop 0800                  __ptext0 0816  
                __ptext1 1E64                  __ptext2 1E0E                  __ptext3 1410  
                __ptext4 11CE                  __ptext5 203E                  __ptext6 19B0  
                __ptext7 15F6                  __ptext8 1F08                  __ptext9 1CFE  
        __size_of_strlen 002A             __size_of_abs 0032             __size_of_pad 0096  
             ??___xxtofl 000D                _LCD_Clear 213E                  _sprintf 1E64  
   end_of_initialization 20E4                  fputc@fp 0003                  memset@c 0003  
                memset@k 0009                  memset@n 0005                  memset@s 000B  
         LCD_Command@cmd 0002            __Lmediumconst 0000                  fputs@fp 000C  
      __end_of_vfpfcnvrt 15F6            ?_servoRotate0 0001                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0057                  strlen@a 0003                  strlen@s 0001  
          ___xxtofl@sign 0011                _TRISAbits 000F92                _TRISCbits 000F94  
             ?_LCD_Clear 0001              ___fldiv@grs 0043              ___fldiv@rem 003C  
      __size_of_ADC_Init 0014        __size_of_ADC_Read 007A              ___flmul@grs 0024  
      __size_of_LCD_Char 001E        __size_of_LCD_Init 0032      main@min_temperature 0086  
         ??_servoRotate0 0001            ??_LCD_Command 0001           __end_of___flge 1BA4  
            vfpfcnvrt@ap 0044              vfpfcnvrt@fp 0040              vfpfcnvrt@ll 0048  
         __end_of_memset 19B0           __end_of_strlen 20CC      start_initialization 20CC  
            __end_of_abs 2070              __end_of_pad 1D94    __end_of_LCD_String_xy 203E  
            vfprintf@fmt 0053                 ??___flge 001F         __CFG_LPT1OSC$OFF 000000  
               ??_memset 0007               memset@dest 0001                 ??_strlen 0003  
              ___fldiv@a 0034                ___fldiv@b 0030      __end_of_LCD_Command 212A  
              ___flmul@a 001B                ___flmul@b 0017              __pbssCOMRAM 005A  
          __pcstackBANK0 0060         ___aodiv@dividend 0001              ??_LCD_Clear 0003  
      __size_of___xxtofl 0140                 ?___aodiv 0001                 ?___aomod 0001  
               ?___fldiv 0030         ___aodiv@quotient 0013                 ?___flmul 0017  
               ?___fltol 0001        __size_of_vfprintf 0056              __smallconst 0800  
               _ADC_Init 212A                 _ADC_Read 1D94     __end_of_servoRotate0 1FD2  
  LCD_String_xy@location 0009                 ?_sprintf 0060           __size_of_fputc 00A0  
         __size_of_fputs 0038           __size_of_putch 0002                 _LCD_Char 20EE  
               _LCD_Init 2070                 _LATAbits 000F89                 _LATCbits 000F8B  
       __CFG_WDTPS$32768 000000              _LCD_Command 210C                _vfpfcnvrt 1410  
             _ADCON0bits 000FC2               vfpfcnvrt@c 0050   __size_of_servoRotate90 003E  
               __Hrparam 0000               vfprintf@ap 0055                 __Lrparam 0000  
             vfprintf@fp 0051         __size_of___aodiv 0148         __size_of___aomod 0124  
       __size_of___fldiv 0288         __size_of___flmul 0352         __size_of___fltol 00BA  
             ?_vfpfcnvrt 0040          ___aodiv@divisor 0009          ___aodiv@counter 0011  
             sprintf@fmt 0062                 ___xxtofl 173E                 _main$211 0088  
               _dtoa$427 002E                 __ptext10 20A2                 __ptext11 1FD2  
               __ptext20 1AD4                 __ptext12 1C5E                 __ptext21 0F46  
               __ptext13 2146                 __ptext22 200A                 __ptext14 1F56  
               __ptext23 1EB6                 __ptext15 1F94                 __ptext24 20EE  
               __ptext16 187E                 __ptext25 2070                 __ptext17 173E  
               __ptext26 213E                 __ptext18 1BA4                 __ptext27 210C  
               __ptext19 0BF4                 __ptext28 1D94                 __ptext29 212A  
       __size_of_sprintf 0052            __size_of_ctoa 004E            __size_of_main 03DE  
          __size_of_dtoa 0242            _servoRotate90 1F56                 _vfprintf 1E0E  
               main@Soil 007C                 main@temp 0091                 main@soil 008D  
             _LCD_String 1EB6         ___aomod@dividend 0001    __CFG_CPUDIV$OSC1_PLL2 000000  
  __size_of_servoRotate0 003E                sprintf@ap 006A           ?_servoRotate90 0001  
           _servoRotate0 1F94          ___aomod@divisor 0009              ??_vfpfcnvrt 0046  
        ___aomod@counter 0011                 sprintf@f 006C                 sprintf@s 0060  
 __size_of_LCD_String_xy 0034             ___aodiv@sign 0012             ___aomod@sign 0012  
