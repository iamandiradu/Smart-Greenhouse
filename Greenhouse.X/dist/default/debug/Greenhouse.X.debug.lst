

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jun 03 01:43:40 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     _LATCbits	set	3979
    79  0000                     _LATB	set	3978
    80  0000                     _TRISD	set	3989
    81  0000                     _TRISB	set	3987
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADCON0	set	4034
    84  0000                     _ADRESL	set	4035
    85  0000                     _ADRESH	set	4036
    86  0000                     _ADCON2	set	4032
    87  0000                     _ADCON1	set	4033
    88  0000                     _LATAbits	set	3977
    89  0000                     _TRISAbits	set	3986
    90  0000                     _TRISC	set	3988
    91  0000                     _TRISA	set	3986
    92  0000                     _OSCCON	set	4051
    93  0000                     _LATD1	set	31841
    94  0000                     _LATD0	set	31840
    95  0000                     _GO	set	32273
    96  0000                     _ADON	set	32272
    97                           
    98                           	psect	smallconst
    99  000800                     __psmallconst:
   100                           	opt callstack 0
   101  000800  00                 	db	0
   102  000801                     STR_1:
   103  000801  25                 	db	37
   104  000802  64                 	db	100	;'d'
   105  000803  25                 	db	37
   106  000804  63                 	db	99	;'c'
   107  000805  43                 	db	67	;'C'
   108  000806  00                 	db	0
   109  000807                     STR_2:
   110  000807  25                 	db	37
   111  000808  64                 	db	100	;'d'
   112  000809  25                 	db	37
   113  00080A  25                 	db	37
   114  00080B  00                 	db	0
   115  00080C                     STR_4:
   116  00080C  48                 	db	72	;'H'
   117  00080D  3A                 	db	58	;':'
   118  00080E  20                 	db	32
   119  00080F  00                 	db	0
   120  000810                     STR_3:
   121  000810  54                 	db	84	;'T'
   122  000811  3A                 	db	58	;':'
   123  000812  20                 	db	32
   124  000813  00                 	db	0
   125                           
   126                           ; #config settings
   127  000814  00                 	db	0	; dummy byte at the end
   128  0000                     
   129                           	psect	cinit
   130  002044                     __pcinit:
   131                           	opt callstack 0
   132  002044                     start_initialization:
   133                           	opt callstack 0
   134  002044                     __initialization:
   135                           	opt callstack 0
   136                           
   137                           ; Clear objects allocated to BANK0 (34 bytes)
   138  002044  EE00  F08F         	lfsr	0,__pbssBANK0
   139  002048  0E22               	movlw	34
   140  00204A                     clear_0:
   141  00204A  6AEE               	clrf	postinc0,c
   142  00204C  06E8               	decf	wreg,f,c
   143  00204E  E1FD               	bnz	clear_0
   144                           
   145                           ; Clear objects allocated to COMRAM (6 bytes)
   146  002050  6A5F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   147  002052  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   148  002054  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   149  002056  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   150  002058  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   151  00205A  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   152  00205C                     end_of_initialization:
   153                           	opt callstack 0
   154  00205C                     __end_of__initialization:
   155                           	opt callstack 0
   156  00205C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   157  00205E  6EF8               	movwf	tblptru,c
   158  002060  0100               	movlb	0
   159  002062  EF0B  F004         	goto	_main	;jump to C main() function
   160                           
   161                           	psect	bssCOMRAM
   162  00005A                     __pbssCOMRAM:
   163                           	opt callstack 0
   164  00005A                     _width:
   165                           	opt callstack 0
   166  00005A                     	ds	2
   167  00005C                     _prec:
   168                           	opt callstack 0
   169  00005C                     	ds	2
   170  00005E                     _flags:
   171                           	opt callstack 0
   172  00005E                     	ds	2
   173                           
   174                           	psect	bssBANK0
   175  00008F                     __pbssBANK0:
   176                           	opt callstack 0
   177  00008F                     _nout:
   178                           	opt callstack 0
   179  00008F                     	ds	2
   180  000091                     _dbuf:
   181                           	opt callstack 0
   182  000091                     	ds	32
   183                           
   184                           	psect	cstackBANK0
   185  000060                     __pcstackBANK0:
   186                           	opt callstack 0
   187  000060                     ?_sprintf:
   188                           	opt callstack 0
   189  000060                     sprintf@s:
   190                           	opt callstack 0
   191                           
   192                           ; 2 bytes @ 0x0
   193  000060                     	ds	2
   194  000062                     sprintf@fmt:
   195                           	opt callstack 0
   196                           
   197                           ; 2 bytes @ 0x2
   198  000062                     	ds	8
   199  00006A                     sprintf@ap:
   200                           	opt callstack 0
   201                           
   202                           ; 2 bytes @ 0xA
   203  00006A                     	ds	2
   204  00006C                     sprintf@f:
   205                           	opt callstack 0
   206                           
   207                           ; 6 bytes @ 0xC
   208  00006C                     	ds	6
   209  000072                     main@Temperature:
   210                           	opt callstack 0
   211                           
   212                           ; 10 bytes @ 0x12
   213  000072                     	ds	10
   214  00007C                     main@Soil:
   215                           	opt callstack 0
   216                           
   217                           ; 10 bytes @ 0x1C
   218  00007C                     	ds	10
   219  000086                     _main$171:
   220                           	opt callstack 0
   221                           
   222                           ; 1 bytes @ 0x26
   223  000086                     	ds	1
   224  000087                     main@soil:
   225                           	opt callstack 0
   226                           
   227                           ; 4 bytes @ 0x27
   228  000087                     	ds	4
   229  00008B                     main@temp:
   230                           	opt callstack 0
   231                           
   232                           ; 4 bytes @ 0x2B
   233  00008B                     	ds	4
   234                           
   235                           	psect	cstackCOMRAM
   236  000001                     __pcstackCOMRAM:
   237                           	opt callstack 0
   238  000001                     ??_servoRotate0:
   239  000001                     ??_servoRotate90:
   240  000001                     ??_LCD_Command:
   241  000001                     ??_LCD_Char:
   242  000001                     ?_ADC_Read:
   243                           	opt callstack 0
   244  000001                     ?_strlen:
   245                           	opt callstack 0
   246  000001                     ?___fltol:
   247                           	opt callstack 0
   248  000001                     ?___aodiv:
   249                           	opt callstack 0
   250  000001                     ?___aomod:
   251                           	opt callstack 0
   252  000001                     ADC_Read@channel:
   253                           	opt callstack 0
   254  000001                     memset@dest:
   255                           	opt callstack 0
   256  000001                     fputc@c:
   257                           	opt callstack 0
   258  000001                     strlen@s:
   259                           	opt callstack 0
   260  000001                     ___flge@ff1:
   261                           	opt callstack 0
   262  000001                     ___fltol@f1:
   263                           	opt callstack 0
   264  000001                     ___aodiv@dividend:
   265                           	opt callstack 0
   266  000001                     ___aomod@dividend:
   267                           	opt callstack 0
   268                           
   269                           ; 8 bytes @ 0x0
   270  000001                     	ds	1
   271  000002                     LCD_Command@cmd:
   272                           	opt callstack 0
   273  000002                     LCD_Char@dat:
   274                           	opt callstack 0
   275  000002                     servoRotate0@i:
   276                           	opt callstack 0
   277  000002                     servoRotate90@i:
   278                           	opt callstack 0
   279                           
   280                           ; 2 bytes @ 0x1
   281  000002                     	ds	1
   282  000003                     ??_LCD_Init:
   283  000003                     ??_ADC_Read:
   284  000003                     LCD_String@msg:
   285                           	opt callstack 0
   286  000003                     memset@c:
   287                           	opt callstack 0
   288  000003                     fputc@fp:
   289                           	opt callstack 0
   290  000003                     strlen@a:
   291                           	opt callstack 0
   292                           
   293                           ; 2 bytes @ 0x2
   294  000003                     	ds	2
   295  000005                     ??_fputc:
   296  000005                     ??___fltol:
   297  000005                     LCD_String_xy@pos:
   298                           	opt callstack 0
   299  000005                     memset@n:
   300                           	opt callstack 0
   301  000005                     ___flge@ff2:
   302                           	opt callstack 0
   303                           
   304                           ; 4 bytes @ 0x4
   305  000005                     	ds	1
   306  000006                     LCD_String_xy@msg:
   307                           	opt callstack 0
   308                           
   309                           ; 2 bytes @ 0x5
   310  000006                     	ds	1
   311  000007                     ??_memset:
   312  000007                     ADC_Read@digital:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x6
   316  000007                     	ds	1
   317  000008                     LCD_String_xy@row:
   318                           	opt callstack 0
   319                           
   320                           ; 1 bytes @ 0x7
   321  000008                     	ds	1
   322  000009                     ??___flge:
   323  000009                     ?___xxtofl:
   324                           	opt callstack 0
   325  000009                     LCD_String_xy@location:
   326                           	opt callstack 0
   327  000009                     ___fltol@sign1:
   328                           	opt callstack 0
   329  000009                     memset@k:
   330                           	opt callstack 0
   331  000009                     ___xxtofl@val:
   332                           	opt callstack 0
   333  000009                     ___aodiv@divisor:
   334                           	opt callstack 0
   335  000009                     ___aomod@divisor:
   336                           	opt callstack 0
   337                           
   338                           ; 8 bytes @ 0x8
   339  000009                     	ds	1
   340  00000A                     ___fltol@exp1:
   341                           	opt callstack 0
   342  00000A                     fputs@s:
   343                           	opt callstack 0
   344                           
   345                           ; 2 bytes @ 0x9
   346  00000A                     	ds	1
   347  00000B                     memset@s:
   348                           	opt callstack 0
   349                           
   350                           ; 2 bytes @ 0xA
   351  00000B                     	ds	1
   352  00000C                     fputs@fp:
   353                           	opt callstack 0
   354                           
   355                           ; 2 bytes @ 0xB
   356  00000C                     	ds	1
   357  00000D                     ??___xxtofl:
   358                           
   359                           ; 1 bytes @ 0xC
   360  00000D                     	ds	1
   361  00000E                     fputs@c:
   362                           	opt callstack 0
   363                           
   364                           ; 1 bytes @ 0xD
   365  00000E                     	ds	1
   366  00000F                     fputs@i:
   367                           	opt callstack 0
   368                           
   369                           ; 2 bytes @ 0xE
   370  00000F                     	ds	2
   371  000011                     ?_pad:
   372                           	opt callstack 0
   373  000011                     ___aodiv@counter:
   374                           	opt callstack 0
   375  000011                     ___aomod@counter:
   376                           	opt callstack 0
   377  000011                     ___xxtofl@sign:
   378                           	opt callstack 0
   379  000011                     pad@fp:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x10
   383  000011                     	ds	1
   384  000012                     ___aodiv@sign:
   385                           	opt callstack 0
   386  000012                     ___aomod@sign:
   387                           	opt callstack 0
   388  000012                     ___xxtofl@exp:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0x11
   392  000012                     	ds	1
   393  000013                     ?_abs:
   394                           	opt callstack 0
   395  000013                     pad@buf:
   396                           	opt callstack 0
   397  000013                     abs@a:
   398                           	opt callstack 0
   399  000013                     ___xxtofl@arg:
   400                           	opt callstack 0
   401  000013                     ___aodiv@quotient:
   402                           	opt callstack 0
   403                           
   404                           ; 8 bytes @ 0x12
   405  000013                     	ds	2
   406  000015                     ??_abs:
   407  000015                     pad@p:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x14
   411  000015                     	ds	2
   412  000017                     ??_pad:
   413  000017                     ?___flmul:
   414                           	opt callstack 0
   415  000017                     ___flmul@b:
   416                           	opt callstack 0
   417                           
   418                           ; 4 bytes @ 0x16
   419  000017                     	ds	1
   420  000018                     pad@i:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x17
   424  000018                     	ds	2
   425  00001A                     pad@w:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0x19
   429  00001A                     	ds	1
   430  00001B                     ___flmul@a:
   431                           	opt callstack 0
   432                           
   433                           ; 4 bytes @ 0x1A
   434  00001B                     	ds	1
   435  00001C                     ?_ctoa:
   436                           	opt callstack 0
   437  00001C                     ?_dtoa:
   438                           	opt callstack 0
   439  00001C                     ctoa@fp:
   440                           	opt callstack 0
   441  00001C                     dtoa@fp:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x1B
   445  00001C                     	ds	2
   446  00001E                     ctoa@c:
   447                           	opt callstack 0
   448  00001E                     dtoa@d:
   449                           	opt callstack 0
   450                           
   451                           ; 8 bytes @ 0x1D
   452  00001E                     	ds	1
   453  00001F                     ??___flmul:
   454  00001F                     ctoa@w:
   455                           	opt callstack 0
   456                           
   457                           ; 2 bytes @ 0x1E
   458  00001F                     	ds	4
   459  000023                     ___flmul@sign:
   460                           	opt callstack 0
   461                           
   462                           ; 1 bytes @ 0x22
   463  000023                     	ds	1
   464  000024                     ___flmul@grs:
   465                           	opt callstack 0
   466                           
   467                           ; 4 bytes @ 0x23
   468  000024                     	ds	2
   469  000026                     ??_dtoa:
   470                           
   471                           ; 1 bytes @ 0x25
   472  000026                     	ds	2
   473  000028                     ___flmul@aexp:
   474                           	opt callstack 0
   475                           
   476                           ; 1 bytes @ 0x27
   477  000028                     	ds	1
   478  000029                     ___flmul@bexp:
   479                           	opt callstack 0
   480                           
   481                           ; 1 bytes @ 0x28
   482  000029                     	ds	1
   483  00002A                     ___flmul@prod:
   484                           	opt callstack 0
   485                           
   486                           ; 4 bytes @ 0x29
   487  00002A                     	ds	4
   488  00002E                     _dtoa$387:
   489                           	opt callstack 0
   490  00002E                     ___flmul@temp:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x2D
   494  00002E                     	ds	2
   495  000030                     ?___fldiv:
   496                           	opt callstack 0
   497  000030                     dtoa@p:
   498                           	opt callstack 0
   499  000030                     ___fldiv@b:
   500                           	opt callstack 0
   501                           
   502                           ; 4 bytes @ 0x2F
   503  000030                     	ds	2
   504  000032                     dtoa@w:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x31
   508  000032                     	ds	2
   509  000034                     dtoa@s:
   510                           	opt callstack 0
   511  000034                     ___fldiv@a:
   512                           	opt callstack 0
   513                           
   514                           ; 4 bytes @ 0x33
   515  000034                     	ds	2
   516  000036                     dtoa@n:
   517                           	opt callstack 0
   518                           
   519                           ; 8 bytes @ 0x35
   520  000036                     	ds	2
   521  000038                     ??___fldiv:
   522                           
   523                           ; 1 bytes @ 0x37
   524  000038                     	ds	4
   525  00003C                     ___fldiv@rem:
   526                           	opt callstack 0
   527                           
   528                           ; 4 bytes @ 0x3B
   529  00003C                     	ds	2
   530  00003E                     dtoa@i:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x3D
   534  00003E                     	ds	2
   535  000040                     ?_vfpfcnvrt:
   536                           	opt callstack 0
   537  000040                     ___fldiv@sign:
   538                           	opt callstack 0
   539  000040                     vfpfcnvrt@fp:
   540                           	opt callstack 0
   541                           
   542                           ; 2 bytes @ 0x3F
   543  000040                     	ds	1
   544  000041                     ___fldiv@new_exp:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0x40
   548  000041                     	ds	1
   549  000042                     vfpfcnvrt@fmt:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0x41
   553  000042                     	ds	1
   554  000043                     ___fldiv@grs:
   555                           	opt callstack 0
   556                           
   557                           ; 4 bytes @ 0x42
   558  000043                     	ds	1
   559  000044                     vfpfcnvrt@ap:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x43
   563  000044                     	ds	2
   564  000046                     ??_vfpfcnvrt:
   565                           
   566                           ; 1 bytes @ 0x45
   567  000046                     	ds	1
   568  000047                     ___fldiv@bexp:
   569                           	opt callstack 0
   570                           
   571                           ; 1 bytes @ 0x46
   572  000047                     	ds	1
   573  000048                     ___fldiv@aexp:
   574                           	opt callstack 0
   575  000048                     vfpfcnvrt@ll:
   576                           	opt callstack 0
   577                           
   578                           ; 8 bytes @ 0x47
   579  000048                     	ds	8
   580  000050                     vfpfcnvrt@c:
   581                           	opt callstack 0
   582                           
   583                           ; 1 bytes @ 0x4F
   584  000050                     	ds	1
   585  000051                     ?_vfprintf:
   586                           	opt callstack 0
   587  000051                     vfprintf@fp:
   588                           	opt callstack 0
   589                           
   590                           ; 2 bytes @ 0x50
   591  000051                     	ds	2
   592  000053                     vfprintf@fmt:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x52
   596  000053                     	ds	2
   597  000055                     vfprintf@ap:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0x54
   601  000055                     	ds	2
   602  000057                     vfprintf@cfmt:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x56
   606  000057                     	ds	2
   607  000059                     ??_main:
   608                           
   609                           ; 1 bytes @ 0x58
   610  000059                     	ds	1
   611                           
   612 ;;
   613 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   614 ;;
   615 ;; *************** function _main *****************
   616 ;; Defined at:
   617 ;;		line 10 in file "main.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  Soil           10   28[BANK0 ] unsigned char [10]
   622 ;;  Temperature    10   18[BANK0 ] unsigned char [10]
   623 ;;  temp            4   43[BANK0 ] float 
   624 ;;  soil            4   39[BANK0 ] float 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   634 ;;      Params:         0       0       0       0       0       0       0       0       0
   635 ;;      Locals:         0      29       0       0       0       0       0       0       0
   636 ;;      Temps:          1       0       0       0       0       0       0       0       0
   637 ;;      Totals:         1      29       0       0       0       0       0       0       0
   638 ;;Total ram usage:       30 bytes
   639 ;; Hardware stack levels required when called:    8
   640 ;; This function calls:
   641 ;;		_ADC_Init
   642 ;;		_ADC_Read
   643 ;;		_LCD_Clear
   644 ;;		_LCD_Init
   645 ;;		_LCD_String_xy
   646 ;;		___fldiv
   647 ;;		___flge
   648 ;;		___flmul
   649 ;;		___fltol
   650 ;;		___xxtofl
   651 ;;		_memset
   652 ;;		_servoRotate0
   653 ;;		_servoRotate90
   654 ;;		_sprintf
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661  000816                     __ptext0:
   662                           	opt callstack 0
   663  000816                     _main:
   664                           	opt callstack 23
   665                           
   666                           ;main.c: 12:     OSCCON=0x72;
   667                           
   668                           ;incstack = 0
   669  000816  0E72               	movlw	114
   670  000818  6ED3               	movwf	4051,c	;volatile
   671                           
   672                           ;main.c: 13:     char Temperature[10];;main.c: 14:     char Soil[10];;main.c: 15:     fl
      +                          oat temp;;main.c: 16:     float soil;;main.c: 18:     ADC_Init();
   673  00081A  EC51  F010         	call	_ADC_Init	;wreg free
   674                           
   675                           ;main.c: 19:     LCD_Init();
   676  00081E  ECF4  F00F         	call	_LCD_Init	;wreg free
   677                           
   678                           ;main.c: 20:     LCD_Clear();
   679  000822  EC5B  F010         	call	_LCD_Clear	;wreg free
   680                           
   681                           ;main.c: 22:     TRISA = 0x3C;
   682  000826  0E3C               	movlw	60
   683  000828  6E92               	movwf	3986,c	;volatile
   684                           
   685                           ;main.c: 23:     TRISC = 0;
   686  00082A  0E00               	movlw	0
   687  00082C  6E94               	movwf	3988,c	;volatile
   688                           
   689                           ;main.c: 26:     TRISAbits.RA2 = 0;
   690  00082E  9492               	bcf	3986,2,c	;volatile
   691                           
   692                           ;main.c: 27:     TRISAbits.RA3 = 0;
   693  000830  9692               	bcf	3986,3,c	;volatile
   694                           
   695                           ;main.c: 28:     TRISAbits.RA4 = 0;
   696  000832  9892               	bcf	3986,4,c	;volatile
   697                           
   698                           ;main.c: 29:     TRISAbits.RA5 = 0;
   699  000834  9A92               	bcf	3986,5,c	;volatile
   700                           
   701                           ;main.c: 31:     TRISC = 0;
   702  000836  0E00               	movlw	0
   703  000838  6E94               	movwf	3988,c	;volatile
   704  00083A                     l2607:
   705                           
   706                           ;main.c: 34:     {;main.c: 36:         temp = (ADC_Read(0)*4.88)/10.00;
   707  00083A  0EF6               	movlw	246
   708  00083C  6E1B               	movwf	___flmul@a,c
   709  00083E  0E28               	movlw	40
   710  000840  6E1C               	movwf	___flmul@a+1,c
   711  000842  0E9C               	movlw	156
   712  000844  6E1D               	movwf	___flmul@a+2,c
   713  000846  0E40               	movlw	64
   714  000848  6E1E               	movwf	___flmul@a+3,c
   715  00084A  0E00               	movlw	0
   716  00084C  6E02               	movwf	ADC_Read@channel+1,c
   717  00084E  0E00               	movlw	0
   718  000850  6E01               	movwf	ADC_Read@channel,c
   719  000852  EC86  F00E         	call	_ADC_Read	;wreg free
   720  000856  C001  F009         	movff	?_ADC_Read,___xxtofl@val
   721  00085A  C002  F00A         	movff	?_ADC_Read+1,___xxtofl@val+1
   722  00085E  0E00               	movlw	0
   723  000860  BE0A               	btfsc	___xxtofl@val+1,7,c
   724  000862  0EFF               	movlw	-1
   725  000864  6E0B               	movwf	___xxtofl@val+2,c
   726  000866  6E0C               	movwf	___xxtofl@val+3,c
   727  000868  0E01               	movlw	1
   728  00086A  EC5B  F00B         	call	___xxtofl
   729  00086E  C009  F017         	movff	?___xxtofl,___flmul@b
   730  000872  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
   731  000876  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
   732  00087A  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
   733  00087E  ECB6  F005         	call	___flmul	;wreg free
   734  000882  C017  F030         	movff	?___flmul,___fldiv@b
   735  000886  C018  F031         	movff	?___flmul+1,___fldiv@b+1
   736  00088A  C019  F032         	movff	?___flmul+2,___fldiv@b+2
   737  00088E  C01A  F033         	movff	?___flmul+3,___fldiv@b+3
   738  000892  0E00               	movlw	0
   739  000894  6E34               	movwf	___fldiv@a,c
   740  000896  0E00               	movlw	0
   741  000898  6E35               	movwf	___fldiv@a+1,c
   742  00089A  0E20               	movlw	32
   743  00089C  6E36               	movwf	___fldiv@a+2,c
   744  00089E  0E41               	movlw	65
   745  0008A0  6E37               	movwf	___fldiv@a+3,c
   746  0008A2  EC5F  F007         	call	___fldiv	;wreg free
   747  0008A6  C030  F08B         	movff	?___fldiv,main@temp
   748  0008AA  C031  F08C         	movff	?___fldiv+1,main@temp+1
   749  0008AE  C032  F08D         	movff	?___fldiv+2,main@temp+2
   750  0008B2  C033  F08E         	movff	?___fldiv+3,main@temp+3
   751                           
   752                           ;main.c: 37:         soil = (ADC_Read(1)*4.88)/10;
   753  0008B6  0EF6               	movlw	246
   754  0008B8  6E1B               	movwf	___flmul@a,c
   755  0008BA  0E28               	movlw	40
   756  0008BC  6E1C               	movwf	___flmul@a+1,c
   757  0008BE  0E9C               	movlw	156
   758  0008C0  6E1D               	movwf	___flmul@a+2,c
   759  0008C2  0E40               	movlw	64
   760  0008C4  6E1E               	movwf	___flmul@a+3,c
   761  0008C6  0E00               	movlw	0
   762  0008C8  6E02               	movwf	ADC_Read@channel+1,c
   763  0008CA  0E01               	movlw	1
   764  0008CC  6E01               	movwf	ADC_Read@channel,c
   765  0008CE  EC86  F00E         	call	_ADC_Read	;wreg free
   766  0008D2  C001  F009         	movff	?_ADC_Read,___xxtofl@val
   767  0008D6  C002  F00A         	movff	?_ADC_Read+1,___xxtofl@val+1
   768  0008DA  0E00               	movlw	0
   769  0008DC  BE0A               	btfsc	___xxtofl@val+1,7,c
   770  0008DE  0EFF               	movlw	-1
   771  0008E0  6E0B               	movwf	___xxtofl@val+2,c
   772  0008E2  6E0C               	movwf	___xxtofl@val+3,c
   773  0008E4  0E01               	movlw	1
   774  0008E6  EC5B  F00B         	call	___xxtofl
   775  0008EA  C009  F017         	movff	?___xxtofl,___flmul@b
   776  0008EE  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
   777  0008F2  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
   778  0008F6  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
   779  0008FA  ECB6  F005         	call	___flmul	;wreg free
   780  0008FE  C017  F030         	movff	?___flmul,___fldiv@b
   781  000902  C018  F031         	movff	?___flmul+1,___fldiv@b+1
   782  000906  C019  F032         	movff	?___flmul+2,___fldiv@b+2
   783  00090A  C01A  F033         	movff	?___flmul+3,___fldiv@b+3
   784  00090E  0E00               	movlw	0
   785  000910  6E34               	movwf	___fldiv@a,c
   786  000912  0E00               	movlw	0
   787  000914  6E35               	movwf	___fldiv@a+1,c
   788  000916  0E20               	movlw	32
   789  000918  6E36               	movwf	___fldiv@a+2,c
   790  00091A  0E41               	movlw	65
   791  00091C  6E37               	movwf	___fldiv@a+3,c
   792  00091E  EC5F  F007         	call	___fldiv	;wreg free
   793  000922  C030  F087         	movff	?___fldiv,main@soil
   794  000926  C031  F088         	movff	?___fldiv+1,main@soil+1
   795  00092A  C032  F089         	movff	?___fldiv+2,main@soil+2
   796  00092E  C033  F08A         	movff	?___fldiv+3,main@soil+3
   797                           
   798                           ;main.c: 39:         LATAbits.LATA4 = soil < 40 ? 1 : 0;
   799  000932  C087  F001         	movff	main@soil,___flge@ff1
   800  000936  C088  F002         	movff	main@soil+1,___flge@ff1+1
   801  00093A  C089  F003         	movff	main@soil+2,___flge@ff1+2
   802  00093E  C08A  F004         	movff	main@soil+3,___flge@ff1+3
   803  000942  0E00               	movlw	0
   804  000944  6E05               	movwf	___flge@ff2,c
   805  000946  0E00               	movlw	0
   806  000948  6E06               	movwf	___flge@ff2+1,c
   807  00094A  0E20               	movlw	32
   808  00094C  6E07               	movwf	___flge@ff2+2,c
   809  00094E  0E42               	movlw	66
   810  000950  6E08               	movwf	___flge@ff2+3,c
   811  000952  EC26  F00D         	call	___flge	;wreg free
   812  000956  B0D8               	btfsc	status,0,c
   813  000958  D003               	goto	u2660
   814  00095A  6A59               	clrf	??_main& (0+255),c
   815  00095C  2A59               	incf	??_main& (0+255),f,c
   816  00095E  D001               	goto	u2678
   817  000960                     u2660:
   818  000960  6A59               	clrf	??_main& (0+255),c
   819  000962                     u2678:
   820  000962  3A59               	swapf	??_main,f,c
   821  000964  5089               	movf	3977,w,c	;volatile
   822  000966  1859               	xorwf	??_main,w,c
   823  000968  0BEF               	andlw	-17
   824  00096A  1859               	xorwf	??_main,w,c
   825  00096C  6E89               	movwf	3977,c	;volatile
   826                           
   827                           ;main.c: 41:         LATAbits.LATA2 = temp < 25 ? 1 : 0;
   828  00096E  C08B  F001         	movff	main@temp,___flge@ff1
   829  000972  C08C  F002         	movff	main@temp+1,___flge@ff1+1
   830  000976  C08D  F003         	movff	main@temp+2,___flge@ff1+2
   831  00097A  C08E  F004         	movff	main@temp+3,___flge@ff1+3
   832  00097E  0E00               	movlw	0
   833  000980  6E05               	movwf	___flge@ff2,c
   834  000982  0E00               	movlw	0
   835  000984  6E06               	movwf	___flge@ff2+1,c
   836  000986  0EC8               	movlw	200
   837  000988  6E07               	movwf	___flge@ff2+2,c
   838  00098A  0E41               	movlw	65
   839  00098C  6E08               	movwf	___flge@ff2+3,c
   840  00098E  EC26  F00D         	call	___flge	;wreg free
   841  000992  B0D8               	btfsc	status,0,c
   842  000994  D003               	goto	u2680
   843  000996  6A59               	clrf	??_main& (0+255),c
   844  000998  2A59               	incf	??_main& (0+255),f,c
   845  00099A  D001               	goto	u2698
   846  00099C                     u2680:
   847  00099C  6A59               	clrf	??_main& (0+255),c
   848  00099E                     u2698:
   849  00099E  4659               	rlncf	??_main,f,c
   850  0009A0  4659               	rlncf	??_main,f,c
   851  0009A2  5089               	movf	3977,w,c	;volatile
   852  0009A4  1859               	xorwf	??_main,w,c
   853  0009A6  0BFB               	andlw	-5
   854  0009A8  1859               	xorwf	??_main,w,c
   855  0009AA  6E89               	movwf	3977,c	;volatile
   856                           
   857                           ;main.c: 45:         sprintf(Temperature, "%d%cC", (int)temp,0xdf);
   858  0009AC  0E72               	movlw	low main@Temperature
   859  0009AE  0100               	movlb	0	; () banked
   860  0009B0  6F60               	movwf	sprintf@s& (0+255),b
   861  0009B2  0E00               	movlw	high main@Temperature
   862  0009B4  6F61               	movwf	(sprintf@s+1)& (0+255),b
   863  0009B6  0E01               	movlw	low STR_1
   864  0009B8  6F62               	movwf	sprintf@fmt& (0+255),b
   865  0009BA  0E08               	movlw	high STR_1
   866  0009BC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   867  0009BE  C08B  F001         	movff	main@temp,___fltol@f1
   868  0009C2  C08C  F002         	movff	main@temp+1,___fltol@f1+1
   869  0009C6  C08D  F003         	movff	main@temp+2,___fltol@f1+2
   870  0009CA  C08E  F004         	movff	main@temp+3,___fltol@f1+3
   871  0009CE  EC8E  F00D         	call	___fltol	;wreg free
   872  0009D2  C001  F064         	movff	?___fltol,?_sprintf+4
   873  0009D6  C002  F065         	movff	?___fltol+1,?_sprintf+5
   874  0009DA  0E00               	movlw	0
   875  0009DC  0100               	movlb	0	; () banked
   876  0009DE  6F67               	movwf	(?_sprintf+7)& (0+255),b
   877  0009E0  0EDF               	movlw	223
   878  0009E2  6F66               	movwf	(?_sprintf+6)& (0+255),b
   879  0009E4  ECEE  F00E         	call	_sprintf	;wreg free
   880                           
   881                           ;main.c: 46:         sprintf(Soil, "%d%%", (int)soil,0xdf);
   882  0009E8  0E7C               	movlw	low main@Soil
   883  0009EA  0100               	movlb	0	; () banked
   884  0009EC  6F60               	movwf	sprintf@s& (0+255),b
   885  0009EE  0E00               	movlw	high main@Soil
   886  0009F0  6F61               	movwf	(sprintf@s+1)& (0+255),b
   887  0009F2  0E07               	movlw	low STR_2
   888  0009F4  6F62               	movwf	sprintf@fmt& (0+255),b
   889  0009F6  0E08               	movlw	high STR_2
   890  0009F8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   891  0009FA  C087  F001         	movff	main@soil,___fltol@f1
   892  0009FE  C088  F002         	movff	main@soil+1,___fltol@f1+1
   893  000A02  C089  F003         	movff	main@soil+2,___fltol@f1+2
   894  000A06  C08A  F004         	movff	main@soil+3,___fltol@f1+3
   895  000A0A  EC8E  F00D         	call	___fltol	;wreg free
   896  000A0E  C001  F064         	movff	?___fltol,?_sprintf+4
   897  000A12  C002  F065         	movff	?___fltol+1,?_sprintf+5
   898  000A16  0E00               	movlw	0
   899  000A18  0100               	movlb	0	; () banked
   900  000A1A  6F67               	movwf	(?_sprintf+7)& (0+255),b
   901  000A1C  0EDF               	movlw	223
   902  000A1E  6F66               	movwf	(?_sprintf+6)& (0+255),b
   903  000A20  ECEE  F00E         	call	_sprintf	;wreg free
   904                           
   905                           ;main.c: 47:         LCD_String_xy(1,0,"T: ");
   906  000A24  0E00               	movlw	0
   907  000A26  6E05               	movwf	LCD_String_xy@pos,c
   908  000A28  0E10               	movlw	low STR_3
   909  000A2A  6E06               	movwf	LCD_String_xy@msg,c
   910  000A2C  0E08               	movlw	high STR_3
   911  000A2E  6E07               	movwf	LCD_String_xy@msg+1,c
   912  000A30  0E01               	movlw	1
   913  000A32  ECC1  F00F         	call	_LCD_String_xy
   914                           
   915                           ;main.c: 48:         LCD_String_xy(1,4, Temperature);
   916  000A36  0E04               	movlw	4
   917  000A38  6E05               	movwf	LCD_String_xy@pos,c
   918  000A3A  0E72               	movlw	low main@Temperature
   919  000A3C  6E06               	movwf	LCD_String_xy@msg,c
   920  000A3E  0E00               	movlw	high main@Temperature
   921  000A40  6E07               	movwf	LCD_String_xy@msg+1,c
   922  000A42  0E01               	movlw	1
   923  000A44  ECC1  F00F         	call	_LCD_String_xy
   924                           
   925                           ;main.c: 49:         LCD_String_xy(2,0,"H: ");
   926  000A48  0E00               	movlw	0
   927  000A4A  6E05               	movwf	LCD_String_xy@pos,c
   928  000A4C  0E0C               	movlw	low STR_4
   929  000A4E  6E06               	movwf	LCD_String_xy@msg,c
   930  000A50  0E08               	movlw	high STR_4
   931  000A52  6E07               	movwf	LCD_String_xy@msg+1,c
   932  000A54  0E02               	movlw	2
   933  000A56  ECC1  F00F         	call	_LCD_String_xy
   934                           
   935                           ;main.c: 50:         LCD_String_xy(2,4, Soil);
   936  000A5A  0E04               	movlw	4
   937  000A5C  6E05               	movwf	LCD_String_xy@pos,c
   938  000A5E  0E7C               	movlw	low main@Soil
   939  000A60  6E06               	movwf	LCD_String_xy@msg,c
   940  000A62  0E00               	movlw	high main@Soil
   941  000A64  6E07               	movwf	LCD_String_xy@msg+1,c
   942  000A66  0E02               	movlw	2
   943  000A68  ECC1  F00F         	call	_LCD_String_xy
   944                           
   945                           ;main.c: 52:         memset(Temperature,0,10);
   946  000A6C  0E72               	movlw	low main@Temperature
   947  000A6E  6E01               	movwf	memset@dest,c
   948  000A70  0E00               	movlw	high main@Temperature
   949  000A72  6E02               	movwf	memset@dest+1,c
   950  000A74  0E00               	movlw	0
   951  000A76  6E04               	movwf	memset@c+1,c
   952  000A78  0E00               	movlw	0
   953  000A7A  6E03               	movwf	memset@c,c
   954  000A7C  0E00               	movlw	0
   955  000A7E  6E06               	movwf	memset@n+1,c
   956  000A80  0E0A               	movlw	10
   957  000A82  6E05               	movwf	memset@n,c
   958  000A84  ECFB  F00B         	call	_memset	;wreg free
   959                           
   960                           ;main.c: 53:         memset(Soil,0,10);
   961  000A88  0E7C               	movlw	low main@Soil
   962  000A8A  6E01               	movwf	memset@dest,c
   963  000A8C  0E00               	movlw	high main@Soil
   964  000A8E  6E02               	movwf	memset@dest+1,c
   965  000A90  0E00               	movlw	0
   966  000A92  6E04               	movwf	memset@c+1,c
   967  000A94  0E00               	movlw	0
   968  000A96  6E03               	movwf	memset@c,c
   969  000A98  0E00               	movlw	0
   970  000A9A  6E06               	movwf	memset@n+1,c
   971  000A9C  0E0A               	movlw	10
   972  000A9E  6E05               	movwf	memset@n,c
   973  000AA0  ECFB  F00B         	call	_memset	;wreg free
   974                           
   975                           ;main.c: 56:         temp < 35 ? servoRotate0() : servoRotate90();
   976  000AA4  C08B  F001         	movff	main@temp,___flge@ff1
   977  000AA8  C08C  F002         	movff	main@temp+1,___flge@ff1+1
   978  000AAC  C08D  F003         	movff	main@temp+2,___flge@ff1+2
   979  000AB0  C08E  F004         	movff	main@temp+3,___flge@ff1+3
   980  000AB4  0E00               	movlw	0
   981  000AB6  6E05               	movwf	___flge@ff2,c
   982  000AB8  0E00               	movlw	0
   983  000ABA  6E06               	movwf	___flge@ff2+1,c
   984  000ABC  0E0C               	movlw	12
   985  000ABE  6E07               	movwf	___flge@ff2+2,c
   986  000AC0  0E42               	movlw	66
   987  000AC2  6E08               	movwf	___flge@ff2+3,c
   988  000AC4  EC26  F00D         	call	___flge	;wreg free
   989  000AC8  B0D8               	btfsc	status,0,c
   990  000ACA  D003               	goto	l2635
   991  000ACC  EC86  F00F         	call	_servoRotate0	;wreg free
   992  000AD0  D002               	goto	l2637
   993  000AD2                     l2635:
   994  000AD2  EC67  F00F         	call	_servoRotate90	;wreg free
   995  000AD6                     l2637:
   996                           
   997                           ;main.c: 57:         LATAbits.LATA5 = temp > 25 && temp < 35 && soil > 40 ? 1 : 0;
   998  000AD6  0E00               	movlw	0
   999  000AD8  0100               	movlb	0	; () banked
  1000  000ADA  6F86               	movwf	_main$171& (0+255),b
  1001                           
  1002                           ; BSR set to: 0
  1003  000ADC  0E00               	movlw	0
  1004  000ADE  6E01               	movwf	___flge@ff1,c
  1005  000AE0  0E00               	movlw	0
  1006  000AE2  6E02               	movwf	___flge@ff1+1,c
  1007  000AE4  0EC8               	movlw	200
  1008  000AE6  6E03               	movwf	___flge@ff1+2,c
  1009  000AE8  0E41               	movlw	65
  1010  000AEA  6E04               	movwf	___flge@ff1+3,c
  1011  000AEC  C08B  F005         	movff	main@temp,___flge@ff2
  1012  000AF0  C08C  F006         	movff	main@temp+1,___flge@ff2+1
  1013  000AF4  C08D  F007         	movff	main@temp+2,___flge@ff2+2
  1014  000AF8  C08E  F008         	movff	main@temp+3,___flge@ff2+3
  1015  000AFC  EC26  F00D         	call	___flge	;wreg free
  1016  000B00  B0D8               	btfsc	status,0,c
  1017  000B02  D02B               	goto	l2647
  1018  000B04  C08B  F001         	movff	main@temp,___flge@ff1
  1019  000B08  C08C  F002         	movff	main@temp+1,___flge@ff1+1
  1020  000B0C  C08D  F003         	movff	main@temp+2,___flge@ff1+2
  1021  000B10  C08E  F004         	movff	main@temp+3,___flge@ff1+3
  1022  000B14  0E00               	movlw	0
  1023  000B16  6E05               	movwf	___flge@ff2,c
  1024  000B18  0E00               	movlw	0
  1025  000B1A  6E06               	movwf	___flge@ff2+1,c
  1026  000B1C  0E0C               	movlw	12
  1027  000B1E  6E07               	movwf	___flge@ff2+2,c
  1028  000B20  0E42               	movlw	66
  1029  000B22  6E08               	movwf	___flge@ff2+3,c
  1030  000B24  EC26  F00D         	call	___flge	;wreg free
  1031  000B28  B0D8               	btfsc	status,0,c
  1032  000B2A  D017               	goto	l2647
  1033  000B2C  0E00               	movlw	0
  1034  000B2E  6E01               	movwf	___flge@ff1,c
  1035  000B30  0E00               	movlw	0
  1036  000B32  6E02               	movwf	___flge@ff1+1,c
  1037  000B34  0E20               	movlw	32
  1038  000B36  6E03               	movwf	___flge@ff1+2,c
  1039  000B38  0E42               	movlw	66
  1040  000B3A  6E04               	movwf	___flge@ff1+3,c
  1041  000B3C  C087  F005         	movff	main@soil,___flge@ff2
  1042  000B40  C088  F006         	movff	main@soil+1,___flge@ff2+1
  1043  000B44  C089  F007         	movff	main@soil+2,___flge@ff2+2
  1044  000B48  C08A  F008         	movff	main@soil+3,___flge@ff2+3
  1045  000B4C  EC26  F00D         	call	___flge	;wreg free
  1046  000B50  B0D8               	btfsc	status,0,c
  1047  000B52  D003               	goto	l2647
  1048  000B54  0E01               	movlw	1
  1049  000B56  0100               	movlb	0	; () banked
  1050  000B58  6F86               	movwf	_main$171& (0+255),b
  1051  000B5A                     l2647:
  1052  000B5A  0100               	movlb	0	; () banked
  1053  000B5C  B186               	btfsc	_main$171& (0+255),0,b
  1054  000B5E  D002               	bra	u2745
  1055  000B60  9A89               	bcf	3977,5,c	;volatile
  1056  000B62  D001               	bra	u2746
  1057  000B64                     u2745:
  1058  000B64  8A89               	bsf	3977,5,c	;volatile
  1059  000B66                     u2746:
  1060                           
  1061                           ;main.c: 58:         LCD_Clear();
  1062  000B66  EC5B  F010         	call	_LCD_Clear	;wreg free
  1063  000B6A  D667               	goto	l2607
  1064  000B6C                     __end_of_main:
  1065                           	opt callstack 0
  1066                           
  1067 ;; *************** function _sprintf *****************
  1068 ;; Defined at:
  1069 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1072 ;;		 -> main@Soil(10), main@Temperature(10), 
  1073 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1074 ;;		 -> STR_2(5), STR_1(6), 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  f               6   12[BANK0 ] struct _IO_FILE
  1077 ;;  ap              2   10[BANK0 ] PTR void [1]
  1078 ;;		 -> ?_sprintf(2), 
  1079 ;;  ret             2    0        int 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  2    0[BANK0 ] int 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1089 ;;      Params:         0       8       0       0       0       0       0       0       0
  1090 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1092 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1093 ;;Total ram usage:       18 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    7
  1096 ;; This function calls:
  1097 ;;		_vfprintf
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text1
  1104  001DDC                     __ptext1:
  1105                           	opt callstack 0
  1106  001DDC                     _sprintf:
  1107                           	opt callstack 23
  1108                           
  1109                           ;incstack = 0
  1110  001DDC  0E64               	movlw	low (?_sprintf+4)
  1111  001DDE  0100               	movlb	0	; () banked
  1112  001DE0  6F6A               	movwf	sprintf@ap& (0+255),b
  1113  001DE2  0E00               	movlw	high (?_sprintf+4)
  1114  001DE4  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1115  001DE6  C060  F06C         	movff	sprintf@s,sprintf@f
  1116  001DEA  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
  1117                           
  1118                           ; BSR set to: 0
  1119  001DEE  0E00               	movlw	0
  1120  001DF0  6F6F               	movwf	(sprintf@f+3)& (0+255),b
  1121  001DF2  0E00               	movlw	0
  1122  001DF4  6F6E               	movwf	(sprintf@f+2)& (0+255),b
  1123                           
  1124                           ; BSR set to: 0
  1125  001DF6  0E00               	movlw	0
  1126  001DF8  6F71               	movwf	(sprintf@f+5)& (0+255),b
  1127  001DFA  0E00               	movlw	0
  1128  001DFC  6F70               	movwf	(sprintf@f+4)& (0+255),b
  1129                           
  1130                           ; BSR set to: 0
  1131  001DFE  0E6C               	movlw	low sprintf@f
  1132  001E00  6E51               	movwf	vfprintf@fp,c
  1133  001E02  0E00               	movlw	high sprintf@f
  1134  001E04  6E52               	movwf	vfprintf@fp+1,c
  1135  001E06  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  1136  001E0A  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1137  001E0E  0E6A               	movlw	low sprintf@ap
  1138  001E10  6E55               	movwf	vfprintf@ap,c
  1139  001E12  0E00               	movlw	high sprintf@ap
  1140  001E14  6E56               	movwf	vfprintf@ap+1,c
  1141  001E16  ECC3  F00E         	call	_vfprintf	;wreg free
  1142  001E1A  0100               	movlb	0	; () banked
  1143  001E1C  516E               	movf	(sprintf@f+2)& (0+255),w,b
  1144  001E1E  2560               	addwf	sprintf@s& (0+255),w,b
  1145  001E20  6ED9               	movwf	fsr2l,c
  1146  001E22  516F               	movf	(sprintf@f+3)& (0+255),w,b
  1147  001E24  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1148  001E26  6EDA               	movwf	fsr2h,c
  1149  001E28  0E00               	movlw	0
  1150  001E2A  6EDF               	movwf	indf2,c
  1151                           
  1152                           ; BSR set to: 0
  1153  001E2C  0012               	return		;funcret
  1154  001E2E                     __end_of_sprintf:
  1155                           	opt callstack 0
  1156                           
  1157 ;; *************** function _vfprintf *****************
  1158 ;; Defined at:
  1159 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1162 ;;		 -> sprintf@f(6), 
  1163 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1164 ;;		 -> STR_2(5), STR_1(6), 
  1165 ;;  ap              2   84[COMRAM] PTR PTR void 
  1166 ;;		 -> sprintf@ap(2), 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1169 ;;		 -> STR_2(5), STR_1(6), 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2   80[COMRAM] int 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1179 ;;      Params:         6       0       0       0       0       0       0       0       0
  1180 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1182 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1183 ;;Total ram usage:        8 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    6
  1186 ;; This function calls:
  1187 ;;		_vfpfcnvrt
  1188 ;; This function is called by:
  1189 ;;		_sprintf
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text2
  1194  001D86                     __ptext2:
  1195                           	opt callstack 0
  1196  001D86                     _vfprintf:
  1197                           	opt callstack 23
  1198                           
  1199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;incstack = 0
  1203  001D86  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1204  001D8A  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1205                           
  1206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1207  001D8E  0E00               	movlw	0
  1208  001D90  0100               	movlb	0	; () banked
  1209  001D92  6F90               	movwf	(_nout+1)& (0+255),b
  1210  001D94  0E00               	movlw	0
  1211  001D96  6F8F               	movwf	_nout& (0+255),b
  1212                           
  1213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1214  001D98  D013               	goto	l2093
  1215  001D9A                     l2091:
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1219  001D9A  C051  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1220  001D9E  C052  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1221  001DA2  0E57               	movlw	low vfprintf@cfmt
  1222  001DA4  6E42               	movwf	vfpfcnvrt@fmt,c
  1223  001DA6  0E00               	movlw	high vfprintf@cfmt
  1224  001DA8  6E43               	movwf	vfpfcnvrt@fmt+1,c
  1225  001DAA  C055  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1226  001DAE  C056  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1227  001DB2  ECC4  F009         	call	_vfpfcnvrt	;wreg free
  1228  001DB6  5040               	movf	?_vfpfcnvrt,w,c
  1229  001DB8  0100               	movlb	0	; () banked
  1230  001DBA  278F               	addwf	_nout& (0+255),f,b
  1231  001DBC  5041               	movf	?_vfpfcnvrt+1,w,c
  1232  001DBE  2390               	addwfc	(_nout+1)& (0+255),f,b
  1233  001DC0                     l2093:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1237  001DC0  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1238  001DC4  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1239  001DC8                     	if	0	;tblptru may be non-zero
  1240  001DC8                     	endif
  1241  001DC8                     	if	0	;tblptru may be non-zero
  1242  001DC8                     	endif
  1243  001DC8  0008               	tblrd		*
  1244  001DCA  50F5               	movf	tablat,w,c
  1245  001DCC  0900               	iorlw	0
  1246  001DCE  A4D8               	btfss	status,2,c
  1247  001DD0  D7E4               	goto	l2091
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1251  001DD2  C08F  F051         	movff	_nout,?_vfprintf
  1252  001DD6  C090  F052         	movff	_nout+1,?_vfprintf+1
  1253                           
  1254                           ; BSR set to: 0
  1255  001DDA  0012               	return		;funcret
  1256  001DDC                     __end_of_vfprintf:
  1257                           	opt callstack 0
  1258                           
  1259 ;; *************** function _vfpfcnvrt *****************
  1260 ;; Defined at:
  1261 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1264 ;;		 -> sprintf@f(6), 
  1265 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1266 ;;		 -> vfprintf@cfmt(2), 
  1267 ;;  ap              2   67[COMRAM] PTR PTR void 
  1268 ;;		 -> sprintf@ap(2), 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  ll              8   71[COMRAM] long long 
  1271 ;;  llu             8    0        unsigned long long 
  1272 ;;  f               4    0        unsigned long long 
  1273 ;;  vp              3    0        PTR void 
  1274 ;;  ct              3    0        unsigned char [3]
  1275 ;;  cp              3    0        PTR unsigned char 
  1276 ;;  i               2    0        int 
  1277 ;;  done            2    0        int 
  1278 ;;  c               1   79[COMRAM] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  2   63[COMRAM] int 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1288 ;;      Params:         6       0       0       0       0       0       0       0       0
  1289 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1290 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1291 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1292 ;;Total ram usage:       17 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    5
  1295 ;; This function calls:
  1296 ;;		_ctoa
  1297 ;;		_dtoa
  1298 ;;		_fputc
  1299 ;; This function is called by:
  1300 ;;		_vfprintf
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text3
  1305  001388                     __ptext3:
  1306                           	opt callstack 0
  1307  001388                     _vfpfcnvrt:
  1308                           	opt callstack 23
  1309                           
  1310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;incstack = 0
  1314  001388  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1315  00138C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1316  001390  CFDE FFF6          	movff	postinc2,tblptrl
  1317  001394  CFDD FFF7          	movff	postdec2,tblptrh
  1318  001398                     	if	0	;tblptru may be non-zero
  1319  001398                     	endif
  1320  001398                     	if	0	;tblptru may be non-zero
  1321  001398                     	endif
  1322  001398  0008               	tblrd		*
  1323  00139A  50F5               	movf	tablat,w,c
  1324  00139C  0A25               	xorlw	37
  1325  00139E  A4D8               	btfss	status,2,c
  1326  0013A0  D0CC               	goto	l2059
  1327                           
  1328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1329  0013A2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1330  0013A6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1331  0013AA  2ADE               	incf	postinc2,f,c
  1332  0013AC  0E00               	movlw	0
  1333  0013AE  22DD               	addwfc	postdec2,f,c
  1334                           
  1335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1336  0013B0  0E00               	movlw	0
  1337  0013B2  6E5B               	movwf	_width+1,c
  1338  0013B4  0E00               	movlw	0
  1339  0013B6  6E5A               	movwf	_width,c
  1340  0013B8  C05A  F05E         	movff	_width,_flags
  1341  0013BC  C05B  F05F         	movff	_width+1,_flags+1
  1342                           
  1343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1344  0013C0  685C               	setf	_prec,c
  1345  0013C2  685D               	setf	_prec+1,c
  1346                           
  1347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  1348  0013C4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1349  0013C8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1350  0013CC  CFDE FFF6          	movff	postinc2,tblptrl
  1351  0013D0  CFDD FFF7          	movff	postdec2,tblptrh
  1352  0013D4                     	if	0	;tblptru may be non-zero
  1353  0013D4                     	endif
  1354  0013D4                     	if	0	;tblptru may be non-zero
  1355  0013D4                     	endif
  1356  0013D4  0008               	tblrd		*
  1357  0013D6  50F5               	movf	tablat,w,c
  1358  0013D8  0A63               	xorlw	99
  1359  0013DA  A4D8               	btfss	status,2,c
  1360  0013DC  D026               	goto	l2033
  1361                           
  1362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  1363  0013DE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1364  0013E2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1365  0013E6  2ADE               	incf	postinc2,f,c
  1366  0013E8  0E00               	movlw	0
  1367  0013EA  22DD               	addwfc	postdec2,f,c
  1368                           
  1369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1370  0013EC  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1371  0013F0  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1372  0013F4  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1373  0013F8  0E02               	movlw	2
  1374  0013FA  26DE               	addwf	postinc2,f,c
  1375  0013FC  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1376  001400  0E00               	movlw	0
  1377  001402  22DD               	addwfc	postdec2,f,c
  1378  001404  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1379  001408  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1380  00140C  50DF               	movf	indf2,w,c
  1381  00140E  6E50               	movwf	vfpfcnvrt@c,c
  1382                           
  1383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  1384  001410  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  1385  001414  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1386  001418  C050  F01E         	movff	vfpfcnvrt@c,ctoa@c
  1387  00141C  EC40  F00F         	call	_ctoa	;wreg free
  1388  001420  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  1389  001424  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1390  001428  0012               	return	
  1391  00142A                     l2033:
  1392                           
  1393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1394  00142A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1395  00142E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1396  001432  CFDE FFF6          	movff	postinc2,tblptrl
  1397  001436  CFDD FFF7          	movff	postdec2,tblptrh
  1398  00143A                     	if	0	;tblptru may be non-zero
  1399  00143A                     	endif
  1400  00143A                     	if	0	;tblptru may be non-zero
  1401  00143A                     	endif
  1402  00143A  0008               	tblrd		*
  1403  00143C  50F5               	movf	tablat,w,c
  1404  00143E  0A64               	xorlw	100
  1405  001440  B4D8               	btfsc	status,2,c
  1406  001442  D00D               	goto	u1810
  1407  001444  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1408  001448  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1409  00144C  CFDE FFF6          	movff	postinc2,tblptrl
  1410  001450  CFDD FFF7          	movff	postdec2,tblptrh
  1411  001454                     	if	0	;tblptru may be non-zero
  1412  001454                     	endif
  1413  001454                     	if	0	;tblptru may be non-zero
  1414  001454                     	endif
  1415  001454  0008               	tblrd		*
  1416  001456  50F5               	movf	tablat,w,c
  1417  001458  0A69               	xorlw	105
  1418  00145A  A4D8               	btfss	status,2,c
  1419  00145C  D03F               	goto	l2043
  1420  00145E                     u1810:
  1421                           
  1422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1423  00145E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1424  001462  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1425  001466  2ADE               	incf	postinc2,f,c
  1426  001468  0E00               	movlw	0
  1427  00146A  22DD               	addwfc	postdec2,f,c
  1428                           
  1429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1430  00146C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1431  001470  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1432  001474  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1433  001478  0E02               	movlw	2
  1434  00147A  26DE               	addwf	postinc2,f,c
  1435  00147C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1436  001480  0E00               	movlw	0
  1437  001482  22DD               	addwfc	postdec2,f,c
  1438  001484  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1439  001488  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1440  00148C  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1441  001490  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1442  001494  0E00               	movlw	0
  1443  001496  BE49               	btfsc	vfpfcnvrt@ll+1,7,c
  1444  001498  0EFF               	movlw	-1
  1445  00149A  6E4A               	movwf	vfpfcnvrt@ll+2,c
  1446  00149C  6E4B               	movwf	vfpfcnvrt@ll+3,c
  1447  00149E  6E4C               	movwf	vfpfcnvrt@ll+4,c
  1448  0014A0  6E4D               	movwf	vfpfcnvrt@ll+5,c
  1449  0014A2  6E4E               	movwf	vfpfcnvrt@ll+6,c
  1450  0014A4  6E4F               	movwf	vfpfcnvrt@ll+7,c
  1451                           
  1452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1453  0014A6  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1454  0014AA  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1455  0014AE  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1456  0014B2  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1457  0014B6  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1458  0014BA  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1459  0014BE  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1460  0014C2  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1461  0014C6  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1462  0014CA  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1463  0014CE  ECA3  F008         	call	_dtoa	;wreg free
  1464  0014D2  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1465  0014D6  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1466  0014DA  0012               	return	
  1467  0014DC                     l2043:
  1468                           
  1469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1470  0014DC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1471  0014E0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1472  0014E4  CFDE FFF6          	movff	postinc2,tblptrl
  1473  0014E8  CFDD FFF7          	movff	postdec2,tblptrh
  1474  0014EC                     	if	0	;tblptru may be non-zero
  1475  0014EC                     	endif
  1476  0014EC                     	if	0	;tblptru may be non-zero
  1477  0014EC                     	endif
  1478  0014EC  0008               	tblrd		*
  1479  0014EE  50F5               	movf	tablat,w,c
  1480  0014F0  0A25               	xorlw	37
  1481  0014F2  A4D8               	btfss	status,2,c
  1482  0014F4  D016               	goto	l2053
  1483                           
  1484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1485  0014F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1486  0014FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1487  0014FE  2ADE               	incf	postinc2,f,c
  1488  001500  0E00               	movlw	0
  1489  001502  22DD               	addwfc	postdec2,f,c
  1490                           
  1491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1492  001504  0E00               	movlw	0
  1493  001506  6E02               	movwf	fputc@c+1,c
  1494  001508  0E25               	movlw	37
  1495  00150A  6E01               	movwf	fputc@c,c
  1496  00150C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1497  001510  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1498  001514  ECEB  F00D         	call	_fputc	;wreg free
  1499  001518                     l2049:
  1500                           
  1501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1502  001518  0E00               	movlw	0
  1503  00151A  6E41               	movwf	?_vfpfcnvrt+1,c
  1504  00151C  0E01               	movlw	1
  1505  00151E  6E40               	movwf	?_vfpfcnvrt,c
  1506  001520  0012               	return	
  1507  001522                     l2053:
  1508                           
  1509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1510  001522  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1511  001526  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1512  00152A  2ADE               	incf	postinc2,f,c
  1513  00152C  0E00               	movlw	0
  1514  00152E  22DD               	addwfc	postdec2,f,c
  1515                           
  1516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1517  001530  0E00               	movlw	0
  1518  001532  6E41               	movwf	?_vfpfcnvrt+1,c
  1519  001534  0E00               	movlw	0
  1520  001536  6E40               	movwf	?_vfpfcnvrt,c
  1521  001538  0012               	return	
  1522  00153A                     l2059:
  1523                           
  1524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1525  00153A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1526  00153E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1527  001542  CFDE FFF6          	movff	postinc2,tblptrl
  1528  001546  CFDD FFF7          	movff	postdec2,tblptrh
  1529  00154A                     	if	0	;tblptru may be non-zero
  1530  00154A                     	endif
  1531  00154A                     	if	0	;tblptru may be non-zero
  1532  00154A                     	endif
  1533  00154A  0008               	tblrd		*
  1534  00154C  50F5               	movf	tablat,w,c
  1535  00154E  6E01               	movwf	fputc@c,c
  1536  001550  6A02               	clrf	fputc@c+1,c
  1537  001552  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1538  001556  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1539  00155A  ECEB  F00D         	call	_fputc	;wreg free
  1540                           
  1541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1542  00155E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1543  001562  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1544  001566  2ADE               	incf	postinc2,f,c
  1545  001568  0E00               	movlw	0
  1546  00156A  22DD               	addwfc	postdec2,f,c
  1547  00156C  D7D5               	goto	l2049
  1548  00156E                     __end_of_vfpfcnvrt:
  1549                           	opt callstack 0
  1550                           
  1551 ;; *************** function _dtoa *****************
  1552 ;; Defined at:
  1553 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1556 ;;		 -> sprintf@f(6), 
  1557 ;;  d               8   29[COMRAM] long long 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  n               8   53[COMRAM] long long 
  1560 ;;  i               2   61[COMRAM] int 
  1561 ;;  s               2   51[COMRAM] int 
  1562 ;;  w               2   49[COMRAM] int 
  1563 ;;  p               2   47[COMRAM] int 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  2   27[COMRAM] int 
  1566 ;; Registers used:
  1567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1573 ;;      Params:        10       0       0       0       0       0       0       0       0
  1574 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1575 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1576 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1577 ;;Total ram usage:       36 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    4
  1580 ;; This function calls:
  1581 ;;		___aodiv
  1582 ;;		___aomod
  1583 ;;		_abs
  1584 ;;		_pad
  1585 ;; This function is called by:
  1586 ;;		_vfpfcnvrt
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text4
  1591  001146                     __ptext4:
  1592                           	opt callstack 0
  1593  001146                     _dtoa:
  1594                           	opt callstack 23
  1595                           
  1596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1597                           
  1598                           ;incstack = 0
  1599  001146  C01E  F036         	movff	dtoa@d,dtoa@n
  1600  00114A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1601  00114E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1602  001152  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1603  001156  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1604  00115A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1605  00115E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1606  001162  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1607                           
  1608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1609  001166  AE3D               	btfss	dtoa@n+7,7,c
  1610  001168  D002               	goto	u1630
  1611  00116A  0E01               	movlw	1
  1612  00116C  D001               	goto	u1640
  1613  00116E                     u1630:
  1614  00116E  0E00               	movlw	0
  1615  001170                     u1640:
  1616  001170  6E34               	movwf	dtoa@s,c
  1617  001172  6A35               	clrf	dtoa@s+1,c
  1618                           
  1619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1620  001174  5034               	movf	dtoa@s,w,c
  1621  001176  1035               	iorwf	dtoa@s+1,w,c
  1622  001178  B4D8               	btfsc	status,2,c
  1623  00117A  D010               	goto	l1949
  1624                           
  1625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1626  00117C  1E3D               	comf	dtoa@n+7,f,c
  1627  00117E  1E3C               	comf	dtoa@n+6,f,c
  1628  001180  1E3B               	comf	dtoa@n+5,f,c
  1629  001182  1E3A               	comf	dtoa@n+4,f,c
  1630  001184  1E39               	comf	dtoa@n+3,f,c
  1631  001186  1E38               	comf	dtoa@n+2,f,c
  1632  001188  1E37               	comf	dtoa@n+1,f,c
  1633  00118A  6C36               	negf	dtoa@n,c
  1634  00118C  0E00               	movlw	0
  1635  00118E  2237               	addwfc	dtoa@n+1,f,c
  1636  001190  2238               	addwfc	dtoa@n+2,f,c
  1637  001192  2239               	addwfc	dtoa@n+3,f,c
  1638  001194  223A               	addwfc	dtoa@n+4,f,c
  1639  001196  223B               	addwfc	dtoa@n+5,f,c
  1640  001198  223C               	addwfc	dtoa@n+6,f,c
  1641  00119A  223D               	addwfc	dtoa@n+7,f,c
  1642  00119C                     l1949:
  1643                           
  1644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1645  00119C  AE5D               	btfss	_prec+1,7,c
  1646                           
  1647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1648  00119E  925E               	bcf	_flags,1,c
  1649                           
  1650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1651  0011A0  BE5D               	btfsc	_prec+1,7,c
  1652  0011A2  D005               	goto	u1670
  1653  0011A4  505D               	movf	_prec+1,w,c
  1654  0011A6  E108               	bnz	l167
  1655  0011A8  045C               	decf	_prec,w,c
  1656  0011AA  B0D8               	btfsc	status,0,c
  1657  0011AC  D005               	goto	l167
  1658  0011AE                     u1670:
  1659  0011AE  0E00               	movlw	0
  1660  0011B0  6E31               	movwf	dtoa@p+1,c
  1661  0011B2  0E01               	movlw	1
  1662  0011B4  6E30               	movwf	dtoa@p,c
  1663  0011B6  D004               	goto	l169
  1664  0011B8                     l167:
  1665  0011B8  C05C  F030         	movff	_prec,dtoa@p
  1666  0011BC  C05D  F031         	movff	_prec+1,dtoa@p+1
  1667  0011C0                     l169:
  1668                           
  1669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1670  0011C0  C05A  F032         	movff	_width,dtoa@w
  1671  0011C4  C05B  F033         	movff	_width+1,dtoa@w+1
  1672                           
  1673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1674  0011C8  5034               	movf	dtoa@s,w,c
  1675  0011CA  1035               	iorwf	dtoa@s+1,w,c
  1676  0011CC  A4D8               	btfss	status,2,c
  1677  0011CE  D002               	goto	u1690
  1678  0011D0  A45E               	btfss	_flags,2,c
  1679  0011D2  D003               	goto	l1963
  1680  0011D4                     u1690:
  1681                           
  1682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1683  0011D4  0632               	decf	dtoa@w,f,c
  1684  0011D6  A0D8               	btfss	status,0,c
  1685  0011D8  0633               	decf	dtoa@w+1,f,c
  1686  0011DA                     l1963:
  1687                           
  1688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1689  0011DA  0E00               	movlw	0
  1690  0011DC  6E3F               	movwf	dtoa@i+1,c
  1691  0011DE  0E1F               	movlw	31
  1692  0011E0  6E3E               	movwf	dtoa@i,c
  1693                           
  1694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1695  0011E2  0E00               	movlw	0
  1696  0011E4  0100               	movlb	0	; () banked
  1697  0011E6  6FB0               	movwf	(_dbuf+31)& (0+255),b
  1698                           
  1699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1700  0011E8  D07C               	goto	l1977
  1701  0011EA                     l1967:
  1702                           
  1703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1704  0011EA  063E               	decf	dtoa@i,f,c
  1705  0011EC  A0D8               	btfss	status,0,c
  1706  0011EE  063F               	decf	dtoa@i+1,f,c
  1707                           
  1708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1709  0011F0  0E91               	movlw	low _dbuf
  1710  0011F2  243E               	addwf	dtoa@i,w,c
  1711  0011F4  6ED9               	movwf	fsr2l,c
  1712  0011F6  0E00               	movlw	high _dbuf
  1713  0011F8  203F               	addwfc	dtoa@i+1,w,c
  1714  0011FA  6EDA               	movwf	fsr2h,c
  1715  0011FC  C036  F001         	movff	dtoa@n,___aomod@dividend
  1716  001200  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1717  001204  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1718  001208  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1719  00120C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1720  001210  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1721  001214  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1722  001218  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1723  00121C  0E0A               	movlw	10
  1724  00121E  6E09               	movwf	___aomod@divisor,c
  1725  001220  0E00               	movlw	0
  1726  001222  6E0A               	movwf	___aomod@divisor+1,c
  1727  001224  0E00               	movlw	0
  1728  001226  6E0B               	movwf	___aomod@divisor+2,c
  1729  001228  0E00               	movlw	0
  1730  00122A  6E0C               	movwf	___aomod@divisor+3,c
  1731  00122C  0E00               	movlw	0
  1732  00122E  6E0D               	movwf	___aomod@divisor+4,c
  1733  001230  0E00               	movlw	0
  1734  001232  6E0E               	movwf	___aomod@divisor+5,c
  1735  001234  0E00               	movlw	0
  1736  001236  6E0F               	movwf	___aomod@divisor+6,c
  1737  001238  0E00               	movlw	0
  1738  00123A  6E10               	movwf	___aomod@divisor+7,c
  1739  00123C  EC94  F00C         	call	___aomod	;wreg free
  1740  001240  C001  F026         	movff	?___aomod,??_dtoa
  1741  001244  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1742  001248  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1743  00124C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1744  001250  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1745  001254  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1746  001258  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1747  00125C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1748  001260  C026  F013         	movff	??_dtoa,abs@a
  1749  001264  C028  F014         	movff	??_dtoa+2,abs@a+1
  1750  001268  ECDB  F00F         	call	_abs	;wreg free
  1751  00126C  5013               	movf	?_abs,w,c
  1752  00126E  0F30               	addlw	48
  1753  001270  6EDF               	movwf	indf2,c
  1754                           
  1755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1756  001272  0630               	decf	dtoa@p,f,c
  1757  001274  A0D8               	btfss	status,0,c
  1758  001276  0631               	decf	dtoa@p+1,f,c
  1759                           
  1760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1761  001278  0632               	decf	dtoa@w,f,c
  1762  00127A  A0D8               	btfss	status,0,c
  1763  00127C  0633               	decf	dtoa@w+1,f,c
  1764                           
  1765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1766  00127E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1767  001282  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1768  001286  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1769  00128A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1770  00128E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1771  001292  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1772  001296  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1773  00129A  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1774  00129E  0E0A               	movlw	10
  1775  0012A0  6E09               	movwf	___aodiv@divisor,c
  1776  0012A2  0E00               	movlw	0
  1777  0012A4  6E0A               	movwf	___aodiv@divisor+1,c
  1778  0012A6  0E00               	movlw	0
  1779  0012A8  6E0B               	movwf	___aodiv@divisor+2,c
  1780  0012AA  0E00               	movlw	0
  1781  0012AC  6E0C               	movwf	___aodiv@divisor+3,c
  1782  0012AE  0E00               	movlw	0
  1783  0012B0  6E0D               	movwf	___aodiv@divisor+4,c
  1784  0012B2  0E00               	movlw	0
  1785  0012B4  6E0E               	movwf	___aodiv@divisor+5,c
  1786  0012B6  0E00               	movlw	0
  1787  0012B8  6E0F               	movwf	___aodiv@divisor+6,c
  1788  0012BA  0E00               	movlw	0
  1789  0012BC  6E10               	movwf	___aodiv@divisor+7,c
  1790  0012BE  ECB7  F00A         	call	___aodiv	;wreg free
  1791  0012C2  C001  F036         	movff	?___aodiv,dtoa@n
  1792  0012C6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1793  0012CA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1794  0012CE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1795  0012D2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1796  0012D6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1797  0012DA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1798  0012DE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1799  0012E2                     l1977:
  1800                           
  1801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1802  0012E2  BE3F               	btfsc	dtoa@i+1,7,c
  1803  0012E4  D01F               	goto	u1740
  1804  0012E6  503F               	movf	dtoa@i+1,w,c
  1805  0012E8  E103               	bnz	u1700
  1806  0012EA  043E               	decf	dtoa@i,w,c
  1807  0012EC  A0D8               	btfss	status,0,c
  1808  0012EE  D01A               	goto	u1740
  1809  0012F0                     u1700:
  1810  0012F0  5036               	movf	dtoa@n,w,c
  1811  0012F2  1037               	iorwf	dtoa@n+1,w,c
  1812  0012F4  1038               	iorwf	dtoa@n+2,w,c
  1813  0012F6  1039               	iorwf	dtoa@n+3,w,c
  1814  0012F8  103A               	iorwf	dtoa@n+4,w,c
  1815  0012FA  103B               	iorwf	dtoa@n+5,w,c
  1816  0012FC  103C               	iorwf	dtoa@n+6,w,c
  1817  0012FE  103D               	iorwf	dtoa@n+7,w,c
  1818  001300  A4D8               	btfss	status,2,c
  1819  001302  D773               	goto	l1967
  1820  001304  BE31               	btfsc	dtoa@p+1,7,c
  1821  001306  D005               	goto	u1720
  1822  001308  5031               	movf	dtoa@p+1,w,c
  1823  00130A  E102               	bnz	u1721
  1824  00130C  0430               	decf	dtoa@p,w,c
  1825  00130E  B0D8               	btfsc	status,0,c
  1826  001310                     u1721:
  1827  001310  D76C               	goto	l1967
  1828  001312                     u1720:
  1829  001312  BE33               	btfsc	dtoa@w+1,7,c
  1830  001314  D007               	goto	u1740
  1831  001316  5033               	movf	dtoa@w+1,w,c
  1832  001318  E103               	bnz	u1730
  1833  00131A  0432               	decf	dtoa@w,w,c
  1834  00131C  A0D8               	btfss	status,0,c
  1835  00131E  D002               	goto	u1740
  1836  001320                     u1730:
  1837  001320  B25E               	btfsc	_flags,1,c
  1838  001322  D763               	goto	l1967
  1839  001324                     u1740:
  1840                           
  1841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1842  001324  5034               	movf	dtoa@s,w,c
  1843  001326  1035               	iorwf	dtoa@s+1,w,c
  1844  001328  A4D8               	btfss	status,2,c
  1845  00132A  D002               	goto	u1760
  1846  00132C  A45E               	btfss	_flags,2,c
  1847  00132E  D017               	goto	l2001
  1848  001330                     u1760:
  1849                           
  1850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1851  001330  063E               	decf	dtoa@i,f,c
  1852  001332  A0D8               	btfss	status,0,c
  1853  001334  063F               	decf	dtoa@i+1,f,c
  1854                           
  1855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1856  001336  5034               	movf	dtoa@s,w,c
  1857  001338  1035               	iorwf	dtoa@s+1,w,c
  1858  00133A  A4D8               	btfss	status,2,c
  1859  00133C  D004               	goto	l1997
  1860  00133E  0E00               	movlw	0
  1861  001340  6E2F               	movwf	_dtoa$387+1,c
  1862  001342  0E2B               	movlw	43
  1863  001344  D003               	goto	L1
  1864  001346                     l1997:
  1865  001346  0E00               	movlw	0
  1866  001348  6E2F               	movwf	_dtoa$387+1,c
  1867  00134A  0E2D               	movlw	45
  1868  00134C                     L1:
  1869  00134C  6E2E               	movwf	_dtoa$387,c
  1870  00134E  0E91               	movlw	low _dbuf
  1871  001350  243E               	addwf	dtoa@i,w,c
  1872  001352  6ED9               	movwf	fsr2l,c
  1873  001354  0E00               	movlw	high _dbuf
  1874  001356  203F               	addwfc	dtoa@i+1,w,c
  1875  001358  6EDA               	movwf	fsr2h,c
  1876  00135A  C02E  FFDF         	movff	_dtoa$387,indf2
  1877  00135E                     l2001:
  1878                           
  1879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1880  00135E  C01C  F011         	movff	dtoa@fp,pad@fp
  1881  001362  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1882  001366  0E91               	movlw	low _dbuf
  1883  001368  243E               	addwf	dtoa@i,w,c
  1884  00136A  6E13               	movwf	pad@buf,c
  1885  00136C  0E00               	movlw	high _dbuf
  1886  00136E  203F               	addwfc	dtoa@i+1,w,c
  1887  001370  6E14               	movwf	pad@buf+1,c
  1888  001372  C032  F015         	movff	dtoa@w,pad@p
  1889  001376  C033  F016         	movff	dtoa@w+1,pad@p+1
  1890  00137A  EC3B  F00E         	call	_pad	;wreg free
  1891  00137E  C011  F01C         	movff	?_pad,?_dtoa
  1892  001382  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1893  001386  0012               	return		;funcret
  1894  001388                     __end_of_dtoa:
  1895                           	opt callstack 0
  1896                           
  1897 ;; *************** function _abs *****************
  1898 ;; Defined at:
  1899 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  a               2   18[COMRAM] int 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2   18[COMRAM] int 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1913 ;;      Params:         2       0       0       0       0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1915 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1916 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1917 ;;Total ram usage:        4 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_dtoa
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text5
  1927  001FB6                     __ptext5:
  1928                           	opt callstack 0
  1929  001FB6                     _abs:
  1930                           	opt callstack 26
  1931                           
  1932                           ;incstack = 0
  1933  001FB6  BE14               	btfsc	abs@a+1,7,c
  1934  001FB8  D005               	goto	u1480
  1935  001FBA  5014               	movf	abs@a+1,w,c
  1936  001FBC  E110               	bnz	l880
  1937  001FBE  0413               	decf	abs@a,w,c
  1938  001FC0  B0D8               	btfsc	status,0,c
  1939  001FC2  D00D               	goto	l880
  1940  001FC4                     u1480:
  1941  001FC4  C013  F015         	movff	abs@a,??_abs
  1942  001FC8  C014  F016         	movff	abs@a+1,??_abs+1
  1943  001FCC  1E15               	comf	??_abs,f,c
  1944  001FCE  1E16               	comf	??_abs+1,f,c
  1945  001FD0  4A15               	infsnz	??_abs,f,c
  1946  001FD2  2A16               	incf	??_abs+1,f,c
  1947  001FD4  C015  F013         	movff	??_abs,?_abs
  1948  001FD8  C016  F014         	movff	??_abs+1,?_abs+1
  1949  001FDC  0012               	return	
  1950  001FDE                     l880:
  1951  001FDE  C013  F013         	movff	abs@a,?_abs
  1952  001FE2  C014  F014         	movff	abs@a+1,?_abs+1
  1953  001FE6  0012               	return		;funcret
  1954  001FE8                     __end_of_abs:
  1955                           	opt callstack 0
  1956                           
  1957 ;; *************** function ___aomod *****************
  1958 ;; Defined at:
  1959 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  dividend        8    0[COMRAM] long long 
  1962 ;;  divisor         8    8[COMRAM] long long 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  sign            1   17[COMRAM] unsigned char 
  1965 ;;  counter         1   16[COMRAM] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  8    0[COMRAM] long long 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1975 ;;      Params:        16       0       0       0       0       0       0       0       0
  1976 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1978 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1979 ;;Total ram usage:       18 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_dtoa
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text6
  1989  001928                     __ptext6:
  1990                           	opt callstack 0
  1991  001928                     ___aomod:
  1992                           	opt callstack 26
  1993                           
  1994                           ;incstack = 0
  1995  001928  0E00               	movlw	0
  1996  00192A  6E12               	movwf	___aomod@sign,c
  1997  00192C  AE08               	btfss	___aomod@dividend+7,7,c
  1998  00192E  D012               	goto	l1901
  1999  001930  1E08               	comf	___aomod@dividend+7,f,c
  2000  001932  1E07               	comf	___aomod@dividend+6,f,c
  2001  001934  1E06               	comf	___aomod@dividend+5,f,c
  2002  001936  1E05               	comf	___aomod@dividend+4,f,c
  2003  001938  1E04               	comf	___aomod@dividend+3,f,c
  2004  00193A  1E03               	comf	___aomod@dividend+2,f,c
  2005  00193C  1E02               	comf	___aomod@dividend+1,f,c
  2006  00193E  6C01               	negf	___aomod@dividend,c
  2007  001940  0E00               	movlw	0
  2008  001942  2202               	addwfc	___aomod@dividend+1,f,c
  2009  001944  2203               	addwfc	___aomod@dividend+2,f,c
  2010  001946  2204               	addwfc	___aomod@dividend+3,f,c
  2011  001948  2205               	addwfc	___aomod@dividend+4,f,c
  2012  00194A  2206               	addwfc	___aomod@dividend+5,f,c
  2013  00194C  2207               	addwfc	___aomod@dividend+6,f,c
  2014  00194E  2208               	addwfc	___aomod@dividend+7,f,c
  2015  001950  0E01               	movlw	1
  2016  001952  6E12               	movwf	___aomod@sign,c
  2017  001954                     l1901:
  2018  001954  AE10               	btfss	___aomod@divisor+7,7,c
  2019  001956  D010               	goto	l1905
  2020  001958  1E10               	comf	___aomod@divisor+7,f,c
  2021  00195A  1E0F               	comf	___aomod@divisor+6,f,c
  2022  00195C  1E0E               	comf	___aomod@divisor+5,f,c
  2023  00195E  1E0D               	comf	___aomod@divisor+4,f,c
  2024  001960  1E0C               	comf	___aomod@divisor+3,f,c
  2025  001962  1E0B               	comf	___aomod@divisor+2,f,c
  2026  001964  1E0A               	comf	___aomod@divisor+1,f,c
  2027  001966  6C09               	negf	___aomod@divisor,c
  2028  001968  0E00               	movlw	0
  2029  00196A  220A               	addwfc	___aomod@divisor+1,f,c
  2030  00196C  220B               	addwfc	___aomod@divisor+2,f,c
  2031  00196E  220C               	addwfc	___aomod@divisor+3,f,c
  2032  001970  220D               	addwfc	___aomod@divisor+4,f,c
  2033  001972  220E               	addwfc	___aomod@divisor+5,f,c
  2034  001974  220F               	addwfc	___aomod@divisor+6,f,c
  2035  001976  2210               	addwfc	___aomod@divisor+7,f,c
  2036  001978                     l1905:
  2037  001978  5009               	movf	___aomod@divisor,w,c
  2038  00197A  100A               	iorwf	___aomod@divisor+1,w,c
  2039  00197C  100B               	iorwf	___aomod@divisor+2,w,c
  2040  00197E  100C               	iorwf	___aomod@divisor+3,w,c
  2041  001980  100D               	iorwf	___aomod@divisor+4,w,c
  2042  001982  100E               	iorwf	___aomod@divisor+5,w,c
  2043  001984  100F               	iorwf	___aomod@divisor+6,w,c
  2044  001986  1010               	iorwf	___aomod@divisor+7,w,c
  2045  001988  B4D8               	btfsc	status,2,c
  2046  00198A  D03C               	goto	l1921
  2047  00198C  0E01               	movlw	1
  2048  00198E  6E11               	movwf	___aomod@counter,c
  2049  001990  D00A               	goto	l1911
  2050  001992                     l1909:
  2051  001992  90D8               	bcf	status,0,c
  2052  001994  3609               	rlcf	___aomod@divisor,f,c
  2053  001996  360A               	rlcf	___aomod@divisor+1,f,c
  2054  001998  360B               	rlcf	___aomod@divisor+2,f,c
  2055  00199A  360C               	rlcf	___aomod@divisor+3,f,c
  2056  00199C  360D               	rlcf	___aomod@divisor+4,f,c
  2057  00199E  360E               	rlcf	___aomod@divisor+5,f,c
  2058  0019A0  360F               	rlcf	___aomod@divisor+6,f,c
  2059  0019A2  3610               	rlcf	___aomod@divisor+7,f,c
  2060  0019A4  2A11               	incf	___aomod@counter,f,c
  2061  0019A6                     l1911:
  2062  0019A6  AE10               	btfss	___aomod@divisor+7,7,c
  2063  0019A8  D7F4               	goto	l1909
  2064  0019AA                     u1590:
  2065  0019AA  5009               	movf	___aomod@divisor,w,c
  2066  0019AC  5C01               	subwf	___aomod@dividend,w,c
  2067  0019AE  500A               	movf	___aomod@divisor+1,w,c
  2068  0019B0  5802               	subwfb	___aomod@dividend+1,w,c
  2069  0019B2  500B               	movf	___aomod@divisor+2,w,c
  2070  0019B4  5803               	subwfb	___aomod@dividend+2,w,c
  2071  0019B6  500C               	movf	___aomod@divisor+3,w,c
  2072  0019B8  5804               	subwfb	___aomod@dividend+3,w,c
  2073  0019BA  500D               	movf	___aomod@divisor+4,w,c
  2074  0019BC  5805               	subwfb	___aomod@dividend+4,w,c
  2075  0019BE  500E               	movf	___aomod@divisor+5,w,c
  2076  0019C0  5806               	subwfb	___aomod@dividend+5,w,c
  2077  0019C2  500F               	movf	___aomod@divisor+6,w,c
  2078  0019C4  5807               	subwfb	___aomod@dividend+6,w,c
  2079  0019C6  5010               	movf	___aomod@divisor+7,w,c
  2080  0019C8  5808               	subwfb	___aomod@dividend+7,w,c
  2081  0019CA  A0D8               	btfss	status,0,c
  2082  0019CC  D010               	goto	l1917
  2083  0019CE  5009               	movf	___aomod@divisor,w,c
  2084  0019D0  5E01               	subwf	___aomod@dividend,f,c
  2085  0019D2  500A               	movf	___aomod@divisor+1,w,c
  2086  0019D4  5A02               	subwfb	___aomod@dividend+1,f,c
  2087  0019D6  500B               	movf	___aomod@divisor+2,w,c
  2088  0019D8  5A03               	subwfb	___aomod@dividend+2,f,c
  2089  0019DA  500C               	movf	___aomod@divisor+3,w,c
  2090  0019DC  5A04               	subwfb	___aomod@dividend+3,f,c
  2091  0019DE  500D               	movf	___aomod@divisor+4,w,c
  2092  0019E0  5A05               	subwfb	___aomod@dividend+4,f,c
  2093  0019E2  500E               	movf	___aomod@divisor+5,w,c
  2094  0019E4  5A06               	subwfb	___aomod@dividend+5,f,c
  2095  0019E6  500F               	movf	___aomod@divisor+6,w,c
  2096  0019E8  5A07               	subwfb	___aomod@dividend+6,f,c
  2097  0019EA  5010               	movf	___aomod@divisor+7,w,c
  2098  0019EC  5A08               	subwfb	___aomod@dividend+7,f,c
  2099  0019EE                     l1917:
  2100  0019EE  90D8               	bcf	status,0,c
  2101  0019F0  3210               	rrcf	___aomod@divisor+7,f,c
  2102  0019F2  320F               	rrcf	___aomod@divisor+6,f,c
  2103  0019F4  320E               	rrcf	___aomod@divisor+5,f,c
  2104  0019F6  320D               	rrcf	___aomod@divisor+4,f,c
  2105  0019F8  320C               	rrcf	___aomod@divisor+3,f,c
  2106  0019FA  320B               	rrcf	___aomod@divisor+2,f,c
  2107  0019FC  320A               	rrcf	___aomod@divisor+1,f,c
  2108  0019FE  3209               	rrcf	___aomod@divisor,f,c
  2109  001A00  2E11               	decfsz	___aomod@counter,f,c
  2110  001A02  D7D3               	goto	u1590
  2111  001A04                     l1921:
  2112  001A04  5012               	movf	___aomod@sign,w,c
  2113  001A06  B4D8               	btfsc	status,2,c
  2114  001A08  D010               	goto	l1925
  2115  001A0A  1E08               	comf	___aomod@dividend+7,f,c
  2116  001A0C  1E07               	comf	___aomod@dividend+6,f,c
  2117  001A0E  1E06               	comf	___aomod@dividend+5,f,c
  2118  001A10  1E05               	comf	___aomod@dividend+4,f,c
  2119  001A12  1E04               	comf	___aomod@dividend+3,f,c
  2120  001A14  1E03               	comf	___aomod@dividend+2,f,c
  2121  001A16  1E02               	comf	___aomod@dividend+1,f,c
  2122  001A18  6C01               	negf	___aomod@dividend,c
  2123  001A1A  0E00               	movlw	0
  2124  001A1C  2202               	addwfc	___aomod@dividend+1,f,c
  2125  001A1E  2203               	addwfc	___aomod@dividend+2,f,c
  2126  001A20  2204               	addwfc	___aomod@dividend+3,f,c
  2127  001A22  2205               	addwfc	___aomod@dividend+4,f,c
  2128  001A24  2206               	addwfc	___aomod@dividend+5,f,c
  2129  001A26  2207               	addwfc	___aomod@dividend+6,f,c
  2130  001A28  2208               	addwfc	___aomod@dividend+7,f,c
  2131  001A2A                     l1925:
  2132  001A2A  C001  F001         	movff	___aomod@dividend,?___aomod
  2133  001A2E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2134  001A32  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2135  001A36  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2136  001A3A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2137  001A3E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2138  001A42  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2139  001A46  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2140  001A4A  0012               	return		;funcret
  2141  001A4C                     __end_of___aomod:
  2142                           	opt callstack 0
  2143                           
  2144 ;; *************** function ___aodiv *****************
  2145 ;; Defined at:
  2146 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  dividend        8    0[COMRAM] long long 
  2149 ;;  divisor         8    8[COMRAM] long long 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  quotient        8   18[COMRAM] long long 
  2152 ;;  sign            1   17[COMRAM] unsigned char 
  2153 ;;  counter         1   16[COMRAM] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  8    0[COMRAM] long long 
  2156 ;; Registers used:
  2157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2163 ;;      Params:        16       0       0       0       0       0       0       0       0
  2164 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2166 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2167 ;;Total ram usage:       26 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_dtoa
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text7
  2177  00156E                     __ptext7:
  2178                           	opt callstack 0
  2179  00156E                     ___aodiv:
  2180                           	opt callstack 26
  2181                           
  2182                           ;incstack = 0
  2183  00156E  0E00               	movlw	0
  2184  001570  6E12               	movwf	___aodiv@sign,c
  2185  001572  AE10               	btfss	___aodiv@divisor+7,7,c
  2186  001574  D012               	goto	l1857
  2187  001576  1E10               	comf	___aodiv@divisor+7,f,c
  2188  001578  1E0F               	comf	___aodiv@divisor+6,f,c
  2189  00157A  1E0E               	comf	___aodiv@divisor+5,f,c
  2190  00157C  1E0D               	comf	___aodiv@divisor+4,f,c
  2191  00157E  1E0C               	comf	___aodiv@divisor+3,f,c
  2192  001580  1E0B               	comf	___aodiv@divisor+2,f,c
  2193  001582  1E0A               	comf	___aodiv@divisor+1,f,c
  2194  001584  6C09               	negf	___aodiv@divisor,c
  2195  001586  0E00               	movlw	0
  2196  001588  220A               	addwfc	___aodiv@divisor+1,f,c
  2197  00158A  220B               	addwfc	___aodiv@divisor+2,f,c
  2198  00158C  220C               	addwfc	___aodiv@divisor+3,f,c
  2199  00158E  220D               	addwfc	___aodiv@divisor+4,f,c
  2200  001590  220E               	addwfc	___aodiv@divisor+5,f,c
  2201  001592  220F               	addwfc	___aodiv@divisor+6,f,c
  2202  001594  2210               	addwfc	___aodiv@divisor+7,f,c
  2203  001596  0E01               	movlw	1
  2204  001598  6E12               	movwf	___aodiv@sign,c
  2205  00159A                     l1857:
  2206  00159A  AE08               	btfss	___aodiv@dividend+7,7,c
  2207  00159C  D012               	goto	l1863
  2208  00159E  1E08               	comf	___aodiv@dividend+7,f,c
  2209  0015A0  1E07               	comf	___aodiv@dividend+6,f,c
  2210  0015A2  1E06               	comf	___aodiv@dividend+5,f,c
  2211  0015A4  1E05               	comf	___aodiv@dividend+4,f,c
  2212  0015A6  1E04               	comf	___aodiv@dividend+3,f,c
  2213  0015A8  1E03               	comf	___aodiv@dividend+2,f,c
  2214  0015AA  1E02               	comf	___aodiv@dividend+1,f,c
  2215  0015AC  6C01               	negf	___aodiv@dividend,c
  2216  0015AE  0E00               	movlw	0
  2217  0015B0  2202               	addwfc	___aodiv@dividend+1,f,c
  2218  0015B2  2203               	addwfc	___aodiv@dividend+2,f,c
  2219  0015B4  2204               	addwfc	___aodiv@dividend+3,f,c
  2220  0015B6  2205               	addwfc	___aodiv@dividend+4,f,c
  2221  0015B8  2206               	addwfc	___aodiv@dividend+5,f,c
  2222  0015BA  2207               	addwfc	___aodiv@dividend+6,f,c
  2223  0015BC  2208               	addwfc	___aodiv@dividend+7,f,c
  2224  0015BE  0E01               	movlw	1
  2225  0015C0  1A12               	xorwf	___aodiv@sign,f,c
  2226  0015C2                     l1863:
  2227  0015C2  EE20  F013         	lfsr	2,___aodiv@quotient
  2228  0015C6  0E07               	movlw	7
  2229  0015C8                     u1511:
  2230  0015C8  6ADE               	clrf	postinc2,c
  2231  0015CA  06E8               	decf	wreg,f,c
  2232  0015CC  E2FD               	bc	u1511
  2233  0015CE  5009               	movf	___aodiv@divisor,w,c
  2234  0015D0  100A               	iorwf	___aodiv@divisor+1,w,c
  2235  0015D2  100B               	iorwf	___aodiv@divisor+2,w,c
  2236  0015D4  100C               	iorwf	___aodiv@divisor+3,w,c
  2237  0015D6  100D               	iorwf	___aodiv@divisor+4,w,c
  2238  0015D8  100E               	iorwf	___aodiv@divisor+5,w,c
  2239  0015DA  100F               	iorwf	___aodiv@divisor+6,w,c
  2240  0015DC  1010               	iorwf	___aodiv@divisor+7,w,c
  2241  0015DE  B4D8               	btfsc	status,2,c
  2242  0015E0  D046               	goto	l1885
  2243  0015E2  0E01               	movlw	1
  2244  0015E4  6E11               	movwf	___aodiv@counter,c
  2245  0015E6  D00A               	goto	l1871
  2246  0015E8                     l1869:
  2247  0015E8  90D8               	bcf	status,0,c
  2248  0015EA  3609               	rlcf	___aodiv@divisor,f,c
  2249  0015EC  360A               	rlcf	___aodiv@divisor+1,f,c
  2250  0015EE  360B               	rlcf	___aodiv@divisor+2,f,c
  2251  0015F0  360C               	rlcf	___aodiv@divisor+3,f,c
  2252  0015F2  360D               	rlcf	___aodiv@divisor+4,f,c
  2253  0015F4  360E               	rlcf	___aodiv@divisor+5,f,c
  2254  0015F6  360F               	rlcf	___aodiv@divisor+6,f,c
  2255  0015F8  3610               	rlcf	___aodiv@divisor+7,f,c
  2256  0015FA  2A11               	incf	___aodiv@counter,f,c
  2257  0015FC                     l1871:
  2258  0015FC  AE10               	btfss	___aodiv@divisor+7,7,c
  2259  0015FE  D7F4               	goto	l1869
  2260  001600                     u1530:
  2261  001600  90D8               	bcf	status,0,c
  2262  001602  3613               	rlcf	___aodiv@quotient,f,c
  2263  001604  3614               	rlcf	___aodiv@quotient+1,f,c
  2264  001606  3615               	rlcf	___aodiv@quotient+2,f,c
  2265  001608  3616               	rlcf	___aodiv@quotient+3,f,c
  2266  00160A  3617               	rlcf	___aodiv@quotient+4,f,c
  2267  00160C  3618               	rlcf	___aodiv@quotient+5,f,c
  2268  00160E  3619               	rlcf	___aodiv@quotient+6,f,c
  2269  001610  361A               	rlcf	___aodiv@quotient+7,f,c
  2270  001612  5009               	movf	___aodiv@divisor,w,c
  2271  001614  5C01               	subwf	___aodiv@dividend,w,c
  2272  001616  500A               	movf	___aodiv@divisor+1,w,c
  2273  001618  5802               	subwfb	___aodiv@dividend+1,w,c
  2274  00161A  500B               	movf	___aodiv@divisor+2,w,c
  2275  00161C  5803               	subwfb	___aodiv@dividend+2,w,c
  2276  00161E  500C               	movf	___aodiv@divisor+3,w,c
  2277  001620  5804               	subwfb	___aodiv@dividend+3,w,c
  2278  001622  500D               	movf	___aodiv@divisor+4,w,c
  2279  001624  5805               	subwfb	___aodiv@dividend+4,w,c
  2280  001626  500E               	movf	___aodiv@divisor+5,w,c
  2281  001628  5806               	subwfb	___aodiv@dividend+5,w,c
  2282  00162A  500F               	movf	___aodiv@divisor+6,w,c
  2283  00162C  5807               	subwfb	___aodiv@dividend+6,w,c
  2284  00162E  5010               	movf	___aodiv@divisor+7,w,c
  2285  001630  5808               	subwfb	___aodiv@dividend+7,w,c
  2286  001632  A0D8               	btfss	status,0,c
  2287  001634  D011               	goto	l1881
  2288  001636  5009               	movf	___aodiv@divisor,w,c
  2289  001638  5E01               	subwf	___aodiv@dividend,f,c
  2290  00163A  500A               	movf	___aodiv@divisor+1,w,c
  2291  00163C  5A02               	subwfb	___aodiv@dividend+1,f,c
  2292  00163E  500B               	movf	___aodiv@divisor+2,w,c
  2293  001640  5A03               	subwfb	___aodiv@dividend+2,f,c
  2294  001642  500C               	movf	___aodiv@divisor+3,w,c
  2295  001644  5A04               	subwfb	___aodiv@dividend+3,f,c
  2296  001646  500D               	movf	___aodiv@divisor+4,w,c
  2297  001648  5A05               	subwfb	___aodiv@dividend+4,f,c
  2298  00164A  500E               	movf	___aodiv@divisor+5,w,c
  2299  00164C  5A06               	subwfb	___aodiv@dividend+5,f,c
  2300  00164E  500F               	movf	___aodiv@divisor+6,w,c
  2301  001650  5A07               	subwfb	___aodiv@dividend+6,f,c
  2302  001652  5010               	movf	___aodiv@divisor+7,w,c
  2303  001654  5A08               	subwfb	___aodiv@dividend+7,f,c
  2304  001656  8013               	bsf	___aodiv@quotient,0,c
  2305  001658                     l1881:
  2306  001658  90D8               	bcf	status,0,c
  2307  00165A  3210               	rrcf	___aodiv@divisor+7,f,c
  2308  00165C  320F               	rrcf	___aodiv@divisor+6,f,c
  2309  00165E  320E               	rrcf	___aodiv@divisor+5,f,c
  2310  001660  320D               	rrcf	___aodiv@divisor+4,f,c
  2311  001662  320C               	rrcf	___aodiv@divisor+3,f,c
  2312  001664  320B               	rrcf	___aodiv@divisor+2,f,c
  2313  001666  320A               	rrcf	___aodiv@divisor+1,f,c
  2314  001668  3209               	rrcf	___aodiv@divisor,f,c
  2315  00166A  2E11               	decfsz	___aodiv@counter,f,c
  2316  00166C  D7C9               	goto	u1530
  2317  00166E                     l1885:
  2318  00166E  5012               	movf	___aodiv@sign,w,c
  2319  001670  B4D8               	btfsc	status,2,c
  2320  001672  D010               	goto	l1889
  2321  001674  1E1A               	comf	___aodiv@quotient+7,f,c
  2322  001676  1E19               	comf	___aodiv@quotient+6,f,c
  2323  001678  1E18               	comf	___aodiv@quotient+5,f,c
  2324  00167A  1E17               	comf	___aodiv@quotient+4,f,c
  2325  00167C  1E16               	comf	___aodiv@quotient+3,f,c
  2326  00167E  1E15               	comf	___aodiv@quotient+2,f,c
  2327  001680  1E14               	comf	___aodiv@quotient+1,f,c
  2328  001682  6C13               	negf	___aodiv@quotient,c
  2329  001684  0E00               	movlw	0
  2330  001686  2214               	addwfc	___aodiv@quotient+1,f,c
  2331  001688  2215               	addwfc	___aodiv@quotient+2,f,c
  2332  00168A  2216               	addwfc	___aodiv@quotient+3,f,c
  2333  00168C  2217               	addwfc	___aodiv@quotient+4,f,c
  2334  00168E  2218               	addwfc	___aodiv@quotient+5,f,c
  2335  001690  2219               	addwfc	___aodiv@quotient+6,f,c
  2336  001692  221A               	addwfc	___aodiv@quotient+7,f,c
  2337  001694                     l1889:
  2338  001694  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2339  001698  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2340  00169C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2341  0016A0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2342  0016A4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2343  0016A8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2344  0016AC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2345  0016B0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2346  0016B4  0012               	return		;funcret
  2347  0016B6                     __end_of___aodiv:
  2348                           	opt callstack 0
  2349                           
  2350 ;; *************** function _ctoa *****************
  2351 ;; Defined at:
  2352 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2355 ;;		 -> sprintf@f(6), 
  2356 ;;  c               1   29[COMRAM] unsigned char 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  w               2   30[COMRAM] int 
  2359 ;;  l               2    0        int 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2   27[COMRAM] int 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2369 ;;      Params:         3       0       0       0       0       0       0       0       0
  2370 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2372 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2373 ;;Total ram usage:        5 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    4
  2376 ;; This function calls:
  2377 ;;		_pad
  2378 ;; This function is called by:
  2379 ;;		_vfpfcnvrt
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text8
  2384  001E80                     __ptext8:
  2385                           	opt callstack 0
  2386  001E80                     _ctoa:
  2387                           	opt callstack 23
  2388                           
  2389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  2390                           
  2391                           ;incstack = 0
  2392  001E80  505A               	movf	_width,w,c
  2393  001E82  105B               	iorwf	_width+1,w,c
  2394  001E84  A4D8               	btfss	status,2,c
  2395  001E86  D005               	goto	l1933
  2396  001E88  C05A  F01F         	movff	_width,ctoa@w
  2397  001E8C  C05B  F020         	movff	_width+1,ctoa@w+1
  2398  001E90  D006               	goto	l1935
  2399  001E92                     l1933:
  2400  001E92  0EFF               	movlw	255
  2401  001E94  245A               	addwf	_width,w,c
  2402  001E96  6E1F               	movwf	ctoa@w,c
  2403  001E98  0EFF               	movlw	255
  2404  001E9A  205B               	addwfc	_width+1,w,c
  2405  001E9C  6E20               	movwf	ctoa@w+1,c
  2406  001E9E                     l1935:
  2407                           
  2408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  2409  001E9E  C01E  F091         	movff	ctoa@c,_dbuf
  2410                           
  2411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  2412  001EA2  0E00               	movlw	0
  2413  001EA4  0100               	movlb	0	; () banked
  2414  001EA6  6F92               	movwf	(_dbuf+1)& (0+255),b
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  2418  001EA8  C01C  F011         	movff	ctoa@fp,pad@fp
  2419  001EAC  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  2420  001EB0  0E91               	movlw	low _dbuf
  2421  001EB2  6E13               	movwf	pad@buf,c
  2422  001EB4  0E00               	movlw	high _dbuf
  2423  001EB6  6E14               	movwf	pad@buf+1,c
  2424  001EB8  C01F  F015         	movff	ctoa@w,pad@p
  2425  001EBC  C020  F016         	movff	ctoa@w+1,pad@p+1
  2426  001EC0  EC3B  F00E         	call	_pad	;wreg free
  2427  001EC4  C011  F01C         	movff	?_pad,?_ctoa
  2428  001EC8  C012  F01D         	movff	?_pad+1,?_ctoa+1
  2429  001ECC  0012               	return		;funcret
  2430  001ECE                     __end_of_ctoa:
  2431                           	opt callstack 0
  2432                           
  2433 ;; *************** function _pad *****************
  2434 ;; Defined at:
  2435 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2438 ;;		 -> sprintf@f(6), 
  2439 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2440 ;;		 -> dbuf(32), 
  2441 ;;  p               2   20[COMRAM] int 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  w               2   25[COMRAM] int 
  2444 ;;  i               2   23[COMRAM] int 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  2   16[COMRAM] int 
  2447 ;; Registers used:
  2448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2454 ;;      Params:         6       0       0       0       0       0       0       0       0
  2455 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2456 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2457 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2458 ;;Total ram usage:       11 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    3
  2461 ;; This function calls:
  2462 ;;		_fputc
  2463 ;;		_fputs
  2464 ;;		_strlen
  2465 ;; This function is called by:
  2466 ;;		_ctoa
  2467 ;;		_dtoa
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text9
  2472  001C76                     __ptext9:
  2473                           	opt callstack 0
  2474  001C76                     _pad:
  2475                           	opt callstack 23
  2476                           
  2477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2478                           
  2479                           ;incstack = 0
  2480  001C76  A05E               	btfss	_flags,0,c
  2481  001C78  D00A               	goto	l1827
  2482                           
  2483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2484  001C7A  C013  F00A         	movff	pad@buf,fputs@s
  2485  001C7E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2486  001C82  C011  F00C         	movff	pad@fp,fputs@fp
  2487  001C86  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2488  001C8A  ECA5  F00F         	call	_fputs	;wreg free
  2489  001C8E                     l1827:
  2490                           
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2492  001C8E  BE16               	btfsc	pad@p+1,7,c
  2493  001C90  D005               	goto	l1831
  2494  001C92  C015  F01A         	movff	pad@p,pad@w
  2495  001C96  C016  F01B         	movff	pad@p+1,pad@w+1
  2496  001C9A  D004               	goto	l149
  2497  001C9C                     l1831:
  2498  001C9C  0E00               	movlw	0
  2499  001C9E  6E1B               	movwf	pad@w+1,c
  2500  001CA0  0E00               	movlw	0
  2501  001CA2  6E1A               	movwf	pad@w,c
  2502  001CA4                     l149:
  2503                           
  2504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2505  001CA4  0E00               	movlw	0
  2506  001CA6  6E19               	movwf	pad@i+1,c
  2507  001CA8  0E00               	movlw	0
  2508  001CAA  6E18               	movwf	pad@i,c
  2509                           
  2510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2511  001CAC  D00C               	goto	l1837
  2512  001CAE                     l1833:
  2513                           
  2514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2515  001CAE  0E00               	movlw	0
  2516  001CB0  6E02               	movwf	fputc@c+1,c
  2517  001CB2  0E20               	movlw	32
  2518  001CB4  6E01               	movwf	fputc@c,c
  2519  001CB6  C011  F003         	movff	pad@fp,fputc@fp
  2520  001CBA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2521  001CBE  ECEB  F00D         	call	_fputc	;wreg free
  2522                           
  2523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2524  001CC2  4A18               	infsnz	pad@i,f,c
  2525  001CC4  2A19               	incf	pad@i+1,f,c
  2526  001CC6                     l1837:
  2527                           
  2528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2529  001CC6  501A               	movf	pad@w,w,c
  2530  001CC8  5C18               	subwf	pad@i,w,c
  2531  001CCA  5019               	movf	pad@i+1,w,c
  2532  001CCC  0A80               	xorlw	128
  2533  001CCE  6E17               	movwf	??_pad& (0+255),c
  2534  001CD0  501B               	movf	pad@w+1,w,c
  2535  001CD2  0A80               	xorlw	128
  2536  001CD4  5817               	subwfb	??_pad& (0+255),w,c
  2537  001CD6  A0D8               	btfss	status,0,c
  2538  001CD8  D7EA               	goto	l1833
  2539                           
  2540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2541  001CDA  B05E               	btfsc	_flags,0,c
  2542  001CDC  D00A               	goto	l1841
  2543                           
  2544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2545  001CDE  C013  F00A         	movff	pad@buf,fputs@s
  2546  001CE2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2547  001CE6  C011  F00C         	movff	pad@fp,fputs@fp
  2548  001CEA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2549  001CEE  ECA5  F00F         	call	_fputs	;wreg free
  2550  001CF2                     l1841:
  2551                           
  2552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2553  001CF2  C013  F001         	movff	pad@buf,strlen@s
  2554  001CF6  C014  F002         	movff	pad@buf+1,strlen@s+1
  2555  001CFA  EC0D  F010         	call	_strlen	;wreg free
  2556  001CFE  501A               	movf	pad@w,w,c
  2557  001D00  2401               	addwf	?_strlen,w,c
  2558  001D02  6E11               	movwf	?_pad,c
  2559  001D04  501B               	movf	pad@w+1,w,c
  2560  001D06  2002               	addwfc	?_strlen+1,w,c
  2561  001D08  6E12               	movwf	?_pad+1,c
  2562  001D0A  0012               	return		;funcret
  2563  001D0C                     __end_of_pad:
  2564                           	opt callstack 0
  2565                           
  2566 ;; *************** function _strlen *****************
  2567 ;; Defined at:
  2568 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2571 ;;		 -> dbuf(32), 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2574 ;;		 -> dbuf(32), 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  2    0[COMRAM] unsigned int 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2584 ;;      Params:         2       0       0       0       0       0       0       0       0
  2585 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2587 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2588 ;;Total ram usage:        4 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_pad
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text10
  2598  00201A                     __ptext10:
  2599                           	opt callstack 0
  2600  00201A                     _strlen:
  2601                           	opt callstack 25
  2602                           
  2603                           ;incstack = 0
  2604  00201A  C001  F003         	movff	strlen@s,strlen@a
  2605  00201E  C002  F004         	movff	strlen@s+1,strlen@a+1
  2606  002022  D002               	goto	l1817
  2607  002024                     l1815:
  2608  002024  4A01               	infsnz	strlen@s,f,c
  2609  002026  2A02               	incf	strlen@s+1,f,c
  2610  002028                     l1817:
  2611  002028  C001  FFD9         	movff	strlen@s,fsr2l
  2612  00202C  C002  FFDA         	movff	strlen@s+1,fsr2h
  2613  002030  50DF               	movf	indf2,w,c
  2614  002032  A4D8               	btfss	status,2,c
  2615  002034  D7F7               	goto	l1815
  2616  002036  5003               	movf	strlen@a,w,c
  2617  002038  5C01               	subwf	strlen@s,w,c
  2618  00203A  6E01               	movwf	?_strlen,c
  2619  00203C  5004               	movf	strlen@a+1,w,c
  2620  00203E  5802               	subwfb	strlen@s+1,w,c
  2621  002040  6E02               	movwf	?_strlen+1,c
  2622  002042  0012               	return		;funcret
  2623  002044                     __end_of_strlen:
  2624                           	opt callstack 0
  2625                           
  2626 ;; *************** function _fputs *****************
  2627 ;; Defined at:
  2628 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2631 ;;		 -> dbuf(32), 
  2632 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2633 ;;		 -> sprintf@f(6), 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  i               2   14[COMRAM] int 
  2636 ;;  c               1   13[COMRAM] unsigned char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  2    9[COMRAM] int 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2646 ;;      Params:         4       0       0       0       0       0       0       0       0
  2647 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2649 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2650 ;;Total ram usage:        7 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    2
  2653 ;; This function calls:
  2654 ;;		_fputc
  2655 ;; This function is called by:
  2656 ;;		_pad
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text11
  2661  001F4A                     __ptext11:
  2662                           	opt callstack 0
  2663  001F4A                     _fputs:
  2664                           	opt callstack 23
  2665                           
  2666                           ;incstack = 0
  2667  001F4A  0E00               	movlw	0
  2668  001F4C  6E10               	movwf	fputs@i+1,c
  2669  001F4E  0E00               	movlw	0
  2670  001F50  6E0F               	movwf	fputs@i,c
  2671  001F52  D00B               	goto	l1811
  2672  001F54                     l1807:
  2673  001F54  C00E  F001         	movff	fputs@c,fputc@c
  2674  001F58  6A02               	clrf	fputc@c+1,c
  2675  001F5A  C00C  F003         	movff	fputs@fp,fputc@fp
  2676  001F5E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2677  001F62  ECEB  F00D         	call	_fputc	;wreg free
  2678  001F66  4A0F               	infsnz	fputs@i,f,c
  2679  001F68  2A10               	incf	fputs@i+1,f,c
  2680  001F6A                     l1811:
  2681  001F6A  500F               	movf	fputs@i,w,c
  2682  001F6C  240A               	addwf	fputs@s,w,c
  2683  001F6E  6ED9               	movwf	fsr2l,c
  2684  001F70  5010               	movf	fputs@i+1,w,c
  2685  001F72  200B               	addwfc	fputs@s+1,w,c
  2686  001F74  6EDA               	movwf	fsr2h,c
  2687  001F76  50DF               	movf	indf2,w,c
  2688  001F78  6E0E               	movwf	fputs@c,c
  2689  001F7A  500E               	movf	fputs@c,w,c
  2690  001F7C  B4D8               	btfsc	status,2,c
  2691  001F7E  0012               	return	
  2692  001F80  D7E9               	goto	l1807
  2693  001F82                     __end_of_fputs:
  2694                           	opt callstack 0
  2695                           
  2696 ;; *************** function _fputc *****************
  2697 ;; Defined at:
  2698 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  c               2    0[COMRAM] int 
  2701 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2702 ;;		 -> sprintf@f(6), 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  2    0[COMRAM] int 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2714 ;;      Params:         4       0       0       0       0       0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2716 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2717 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2718 ;;Total ram usage:        9 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    1
  2721 ;; This function calls:
  2722 ;;		_putch
  2723 ;; This function is called by:
  2724 ;;		_pad
  2725 ;;		_vfpfcnvrt
  2726 ;;		_fputs
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text12
  2731  001BD6                     __ptext12:
  2732                           	opt callstack 0
  2733  001BD6                     _fputc:
  2734                           	opt callstack 26
  2735                           
  2736                           ;incstack = 0
  2737  001BD6  5003               	movf	fputc@fp,w,c
  2738  001BD8  1004               	iorwf	fputc@fp+1,w,c
  2739  001BDA  B4D8               	btfsc	status,2,c
  2740  001BDC  D004               	goto	u1390
  2741  001BDE  5003               	movf	fputc@fp,w,c
  2742  001BE0  1004               	iorwf	fputc@fp+1,w,c
  2743  001BE2  A4D8               	btfss	status,2,c
  2744  001BE4  D004               	goto	l1797
  2745  001BE6                     u1390:
  2746  001BE6  5001               	movf	fputc@c,w,c
  2747  001BE8  EC5F  F010         	call	_putch
  2748  001BEC  0012               	return	
  2749  001BEE                     l1797:
  2750  001BEE  EE20 F004          	lfsr	2,4
  2751  001BF2  5003               	movf	fputc@fp,w,c
  2752  001BF4  26D9               	addwf	fsr2l,f,c
  2753  001BF6  5004               	movf	fputc@fp+1,w,c
  2754  001BF8  22DA               	addwfc	fsr2h,f,c
  2755  001BFA  50DE               	movf	postinc2,w,c
  2756  001BFC  10DE               	iorwf	postinc2,w,c
  2757  001BFE  B4D8               	btfsc	status,2,c
  2758  001C00  D016               	goto	u1410
  2759  001C02  EE20 F004          	lfsr	2,4
  2760  001C06  5003               	movf	fputc@fp,w,c
  2761  001C08  26D9               	addwf	fsr2l,f,c
  2762  001C0A  5004               	movf	fputc@fp+1,w,c
  2763  001C0C  22DA               	addwfc	fsr2h,f,c
  2764  001C0E  EE10 F002          	lfsr	1,2
  2765  001C12  5003               	movf	fputc@fp,w,c
  2766  001C14  26E1               	addwf	fsr1l,f,c
  2767  001C16  5004               	movf	fputc@fp+1,w,c
  2768  001C18  22E2               	addwfc	fsr1h,f,c
  2769  001C1A  50DE               	movf	postinc2,w,c
  2770  001C1C  5CE6               	subwf	postinc1,w,c
  2771  001C1E  50E6               	movf	postinc1,w,c
  2772  001C20  0A80               	xorlw	128
  2773  001C22  6E09               	movwf	(??_fputc+4)& (0+255),c
  2774  001C24  50DE               	movf	postinc2,w,c
  2775  001C26  0A80               	xorlw	128
  2776  001C28  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  2777  001C2A  B0D8               	btfsc	status,0,c
  2778  001C2C  0012               	return	
  2779  001C2E                     u1410:
  2780  001C2E  EE20 F002          	lfsr	2,2
  2781  001C32  5003               	movf	fputc@fp,w,c
  2782  001C34  26D9               	addwf	fsr2l,f,c
  2783  001C36  5004               	movf	fputc@fp+1,w,c
  2784  001C38  22DA               	addwfc	fsr2h,f,c
  2785  001C3A  CFDE F005          	movff	postinc2,??_fputc
  2786  001C3E  CFDD F006          	movff	postdec2,??_fputc+1
  2787  001C42  C003  FFD9         	movff	fputc@fp,fsr2l
  2788  001C46  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2789  001C4A  CFDE F007          	movff	postinc2,??_fputc+2
  2790  001C4E  CFDD F008          	movff	postdec2,??_fputc+3
  2791  001C52  5005               	movf	??_fputc,w,c
  2792  001C54  2407               	addwf	??_fputc+2,w,c
  2793  001C56  6ED9               	movwf	fsr2l,c
  2794  001C58  5006               	movf	??_fputc+1,w,c
  2795  001C5A  2008               	addwfc	??_fputc+3,w,c
  2796  001C5C  6EDA               	movwf	fsr2h,c
  2797  001C5E  C001  FFDF         	movff	fputc@c,indf2
  2798  001C62  EE20 F002          	lfsr	2,2
  2799  001C66  5003               	movf	fputc@fp,w,c
  2800  001C68  26D9               	addwf	fsr2l,f,c
  2801  001C6A  5004               	movf	fputc@fp+1,w,c
  2802  001C6C  22DA               	addwfc	fsr2h,f,c
  2803  001C6E  2ADE               	incf	postinc2,f,c
  2804  001C70  0E00               	movlw	0
  2805  001C72  22DD               	addwfc	postdec2,f,c
  2806  001C74  0012               	return		;funcret
  2807  001C76                     __end_of_fputc:
  2808                           	opt callstack 0
  2809                           
  2810 ;; *************** function _putch *****************
  2811 ;; Defined at:
  2812 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  c               1    wreg     unsigned char 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  c               1    0[COMRAM] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2826 ;;      Params:         0       0       0       0       0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2829 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_fputc
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text13
  2840  0020BE                     __ptext13:
  2841                           	opt callstack 0
  2842  0020BE                     _putch:
  2843                           	opt callstack 26
  2844                           
  2845                           ;incstack = 0
  2846  0020BE  0012               	return		;funcret
  2847  0020C0                     __end_of_putch:
  2848                           	opt callstack 0
  2849                           
  2850 ;; *************** function _servoRotate90 *****************
  2851 ;; Defined at:
  2852 ;;		line 21 in file "servo.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  i               2    1[COMRAM] unsigned int 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2866 ;;      Params:         0       0       0       0       0       0       0       0       0
  2867 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2868 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2869 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2870 ;;Total ram usage:        3 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_main
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text14
  2880  001ECE                     __ptext14:
  2881                           	opt callstack 0
  2882  001ECE                     _servoRotate90:
  2883                           	opt callstack 30
  2884                           
  2885                           ;servo.c: 23:   unsigned int i;;servo.c: 24:   for(i=0;i<50;i++)
  2886                           
  2887                           ;incstack = 0
  2888  001ECE  0E00               	movlw	0
  2889  001ED0  6E03               	movwf	servoRotate90@i+1,c
  2890  001ED2  0E00               	movlw	0
  2891  001ED4  6E02               	movwf	servoRotate90@i,c
  2892  001ED6                     l120:
  2893                           
  2894                           ;servo.c: 25:   {;servo.c: 26:     LATCbits.LATC2 = 1;
  2895  001ED6  848B               	bsf	3979,2,c	;volatile
  2896                           
  2897                           ;servo.c: 27:     _delay((unsigned long)((2200)*(8000000/4000000.0)));
  2898  001ED8  0E06               	movlw	6
  2899  001EDA  6E01               	movwf	??_servoRotate90& (0+255),c
  2900  001EDC  0EB6               	movlw	182
  2901  001EDE                     u2757:
  2902  001EDE  2EE8               	decfsz	wreg,f,c
  2903  001EE0  D7FE               	bra	u2757
  2904  001EE2  2E01               	decfsz	??_servoRotate90& (0+255),f,c
  2905  001EE4  D7FC               	bra	u2757
  2906                           
  2907                           ;servo.c: 28:     LATCbits.LATC2 = 0;
  2908  001EE6  948B               	bcf	3979,2,c	;volatile
  2909                           
  2910                           ;servo.c: 29:     _delay((unsigned long)((17800)*(8000000/4000000.0)));
  2911  001EE8  0E2F               	movlw	47
  2912  001EEA  6E01               	movwf	??_servoRotate90& (0+255),c
  2913  001EEC  0E3A               	movlw	58
  2914  001EEE                     u2767:
  2915  001EEE  2EE8               	decfsz	wreg,f,c
  2916  001EF0  D7FE               	bra	u2767
  2917  001EF2  2E01               	decfsz	??_servoRotate90& (0+255),f,c
  2918  001EF4  D7FC               	bra	u2767
  2919  001EF6  D000               	nop2	
  2920                           
  2921                           ;servo.c: 30:   }
  2922  001EF8  4A02               	infsnz	servoRotate90@i,f,c
  2923  001EFA  2A03               	incf	servoRotate90@i+1,f,c
  2924  001EFC  5003               	movf	servoRotate90@i+1,w,c
  2925  001EFE  E105               	bnz	u2010
  2926  001F00  0E32               	movlw	50
  2927  001F02  5C02               	subwf	servoRotate90@i,w,c
  2928  001F04  B0D8               	btfsc	status,0,c
  2929  001F06  0012               	return	
  2930  001F08  D7E6               	goto	l120
  2931  001F0A                     u2010:
  2932  001F0A  0012               	return		;funcret
  2933  001F0C                     __end_of_servoRotate90:
  2934                           	opt callstack 0
  2935                           
  2936 ;; *************** function _servoRotate0 *****************
  2937 ;; Defined at:
  2938 ;;		line 9 in file "servo.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  i               2    1[COMRAM] unsigned int 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2952 ;;      Params:         0       0       0       0       0       0       0       0       0
  2953 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2954 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2955 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2956 ;;Total ram usage:        3 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_main
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text15
  2966  001F0C                     __ptext15:
  2967                           	opt callstack 0
  2968  001F0C                     _servoRotate0:
  2969                           	opt callstack 30
  2970                           
  2971                           ;servo.c: 11:   unsigned int i;;servo.c: 12:   for(i=0;i<50;i++)
  2972                           
  2973                           ;incstack = 0
  2974  001F0C  0E00               	movlw	0
  2975  001F0E  6E03               	movwf	servoRotate0@i+1,c
  2976  001F10  0E00               	movlw	0
  2977  001F12  6E02               	movwf	servoRotate0@i,c
  2978  001F14                     l115:
  2979                           
  2980                           ;servo.c: 13:   {;servo.c: 14:     LATCbits.LATC2 = 1;
  2981  001F14  848B               	bsf	3979,2,c	;volatile
  2982                           
  2983                           ;servo.c: 15:     _delay((unsigned long)((1500)*(8000000/4000000.0)));
  2984  001F16  0E04               	movlw	4
  2985  001F18  6E01               	movwf	??_servoRotate0& (0+255),c
  2986  001F1A  0EE4               	movlw	228
  2987  001F1C                     u2777:
  2988  001F1C  2EE8               	decfsz	wreg,f,c
  2989  001F1E  D7FE               	bra	u2777
  2990  001F20  2E01               	decfsz	??_servoRotate0& (0+255),f,c
  2991  001F22  D7FC               	bra	u2777
  2992  001F24  D000               	nop2	
  2993                           
  2994                           ;servo.c: 16:     LATCbits.LATC2 = 0;
  2995  001F26  948B               	bcf	3979,2,c	;volatile
  2996                           
  2997                           ;servo.c: 17:     _delay((unsigned long)((18500)*(8000000/4000000.0)));
  2998  001F28  0E31               	movlw	49
  2999  001F2A  6E01               	movwf	??_servoRotate0& (0+255),c
  3000  001F2C  0E0C               	movlw	12
  3001  001F2E                     u2787:
  3002  001F2E  2EE8               	decfsz	wreg,f,c
  3003  001F30  D7FE               	bra	u2787
  3004  001F32  2E01               	decfsz	??_servoRotate0& (0+255),f,c
  3005  001F34  D7FC               	bra	u2787
  3006                           
  3007                           ;servo.c: 18:   }
  3008  001F36  4A02               	infsnz	servoRotate0@i,f,c
  3009  001F38  2A03               	incf	servoRotate0@i+1,f,c
  3010  001F3A  5003               	movf	servoRotate0@i+1,w,c
  3011  001F3C  E105               	bnz	u2000
  3012  001F3E  0E32               	movlw	50
  3013  001F40  5C02               	subwf	servoRotate0@i,w,c
  3014  001F42  B0D8               	btfsc	status,0,c
  3015  001F44  0012               	return	
  3016  001F46  D7E6               	goto	l115
  3017  001F48                     u2000:
  3018  001F48  0012               	return		;funcret
  3019  001F4A                     __end_of_servoRotate0:
  3020                           	opt callstack 0
  3021                           
  3022 ;; *************** function _memset *****************
  3023 ;; Defined at:
  3024 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  dest            2    0[COMRAM] PTR void 
  3027 ;;		 -> main@Soil(10), main@Temperature(10), 
  3028 ;;  c               2    2[COMRAM] int 
  3029 ;;  n               2    4[COMRAM] unsigned int 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  s               2   10[COMRAM] PTR unsigned char 
  3032 ;;		 -> main@Soil(10), main@Temperature(10), 
  3033 ;;  k               2    8[COMRAM] unsigned int 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  2    0[COMRAM] PTR void 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3043 ;;      Params:         6       0       0       0       0       0       0       0       0
  3044 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3045 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3046 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3047 ;;Total ram usage:       12 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_main
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text16
  3057  0017F6                     __ptext16:
  3058                           	opt callstack 0
  3059  0017F6                     _memset:
  3060                           	opt callstack 30
  3061                           
  3062                           ;incstack = 0
  3063  0017F6  C001  F00B         	movff	memset@dest,memset@s
  3064  0017FA  C002  F00C         	movff	memset@dest+1,memset@s+1
  3065  0017FE  5005               	movf	memset@n,w,c
  3066  001800  1006               	iorwf	memset@n+1,w,c
  3067  001802  B4D8               	btfsc	status,2,c
  3068  001804  0012               	return	
  3069  001806  C00B  FFD9         	movff	memset@s,fsr2l
  3070  00180A  C00C  FFDA         	movff	memset@s+1,fsr2h
  3071  00180E  C003  FFDF         	movff	memset@c,indf2
  3072  001812  5005               	movf	memset@n,w,c
  3073  001814  240B               	addwf	memset@s,w,c
  3074  001816  6E07               	movwf	??_memset& (0+255),c
  3075  001818  5006               	movf	memset@n+1,w,c
  3076  00181A  200C               	addwfc	memset@s+1,w,c
  3077  00181C  6E08               	movwf	(??_memset+1)& (0+255),c
  3078  00181E  0EFF               	movlw	255
  3079  001820  2407               	addwf	??_memset,w,c
  3080  001822  6ED9               	movwf	fsr2l,c
  3081  001824  0EFF               	movlw	255
  3082  001826  2008               	addwfc	??_memset+1,w,c
  3083  001828  6EDA               	movwf	fsr2h,c
  3084  00182A  C003  FFDF         	movff	memset@c,indf2
  3085  00182E  5006               	movf	memset@n+1,w,c
  3086  001830  E104               	bnz	l2159
  3087  001832  0E03               	movlw	3
  3088  001834  5C05               	subwf	memset@n,w,c
  3089  001836  A0D8               	btfss	status,0,c
  3090  001838  0012               	return	
  3091  00183A                     l2159:
  3092  00183A  EE20 F001          	lfsr	2,1
  3093  00183E  500B               	movf	memset@s,w,c
  3094  001840  26D9               	addwf	fsr2l,f,c
  3095  001842  500C               	movf	memset@s+1,w,c
  3096  001844  22DA               	addwfc	fsr2h,f,c
  3097  001846  C003  FFDF         	movff	memset@c,indf2
  3098  00184A  EE20 F002          	lfsr	2,2
  3099  00184E  500B               	movf	memset@s,w,c
  3100  001850  26D9               	addwf	fsr2l,f,c
  3101  001852  500C               	movf	memset@s+1,w,c
  3102  001854  22DA               	addwfc	fsr2h,f,c
  3103  001856  C003  FFDF         	movff	memset@c,indf2
  3104  00185A  5005               	movf	memset@n,w,c
  3105  00185C  240B               	addwf	memset@s,w,c
  3106  00185E  6E07               	movwf	??_memset& (0+255),c
  3107  001860  5006               	movf	memset@n+1,w,c
  3108  001862  200C               	addwfc	memset@s+1,w,c
  3109  001864  6E08               	movwf	(??_memset+1)& (0+255),c
  3110  001866  0EFE               	movlw	254
  3111  001868  2407               	addwf	??_memset,w,c
  3112  00186A  6ED9               	movwf	fsr2l,c
  3113  00186C  0EFF               	movlw	255
  3114  00186E  2008               	addwfc	??_memset+1,w,c
  3115  001870  6EDA               	movwf	fsr2h,c
  3116  001872  C003  FFDF         	movff	memset@c,indf2
  3117  001876  5005               	movf	memset@n,w,c
  3118  001878  240B               	addwf	memset@s,w,c
  3119  00187A  6E07               	movwf	??_memset& (0+255),c
  3120  00187C  5006               	movf	memset@n+1,w,c
  3121  00187E  200C               	addwfc	memset@s+1,w,c
  3122  001880  6E08               	movwf	(??_memset+1)& (0+255),c
  3123  001882  0EFD               	movlw	253
  3124  001884  2407               	addwf	??_memset,w,c
  3125  001886  6ED9               	movwf	fsr2l,c
  3126  001888  0EFF               	movlw	255
  3127  00188A  2008               	addwfc	??_memset+1,w,c
  3128  00188C  6EDA               	movwf	fsr2h,c
  3129  00188E  C003  FFDF         	movff	memset@c,indf2
  3130  001892  5006               	movf	memset@n+1,w,c
  3131  001894  E104               	bnz	l2165
  3132  001896  0E07               	movlw	7
  3133  001898  5C05               	subwf	memset@n,w,c
  3134  00189A  A0D8               	btfss	status,0,c
  3135  00189C  0012               	return	
  3136  00189E                     l2165:
  3137  00189E  EE20 F003          	lfsr	2,3
  3138  0018A2  500B               	movf	memset@s,w,c
  3139  0018A4  26D9               	addwf	fsr2l,f,c
  3140  0018A6  500C               	movf	memset@s+1,w,c
  3141  0018A8  22DA               	addwfc	fsr2h,f,c
  3142  0018AA  C003  FFDF         	movff	memset@c,indf2
  3143  0018AE  5005               	movf	memset@n,w,c
  3144  0018B0  240B               	addwf	memset@s,w,c
  3145  0018B2  6E07               	movwf	??_memset& (0+255),c
  3146  0018B4  5006               	movf	memset@n+1,w,c
  3147  0018B6  200C               	addwfc	memset@s+1,w,c
  3148  0018B8  6E08               	movwf	(??_memset+1)& (0+255),c
  3149  0018BA  0EFC               	movlw	252
  3150  0018BC  2407               	addwf	??_memset,w,c
  3151  0018BE  6ED9               	movwf	fsr2l,c
  3152  0018C0  0EFF               	movlw	255
  3153  0018C2  2008               	addwfc	??_memset+1,w,c
  3154  0018C4  6EDA               	movwf	fsr2h,c
  3155  0018C6  C003  FFDF         	movff	memset@c,indf2
  3156  0018CA  5006               	movf	memset@n+1,w,c
  3157  0018CC  E104               	bnz	l2171
  3158  0018CE  0E09               	movlw	9
  3159  0018D0  5C05               	subwf	memset@n,w,c
  3160  0018D2  A0D8               	btfss	status,0,c
  3161  0018D4  0012               	return	
  3162  0018D6                     l2171:
  3163  0018D6  C00B  F007         	movff	memset@s,??_memset
  3164  0018DA  C00C  F008         	movff	memset@s+1,??_memset+1
  3165  0018DE  1E07               	comf	??_memset,f,c
  3166  0018E0  1E08               	comf	??_memset+1,f,c
  3167  0018E2  4A07               	infsnz	??_memset,f,c
  3168  0018E4  2A08               	incf	??_memset+1,f,c
  3169  0018E6  0E03               	movlw	3
  3170  0018E8  1407               	andwf	??_memset,w,c
  3171  0018EA  6E09               	movwf	memset@k,c
  3172  0018EC  6A0A               	clrf	memset@k+1,c
  3173  0018EE  5009               	movf	memset@k,w,c
  3174  0018F0  260B               	addwf	memset@s,f,c
  3175  0018F2  500A               	movf	memset@k+1,w,c
  3176  0018F4  220C               	addwfc	memset@s+1,f,c
  3177  0018F6  5009               	movf	memset@k,w,c
  3178  0018F8  5E05               	subwf	memset@n,f,c
  3179  0018FA  500A               	movf	memset@k+1,w,c
  3180  0018FC  5A06               	subwfb	memset@n+1,f,c
  3181  0018FE  0EFC               	movlw	252
  3182  001900  1605               	andwf	memset@n,f,c
  3183  001902  0EFF               	movlw	255
  3184  001904  1606               	andwf	memset@n+1,f,c
  3185  001906  D00B               	goto	l2179
  3186  001908                     l2173:
  3187  001908  C00B  FFD9         	movff	memset@s,fsr2l
  3188  00190C  C00C  FFDA         	movff	memset@s+1,fsr2h
  3189  001910  C003  FFDF         	movff	memset@c,indf2
  3190  001914  0605               	decf	memset@n,f,c
  3191  001916  A0D8               	btfss	status,0,c
  3192  001918  0606               	decf	memset@n+1,f,c
  3193  00191A  4A0B               	infsnz	memset@s,f,c
  3194  00191C  2A0C               	incf	memset@s+1,f,c
  3195  00191E                     l2179:
  3196  00191E  5005               	movf	memset@n,w,c
  3197  001920  1006               	iorwf	memset@n+1,w,c
  3198  001922  B4D8               	btfsc	status,2,c
  3199  001924  0012               	return	
  3200  001926  D7F0               	goto	l2173
  3201  001928                     __end_of_memset:
  3202                           	opt callstack 0
  3203                           
  3204 ;; *************** function ___xxtofl *****************
  3205 ;; Defined at:
  3206 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  sign            1    wreg     unsigned char 
  3209 ;;  val             4    8[COMRAM] long 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  sign            1   16[COMRAM] unsigned char 
  3212 ;;  arg             4   18[COMRAM] unsigned long 
  3213 ;;  exp             1   17[COMRAM] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  4    8[COMRAM] unsigned char 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3223 ;;      Params:         4       0       0       0       0       0       0       0       0
  3224 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3225 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3226 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3227 ;;Total ram usage:       14 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text17
  3237  0016B6                     __ptext17:
  3238                           	opt callstack 0
  3239  0016B6                     ___xxtofl:
  3240                           	opt callstack 30
  3241                           
  3242                           ;incstack = 0
  3243                           ;___xxtofl@sign stored from wreg
  3244  0016B6  6E11               	movwf	___xxtofl@sign,c
  3245  0016B8  5011               	movf	___xxtofl@sign,w,c
  3246  0016BA  A4D8               	btfss	status,2,c
  3247  0016BC  AE0C               	btfss	___xxtofl@val+3,7,c
  3248  0016BE  D01A               	goto	l860
  3249  0016C0  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  3250  0016C4  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  3251  0016C8  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  3252  0016CC  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  3253  0016D0  1E0D               	comf	??___xxtofl,f,c
  3254  0016D2  1E0E               	comf	??___xxtofl+1,f,c
  3255  0016D4  1E0F               	comf	??___xxtofl+2,f,c
  3256  0016D6  1E10               	comf	??___xxtofl+3,f,c
  3257  0016D8  2A0D               	incf	??___xxtofl,f,c
  3258  0016DA  0E00               	movlw	0
  3259  0016DC  220E               	addwfc	??___xxtofl+1,f,c
  3260  0016DE  220F               	addwfc	??___xxtofl+2,f,c
  3261  0016E0  2210               	addwfc	??___xxtofl+3,f,c
  3262  0016E2  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  3263  0016E6  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  3264  0016EA  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  3265  0016EE  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  3266  0016F2  D008               	goto	l2545
  3267  0016F4                     l860:
  3268  0016F4  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  3269  0016F8  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3270  0016FC  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3271  001700  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3272  001704                     l2545:
  3273  001704  5009               	movf	___xxtofl@val,w,c
  3274  001706  100A               	iorwf	___xxtofl@val+1,w,c
  3275  001708  100B               	iorwf	___xxtofl@val+2,w,c
  3276  00170A  100C               	iorwf	___xxtofl@val+3,w,c
  3277  00170C  A4D8               	btfss	status,2,c
  3278  00170E  D009               	goto	l2551
  3279  001710  0E00               	movlw	0
  3280  001712  6E09               	movwf	?___xxtofl,c
  3281  001714  0E00               	movlw	0
  3282  001716  6E0A               	movwf	?___xxtofl+1,c
  3283  001718  0E00               	movlw	0
  3284  00171A  6E0B               	movwf	?___xxtofl+2,c
  3285  00171C  0E00               	movlw	0
  3286  00171E  6E0C               	movwf	?___xxtofl+3,c
  3287  001720  0012               	return	
  3288  001722                     l2551:
  3289  001722  0E96               	movlw	150
  3290  001724  6E12               	movwf	___xxtofl@exp,c
  3291  001726  D006               	goto	l2555
  3292  001728                     l2553:
  3293  001728  2A12               	incf	___xxtofl@exp,f,c
  3294  00172A  90D8               	bcf	status,0,c
  3295  00172C  3216               	rrcf	___xxtofl@arg+3,f,c
  3296  00172E  3215               	rrcf	___xxtofl@arg+2,f,c
  3297  001730  3214               	rrcf	___xxtofl@arg+1,f,c
  3298  001732  3213               	rrcf	___xxtofl@arg,f,c
  3299  001734                     l2555:
  3300  001734  0E00               	movlw	0
  3301  001736  1413               	andwf	___xxtofl@arg,w,c
  3302  001738  6E0D               	movwf	??___xxtofl& (0+255),c
  3303  00173A  0E00               	movlw	0
  3304  00173C  1414               	andwf	___xxtofl@arg+1,w,c
  3305  00173E  6E0E               	movwf	(??___xxtofl+1)& (0+255),c
  3306  001740  0E00               	movlw	0
  3307  001742  1415               	andwf	___xxtofl@arg+2,w,c
  3308  001744  6E0F               	movwf	(??___xxtofl+2)& (0+255),c
  3309  001746  0EFE               	movlw	254
  3310  001748  1416               	andwf	___xxtofl@arg+3,w,c
  3311  00174A  6E10               	movwf	(??___xxtofl+3)& (0+255),c
  3312  00174C  500D               	movf	??___xxtofl,w,c
  3313  00174E  100E               	iorwf	??___xxtofl+1,w,c
  3314  001750  100F               	iorwf	??___xxtofl+2,w,c
  3315  001752  1010               	iorwf	??___xxtofl+3,w,c
  3316  001754  B4D8               	btfsc	status,2,c
  3317  001756  D00D               	goto	l867
  3318  001758  D7E7               	goto	l2553
  3319  00175A                     l2557:
  3320  00175A  2A12               	incf	___xxtofl@exp,f,c
  3321  00175C  0E01               	movlw	1
  3322  00175E  2613               	addwf	___xxtofl@arg,f,c
  3323  001760  0E00               	movlw	0
  3324  001762  2214               	addwfc	___xxtofl@arg+1,f,c
  3325  001764  2215               	addwfc	___xxtofl@arg+2,f,c
  3326  001766  2216               	addwfc	___xxtofl@arg+3,f,c
  3327  001768  90D8               	bcf	status,0,c
  3328  00176A  3216               	rrcf	___xxtofl@arg+3,f,c
  3329  00176C  3215               	rrcf	___xxtofl@arg+2,f,c
  3330  00176E  3214               	rrcf	___xxtofl@arg+1,f,c
  3331  001770  3213               	rrcf	___xxtofl@arg,f,c
  3332  001772                     l867:
  3333  001772  0E00               	movlw	0
  3334  001774  1413               	andwf	___xxtofl@arg,w,c
  3335  001776  6E0D               	movwf	??___xxtofl& (0+255),c
  3336  001778  0E00               	movlw	0
  3337  00177A  1414               	andwf	___xxtofl@arg+1,w,c
  3338  00177C  6E0E               	movwf	(??___xxtofl+1)& (0+255),c
  3339  00177E  0E00               	movlw	0
  3340  001780  1415               	andwf	___xxtofl@arg+2,w,c
  3341  001782  6E0F               	movwf	(??___xxtofl+2)& (0+255),c
  3342  001784  0EFF               	movlw	255
  3343  001786  1416               	andwf	___xxtofl@arg+3,w,c
  3344  001788  6E10               	movwf	(??___xxtofl+3)& (0+255),c
  3345  00178A  500D               	movf	??___xxtofl,w,c
  3346  00178C  100E               	iorwf	??___xxtofl+1,w,c
  3347  00178E  100F               	iorwf	??___xxtofl+2,w,c
  3348  001790  1010               	iorwf	??___xxtofl+3,w,c
  3349  001792  B4D8               	btfsc	status,2,c
  3350  001794  D007               	goto	l2565
  3351  001796  D7E1               	goto	l2557
  3352  001798                     l2563:
  3353  001798  0612               	decf	___xxtofl@exp,f,c
  3354  00179A  90D8               	bcf	status,0,c
  3355  00179C  3613               	rlcf	___xxtofl@arg,f,c
  3356  00179E  3614               	rlcf	___xxtofl@arg+1,f,c
  3357  0017A0  3615               	rlcf	___xxtofl@arg+2,f,c
  3358  0017A2  3616               	rlcf	___xxtofl@arg+3,f,c
  3359  0017A4                     l2565:
  3360  0017A4  BE15               	btfsc	___xxtofl@arg+2,7,c
  3361  0017A6  D003               	goto	u2620
  3362  0017A8  0E02               	movlw	2
  3363  0017AA  6012               	cpfslt	___xxtofl@exp,c
  3364  0017AC  D7F5               	goto	l2563
  3365  0017AE                     u2620:
  3366  0017AE  A012               	btfss	___xxtofl@exp,0,c
  3367  0017B0  9E15               	bcf	___xxtofl@arg+2,7,c
  3368  0017B2  90D8               	bcf	status,0,c
  3369  0017B4  3212               	rrcf	___xxtofl@exp,f,c
  3370  0017B6  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  3371  0017BA  6A0E               	clrf	(??___xxtofl+1)& (0+255),c
  3372  0017BC  6A0F               	clrf	(??___xxtofl+2)& (0+255),c
  3373  0017BE  6A10               	clrf	(??___xxtofl+3)& (0+255),c
  3374  0017C0  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  3375  0017C4  6A0F               	clrf	??___xxtofl+2,c
  3376  0017C6  6A0E               	clrf	??___xxtofl+1,c
  3377  0017C8  6A0D               	clrf	??___xxtofl,c
  3378  0017CA  500D               	movf	??___xxtofl,w,c
  3379  0017CC  1213               	iorwf	___xxtofl@arg,f,c
  3380  0017CE  500E               	movf	??___xxtofl+1,w,c
  3381  0017D0  1214               	iorwf	___xxtofl@arg+1,f,c
  3382  0017D2  500F               	movf	??___xxtofl+2,w,c
  3383  0017D4  1215               	iorwf	___xxtofl@arg+2,f,c
  3384  0017D6  5010               	movf	??___xxtofl+3,w,c
  3385  0017D8  1216               	iorwf	___xxtofl@arg+3,f,c
  3386  0017DA  5011               	movf	___xxtofl@sign,w,c
  3387  0017DC  A4D8               	btfss	status,2,c
  3388  0017DE  AE0C               	btfss	___xxtofl@val+3,7,c
  3389  0017E0  D001               	goto	l2581
  3390  0017E2  8E16               	bsf	___xxtofl@arg+3,7,c
  3391  0017E4                     l2581:
  3392  0017E4  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  3393  0017E8  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  3394  0017EC  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  3395  0017F0  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  3396  0017F4  0012               	return		;funcret
  3397  0017F6                     __end_of___xxtofl:
  3398                           	opt callstack 0
  3399                           
  3400 ;; *************** function ___fltol *****************
  3401 ;; Defined at:
  3402 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  f1              4    0[COMRAM] unsigned char 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;  exp1            1    9[COMRAM] unsigned char 
  3407 ;;  sign1           1    8[COMRAM] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  4    0[COMRAM] long 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3417 ;;      Params:         4       0       0       0       0       0       0       0       0
  3418 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3419 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3420 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3421 ;;Total ram usage:       10 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_main
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text18
  3431  001B1C                     __ptext18:
  3432                           	opt callstack 0
  3433  001B1C                     ___fltol:
  3434                           	opt callstack 30
  3435                           
  3436                           ;incstack = 0
  3437  001B1C  3403               	rlcf	___fltol@f1+2,w,c
  3438  001B1E  3404               	rlcf	___fltol@f1+3,w,c
  3439  001B20  6E0A               	movwf	___fltol@exp1,c
  3440  001B22  500A               	movf	___fltol@exp1,w,c
  3441  001B24  A4D8               	btfss	status,2,c
  3442  001B26  D009               	goto	l2501
  3443  001B28                     u2490:
  3444  001B28  0E00               	movlw	0
  3445  001B2A  6E01               	movwf	?___fltol,c
  3446  001B2C  0E00               	movlw	0
  3447  001B2E  6E02               	movwf	?___fltol+1,c
  3448  001B30  0E00               	movlw	0
  3449  001B32  6E03               	movwf	?___fltol+2,c
  3450  001B34  0E00               	movlw	0
  3451  001B36  6E04               	movwf	?___fltol+3,c
  3452  001B38  0012               	return	
  3453  001B3A                     l2501:
  3454  001B3A  C001  F005         	movff	___fltol@f1,??___fltol
  3455  001B3E  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3456  001B42  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3457  001B46  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3458  001B4A  0E20               	movlw	32
  3459  001B4C  D005               	goto	u2500
  3460  001B4E                     u2505:
  3461  001B4E  90D8               	bcf	status,0,c
  3462  001B50  3208               	rrcf	??___fltol+3,f,c
  3463  001B52  3207               	rrcf	??___fltol+2,f,c
  3464  001B54  3206               	rrcf	??___fltol+1,f,c
  3465  001B56  3205               	rrcf	??___fltol,f,c
  3466  001B58                     u2500:
  3467  001B58  2EE8               	decfsz	wreg,f,c
  3468  001B5A  D7F9               	goto	u2505
  3469  001B5C  5005               	movf	??___fltol,w,c
  3470  001B5E  6E09               	movwf	___fltol@sign1,c
  3471  001B60  8E03               	bsf	___fltol@f1+2,7,c
  3472  001B62  0EFF               	movlw	255
  3473  001B64  1601               	andwf	___fltol@f1,f,c
  3474  001B66  0EFF               	movlw	255
  3475  001B68  1602               	andwf	___fltol@f1+1,f,c
  3476  001B6A  0EFF               	movlw	255
  3477  001B6C  1603               	andwf	___fltol@f1+2,f,c
  3478  001B6E  0E00               	movlw	0
  3479  001B70  1604               	andwf	___fltol@f1+3,f,c
  3480  001B72  0E96               	movlw	150
  3481  001B74  5E0A               	subwf	___fltol@exp1,f,c
  3482  001B76  AE0A               	btfss	___fltol@exp1,7,c
  3483  001B78  D00D               	goto	l2521
  3484  001B7A  500A               	movf	___fltol@exp1,w,c
  3485  001B7C  0A80               	xorlw	128
  3486  001B7E  0F97               	addlw	151
  3487  001B80  A0D8               	btfss	status,0,c
  3488  001B82  D7D2               	goto	u2490
  3489  001B84                     l2517:
  3490  001B84  90D8               	bcf	status,0,c
  3491  001B86  3204               	rrcf	___fltol@f1+3,f,c
  3492  001B88  3203               	rrcf	___fltol@f1+2,f,c
  3493  001B8A  3202               	rrcf	___fltol@f1+1,f,c
  3494  001B8C  3201               	rrcf	___fltol@f1,f,c
  3495  001B8E  3E0A               	incfsz	___fltol@exp1,f,c
  3496  001B90  D7F9               	goto	l2517
  3497  001B92  D00D               	goto	u2540
  3498  001B94                     l2521:
  3499  001B94  0E1F               	movlw	31
  3500  001B96  640A               	cpfsgt	___fltol@exp1,c
  3501  001B98  D007               	goto	l2529
  3502  001B9A  D7C6               	goto	u2490
  3503  001B9C                     l2527:
  3504  001B9C  90D8               	bcf	status,0,c
  3505  001B9E  3601               	rlcf	___fltol@f1,f,c
  3506  001BA0  3602               	rlcf	___fltol@f1+1,f,c
  3507  001BA2  3603               	rlcf	___fltol@f1+2,f,c
  3508  001BA4  3604               	rlcf	___fltol@f1+3,f,c
  3509  001BA6  060A               	decf	___fltol@exp1,f,c
  3510  001BA8                     l2529:
  3511  001BA8  500A               	movf	___fltol@exp1,w,c
  3512  001BAA  A4D8               	btfss	status,2,c
  3513  001BAC  D7F7               	goto	l2527
  3514  001BAE                     u2540:
  3515  001BAE  5009               	movf	___fltol@sign1,w,c
  3516  001BB0  B4D8               	btfsc	status,2,c
  3517  001BB2  D008               	goto	l2535
  3518  001BB4  1E04               	comf	___fltol@f1+3,f,c
  3519  001BB6  1E03               	comf	___fltol@f1+2,f,c
  3520  001BB8  1E02               	comf	___fltol@f1+1,f,c
  3521  001BBA  6C01               	negf	___fltol@f1,c
  3522  001BBC  0E00               	movlw	0
  3523  001BBE  2202               	addwfc	___fltol@f1+1,f,c
  3524  001BC0  2203               	addwfc	___fltol@f1+2,f,c
  3525  001BC2  2204               	addwfc	___fltol@f1+3,f,c
  3526  001BC4                     l2535:
  3527  001BC4  C001  F001         	movff	___fltol@f1,?___fltol
  3528  001BC8  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3529  001BCC  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3530  001BD0  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3531  001BD4  0012               	return		;funcret
  3532  001BD6                     __end_of___fltol:
  3533                           	opt callstack 0
  3534                           
  3535 ;; *************** function ___flmul *****************
  3536 ;; Defined at:
  3537 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  b               4   22[COMRAM] long 
  3540 ;;  a               4   26[COMRAM] long 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  prod            4   41[COMRAM] struct .
  3543 ;;  grs             4   35[COMRAM] unsigned long 
  3544 ;;  temp            2   45[COMRAM] struct .
  3545 ;;  bexp            1   40[COMRAM] unsigned char 
  3546 ;;  aexp            1   39[COMRAM] unsigned char 
  3547 ;;  sign            1   34[COMRAM] unsigned char 
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  4   22[COMRAM] unsigned char 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0, prodl, prodh
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3557 ;;      Params:         8       0       0       0       0       0       0       0       0
  3558 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3559 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3560 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3561 ;;Total ram usage:       25 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text19
  3571  000B6C                     __ptext19:
  3572                           	opt callstack 0
  3573  000B6C                     ___flmul:
  3574                           	opt callstack 30
  3575                           
  3576                           ;incstack = 0
  3577  000B6C  501A               	movf	___flmul@b+3,w,c
  3578  000B6E  0B80               	andlw	128
  3579  000B70  6E23               	movwf	___flmul@sign,c
  3580  000B72  501A               	movf	___flmul@b+3,w,c
  3581  000B74  241A               	addwf	___flmul@b+3,w,c
  3582  000B76  6E29               	movwf	___flmul@bexp,c
  3583  000B78  BE19               	btfsc	___flmul@b+2,7,c
  3584  000B7A  8029               	bsf	___flmul@bexp,0,c
  3585  000B7C  5029               	movf	___flmul@bexp,w,c
  3586  000B7E  B4D8               	btfsc	status,2,c
  3587  000B80  D00D               	goto	l2357
  3588  000B82  2829               	incf	___flmul@bexp,w,c
  3589  000B84  A4D8               	btfss	status,2,c
  3590  000B86  D008               	goto	l2355
  3591  000B88  0E00               	movlw	0
  3592  000B8A  6E17               	movwf	___flmul@b,c
  3593  000B8C  0E00               	movlw	0
  3594  000B8E  6E18               	movwf	___flmul@b+1,c
  3595  000B90  0E00               	movlw	0
  3596  000B92  6E19               	movwf	___flmul@b+2,c
  3597  000B94  0E00               	movlw	0
  3598  000B96  6E1A               	movwf	___flmul@b+3,c
  3599  000B98                     l2355:
  3600  000B98  8E19               	bsf	___flmul@b+2,7,c
  3601  000B9A  D008               	goto	l2359
  3602  000B9C                     l2357:
  3603  000B9C  0E00               	movlw	0
  3604  000B9E  6E17               	movwf	___flmul@b,c
  3605  000BA0  0E00               	movlw	0
  3606  000BA2  6E18               	movwf	___flmul@b+1,c
  3607  000BA4  0E00               	movlw	0
  3608  000BA6  6E19               	movwf	___flmul@b+2,c
  3609  000BA8  0E00               	movlw	0
  3610  000BAA  6E1A               	movwf	___flmul@b+3,c
  3611  000BAC                     l2359:
  3612  000BAC  501E               	movf	___flmul@a+3,w,c
  3613  000BAE  0B80               	andlw	128
  3614  000BB0  1A23               	xorwf	___flmul@sign,f,c
  3615  000BB2  501E               	movf	___flmul@a+3,w,c
  3616  000BB4  241E               	addwf	___flmul@a+3,w,c
  3617  000BB6  6E28               	movwf	___flmul@aexp,c
  3618  000BB8  BE1D               	btfsc	___flmul@a+2,7,c
  3619  000BBA  8028               	bsf	___flmul@aexp,0,c
  3620  000BBC  5028               	movf	___flmul@aexp,w,c
  3621  000BBE  B4D8               	btfsc	status,2,c
  3622  000BC0  D00D               	goto	l2375
  3623  000BC2  2828               	incf	___flmul@aexp,w,c
  3624  000BC4  A4D8               	btfss	status,2,c
  3625  000BC6  D008               	goto	l2373
  3626  000BC8  0E00               	movlw	0
  3627  000BCA  6E1B               	movwf	___flmul@a,c
  3628  000BCC  0E00               	movlw	0
  3629  000BCE  6E1C               	movwf	___flmul@a+1,c
  3630  000BD0  0E00               	movlw	0
  3631  000BD2  6E1D               	movwf	___flmul@a+2,c
  3632  000BD4  0E00               	movlw	0
  3633  000BD6  6E1E               	movwf	___flmul@a+3,c
  3634  000BD8                     l2373:
  3635  000BD8  8E1D               	bsf	___flmul@a+2,7,c
  3636  000BDA  D008               	goto	l819
  3637  000BDC                     l2375:
  3638  000BDC  0E00               	movlw	0
  3639  000BDE  6E1B               	movwf	___flmul@a,c
  3640  000BE0  0E00               	movlw	0
  3641  000BE2  6E1C               	movwf	___flmul@a+1,c
  3642  000BE4  0E00               	movlw	0
  3643  000BE6  6E1D               	movwf	___flmul@a+2,c
  3644  000BE8  0E00               	movlw	0
  3645  000BEA  6E1E               	movwf	___flmul@a+3,c
  3646  000BEC                     l819:
  3647  000BEC  5028               	movf	___flmul@aexp,w,c
  3648  000BEE  B4D8               	btfsc	status,2,c
  3649  000BF0  D003               	goto	u2320
  3650  000BF2  5029               	movf	___flmul@bexp,w,c
  3651  000BF4  A4D8               	btfss	status,2,c
  3652  000BF6  D009               	goto	l2383
  3653  000BF8                     u2320:
  3654  000BF8  0E00               	movlw	0
  3655  000BFA  6E17               	movwf	?___flmul,c
  3656  000BFC  0E00               	movlw	0
  3657  000BFE  6E18               	movwf	?___flmul+1,c
  3658  000C00  0E00               	movlw	0
  3659  000C02  6E19               	movwf	?___flmul+2,c
  3660  000C04  0E00               	movlw	0
  3661  000C06  6E1A               	movwf	?___flmul+3,c
  3662  000C08  0012               	return	
  3663  000C0A                     l2383:
  3664  000C0A  501D               	movf	___flmul@a+2,w,c
  3665  000C0C  0217               	mulwf	___flmul@b,c
  3666  000C0E  CFF3 F02E          	movff	prodl,___flmul@temp
  3667  000C12  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3668  000C16  502E               	movf	___flmul@temp,w,c
  3669  000C18  6E24               	movwf	___flmul@grs,c
  3670  000C1A  6A25               	clrf	___flmul@grs+1,c
  3671  000C1C  6A26               	clrf	___flmul@grs+2,c
  3672  000C1E  6A27               	clrf	___flmul@grs+3,c
  3673  000C20  502F               	movf	___flmul@temp+1,w,c
  3674  000C22  6E2A               	movwf	___flmul@prod,c
  3675  000C24  6A2B               	clrf	___flmul@prod+1,c
  3676  000C26  6A2C               	clrf	___flmul@prod+2,c
  3677  000C28  6A2D               	clrf	___flmul@prod+3,c
  3678  000C2A  501C               	movf	___flmul@a+1,w,c
  3679  000C2C  0218               	mulwf	___flmul@b+1,c
  3680  000C2E  CFF3 F02E          	movff	prodl,___flmul@temp
  3681  000C32  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3682  000C36  502E               	movf	___flmul@temp,w,c
  3683  000C38  2624               	addwf	___flmul@grs,f,c
  3684  000C3A  0E00               	movlw	0
  3685  000C3C  2225               	addwfc	___flmul@grs+1,f,c
  3686  000C3E  2226               	addwfc	___flmul@grs+2,f,c
  3687  000C40  2227               	addwfc	___flmul@grs+3,f,c
  3688  000C42  502F               	movf	___flmul@temp+1,w,c
  3689  000C44  262A               	addwf	___flmul@prod,f,c
  3690  000C46  0E00               	movlw	0
  3691  000C48  222B               	addwfc	___flmul@prod+1,f,c
  3692  000C4A  222C               	addwfc	___flmul@prod+2,f,c
  3693  000C4C  222D               	addwfc	___flmul@prod+3,f,c
  3694  000C4E  501B               	movf	___flmul@a,w,c
  3695  000C50  0219               	mulwf	___flmul@b+2,c
  3696  000C52  CFF3 F02E          	movff	prodl,___flmul@temp
  3697  000C56  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3698  000C5A  502E               	movf	___flmul@temp,w,c
  3699  000C5C  2624               	addwf	___flmul@grs,f,c
  3700  000C5E  0E00               	movlw	0
  3701  000C60  2225               	addwfc	___flmul@grs+1,f,c
  3702  000C62  2226               	addwfc	___flmul@grs+2,f,c
  3703  000C64  2227               	addwfc	___flmul@grs+3,f,c
  3704  000C66  502F               	movf	___flmul@temp+1,w,c
  3705  000C68  262A               	addwf	___flmul@prod,f,c
  3706  000C6A  0E00               	movlw	0
  3707  000C6C  222B               	addwfc	___flmul@prod+1,f,c
  3708  000C6E  222C               	addwfc	___flmul@prod+2,f,c
  3709  000C70  222D               	addwfc	___flmul@prod+3,f,c
  3710  000C72  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3711  000C76  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3712  000C7A  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3713  000C7E  6A24               	clrf	___flmul@grs,c
  3714  000C80  501B               	movf	___flmul@a,w,c
  3715  000C82  0218               	mulwf	___flmul@b+1,c
  3716  000C84  CFF3 F02E          	movff	prodl,___flmul@temp
  3717  000C88  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3718  000C8C  502E               	movf	___flmul@temp,w,c
  3719  000C8E  2624               	addwf	___flmul@grs,f,c
  3720  000C90  502F               	movf	___flmul@temp+1,w,c
  3721  000C92  2225               	addwfc	___flmul@grs+1,f,c
  3722  000C94  0E00               	movlw	0
  3723  000C96  2226               	addwfc	___flmul@grs+2,f,c
  3724  000C98  0E00               	movlw	0
  3725  000C9A  2227               	addwfc	___flmul@grs+3,f,c
  3726  000C9C  501C               	movf	___flmul@a+1,w,c
  3727  000C9E  0217               	mulwf	___flmul@b,c
  3728  000CA0  CFF3 F02E          	movff	prodl,___flmul@temp
  3729  000CA4  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3730  000CA8  502E               	movf	___flmul@temp,w,c
  3731  000CAA  2624               	addwf	___flmul@grs,f,c
  3732  000CAC  502F               	movf	___flmul@temp+1,w,c
  3733  000CAE  2225               	addwfc	___flmul@grs+1,f,c
  3734  000CB0  0E00               	movlw	0
  3735  000CB2  2226               	addwfc	___flmul@grs+2,f,c
  3736  000CB4  0E00               	movlw	0
  3737  000CB6  2227               	addwfc	___flmul@grs+3,f,c
  3738  000CB8  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3739  000CBC  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3740  000CC0  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3741  000CC4  6A24               	clrf	___flmul@grs,c
  3742  000CC6  501B               	movf	___flmul@a,w,c
  3743  000CC8  0217               	mulwf	___flmul@b,c
  3744  000CCA  CFF3 F02E          	movff	prodl,___flmul@temp
  3745  000CCE  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3746  000CD2  502E               	movf	___flmul@temp,w,c
  3747  000CD4  2624               	addwf	___flmul@grs,f,c
  3748  000CD6  502F               	movf	___flmul@temp+1,w,c
  3749  000CD8  2225               	addwfc	___flmul@grs+1,f,c
  3750  000CDA  0E00               	movlw	0
  3751  000CDC  2226               	addwfc	___flmul@grs+2,f,c
  3752  000CDE  0E00               	movlw	0
  3753  000CE0  2227               	addwfc	___flmul@grs+3,f,c
  3754  000CE2  501D               	movf	___flmul@a+2,w,c
  3755  000CE4  0218               	mulwf	___flmul@b+1,c
  3756  000CE6  CFF3 F02E          	movff	prodl,___flmul@temp
  3757  000CEA  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3758  000CEE  502E               	movf	___flmul@temp,w,c
  3759  000CF0  262A               	addwf	___flmul@prod,f,c
  3760  000CF2  502F               	movf	___flmul@temp+1,w,c
  3761  000CF4  222B               	addwfc	___flmul@prod+1,f,c
  3762  000CF6  0E00               	movlw	0
  3763  000CF8  222C               	addwfc	___flmul@prod+2,f,c
  3764  000CFA  0E00               	movlw	0
  3765  000CFC  222D               	addwfc	___flmul@prod+3,f,c
  3766  000CFE  501C               	movf	___flmul@a+1,w,c
  3767  000D00  0219               	mulwf	___flmul@b+2,c
  3768  000D02  CFF3 F02E          	movff	prodl,___flmul@temp
  3769  000D06  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3770  000D0A  502E               	movf	___flmul@temp,w,c
  3771  000D0C  262A               	addwf	___flmul@prod,f,c
  3772  000D0E  502F               	movf	___flmul@temp+1,w,c
  3773  000D10  222B               	addwfc	___flmul@prod+1,f,c
  3774  000D12  0E00               	movlw	0
  3775  000D14  222C               	addwfc	___flmul@prod+2,f,c
  3776  000D16  0E00               	movlw	0
  3777  000D18  222D               	addwfc	___flmul@prod+3,f,c
  3778  000D1A  501D               	movf	___flmul@a+2,w,c
  3779  000D1C  0219               	mulwf	___flmul@b+2,c
  3780  000D1E  CFF3 F02E          	movff	prodl,___flmul@temp
  3781  000D22  CFF4 F02F          	movff	prodh,___flmul@temp+1
  3782  000D26  502E               	movf	___flmul@temp,w,c
  3783  000D28  6E1F               	movwf	??___flmul& (0+255),c
  3784  000D2A  502F               	movf	___flmul@temp+1,w,c
  3785  000D2C  6E20               	movwf	(??___flmul+1)& (0+255),c
  3786  000D2E  6A21               	clrf	(??___flmul+2)& (0+255),c
  3787  000D30  6A22               	clrf	(??___flmul+3)& (0+255),c
  3788  000D32  C021  F022         	movff	??___flmul+2,??___flmul+3
  3789  000D36  C020  F021         	movff	??___flmul+1,??___flmul+2
  3790  000D3A  C01F  F020         	movff	??___flmul,??___flmul+1
  3791  000D3E  6A1F               	clrf	??___flmul,c
  3792  000D40  501F               	movf	??___flmul,w,c
  3793  000D42  262A               	addwf	___flmul@prod,f,c
  3794  000D44  5020               	movf	??___flmul+1,w,c
  3795  000D46  222B               	addwfc	___flmul@prod+1,f,c
  3796  000D48  5021               	movf	??___flmul+2,w,c
  3797  000D4A  222C               	addwfc	___flmul@prod+2,f,c
  3798  000D4C  5022               	movf	??___flmul+3,w,c
  3799  000D4E  222D               	addwfc	___flmul@prod+3,f,c
  3800  000D50  C024  F01F         	movff	___flmul@grs,??___flmul
  3801  000D54  C025  F020         	movff	___flmul@grs+1,??___flmul+1
  3802  000D58  C026  F021         	movff	___flmul@grs+2,??___flmul+2
  3803  000D5C  C027  F022         	movff	___flmul@grs+3,??___flmul+3
  3804  000D60  0E19               	movlw	25
  3805  000D62  D005               	goto	u2330
  3806  000D64                     u2335:
  3807  000D64  90D8               	bcf	status,0,c
  3808  000D66  3222               	rrcf	??___flmul+3,f,c
  3809  000D68  3221               	rrcf	??___flmul+2,f,c
  3810  000D6A  3220               	rrcf	??___flmul+1,f,c
  3811  000D6C  321F               	rrcf	??___flmul,f,c
  3812  000D6E                     u2330:
  3813  000D6E  2EE8               	decfsz	wreg,f,c
  3814  000D70  D7F9               	goto	u2335
  3815  000D72  501F               	movf	??___flmul,w,c
  3816  000D74  262A               	addwf	___flmul@prod,f,c
  3817  000D76  5020               	movf	??___flmul+1,w,c
  3818  000D78  222B               	addwfc	___flmul@prod+1,f,c
  3819  000D7A  5021               	movf	??___flmul+2,w,c
  3820  000D7C  222C               	addwfc	___flmul@prod+2,f,c
  3821  000D7E  5022               	movf	??___flmul+3,w,c
  3822  000D80  222D               	addwfc	___flmul@prod+3,f,c
  3823  000D82  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  3824  000D86  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  3825  000D8A  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  3826  000D8E  6A24               	clrf	___flmul@grs,c
  3827  000D90  5028               	movf	___flmul@aexp,w,c
  3828  000D92  C029  F01F         	movff	___flmul@bexp,??___flmul
  3829  000D96  6A20               	clrf	(??___flmul+1)& (0+255),c
  3830  000D98  261F               	addwf	??___flmul,f,c
  3831  000D9A  0E00               	movlw	0
  3832  000D9C  2220               	addwfc	??___flmul+1,f,c
  3833  000D9E  0E82               	movlw	130
  3834  000DA0  241F               	addwf	??___flmul,w,c
  3835  000DA2  6E2E               	movwf	___flmul@temp,c
  3836  000DA4  0EFF               	movlw	255
  3837  000DA6  2020               	addwfc	??___flmul+1,w,c
  3838  000DA8  6E2F               	movwf	___flmul@temp+1,c
  3839  000DAA  D00F               	goto	l2431
  3840  000DAC                     l2425:
  3841  000DAC  90D8               	bcf	status,0,c
  3842  000DAE  362A               	rlcf	___flmul@prod,f,c
  3843  000DB0  362B               	rlcf	___flmul@prod+1,f,c
  3844  000DB2  362C               	rlcf	___flmul@prod+2,f,c
  3845  000DB4  362D               	rlcf	___flmul@prod+3,f,c
  3846  000DB6  BE27               	btfsc	___flmul@grs+3,7,c
  3847  000DB8  802A               	bsf	___flmul@prod,0,c
  3848  000DBA  90D8               	bcf	status,0,c
  3849  000DBC  3624               	rlcf	___flmul@grs,f,c
  3850  000DBE  3625               	rlcf	___flmul@grs+1,f,c
  3851  000DC0  3626               	rlcf	___flmul@grs+2,f,c
  3852  000DC2  3627               	rlcf	___flmul@grs+3,f,c
  3853  000DC4  062E               	decf	___flmul@temp,f,c
  3854  000DC6  A0D8               	btfss	status,0,c
  3855  000DC8  062F               	decf	___flmul@temp+1,f,c
  3856  000DCA                     l2431:
  3857  000DCA  AE2C               	btfss	___flmul@prod+2,7,c
  3858  000DCC  D7EF               	goto	l2425
  3859  000DCE  0E00               	movlw	0
  3860  000DD0  6E28               	movwf	___flmul@aexp,c
  3861  000DD2  AE27               	btfss	___flmul@grs+3,7,c
  3862  000DD4  D017               	goto	l828
  3863  000DD6  0EFF               	movlw	255
  3864  000DD8  1424               	andwf	___flmul@grs,w,c
  3865  000DDA  6E1F               	movwf	??___flmul& (0+255),c
  3866  000DDC  0EFF               	movlw	255
  3867  000DDE  1425               	andwf	___flmul@grs+1,w,c
  3868  000DE0  6E20               	movwf	(??___flmul+1)& (0+255),c
  3869  000DE2  0EFF               	movlw	255
  3870  000DE4  1426               	andwf	___flmul@grs+2,w,c
  3871  000DE6  6E21               	movwf	(??___flmul+2)& (0+255),c
  3872  000DE8  0E7F               	movlw	127
  3873  000DEA  1427               	andwf	___flmul@grs+3,w,c
  3874  000DEC  6E22               	movwf	(??___flmul+3)& (0+255),c
  3875  000DEE  501F               	movf	??___flmul,w,c
  3876  000DF0  1020               	iorwf	??___flmul+1,w,c
  3877  000DF2  1021               	iorwf	??___flmul+2,w,c
  3878  000DF4  1022               	iorwf	??___flmul+3,w,c
  3879  000DF6  B4D8               	btfsc	status,2,c
  3880  000DF8  D003               	goto	l829
  3881  000DFA                     u2370:
  3882  000DFA  0E01               	movlw	1
  3883  000DFC  6E28               	movwf	___flmul@aexp,c
  3884  000DFE  D002               	goto	l828
  3885  000E00                     l829:
  3886  000E00  B02A               	btfsc	___flmul@prod,0,c
  3887  000E02  D7FB               	goto	u2370
  3888  000E04                     l828:
  3889  000E04  5028               	movf	___flmul@aexp,w,c
  3890  000E06  B4D8               	btfsc	status,2,c
  3891  000E08  D01F               	goto	l2451
  3892  000E0A  0E01               	movlw	1
  3893  000E0C  262A               	addwf	___flmul@prod,f,c
  3894  000E0E  0E00               	movlw	0
  3895  000E10  222B               	addwfc	___flmul@prod+1,f,c
  3896  000E12  222C               	addwfc	___flmul@prod+2,f,c
  3897  000E14  222D               	addwfc	___flmul@prod+3,f,c
  3898  000E16  A02D               	btfss	___flmul@prod+3,0,c
  3899  000E18  D017               	goto	l2451
  3900  000E1A  C02A  F01F         	movff	___flmul@prod,??___flmul
  3901  000E1E  C02B  F020         	movff	___flmul@prod+1,??___flmul+1
  3902  000E22  C02C  F021         	movff	___flmul@prod+2,??___flmul+2
  3903  000E26  C02D  F022         	movff	___flmul@prod+3,??___flmul+3
  3904  000E2A  3422               	rlcf	??___flmul+3,w,c
  3905  000E2C  3222               	rrcf	??___flmul+3,f,c
  3906  000E2E  3221               	rrcf	??___flmul+2,f,c
  3907  000E30  3220               	rrcf	??___flmul+1,f,c
  3908  000E32  321F               	rrcf	??___flmul,f,c
  3909  000E34  C01F  F02A         	movff	??___flmul,___flmul@prod
  3910  000E38  C020  F02B         	movff	??___flmul+1,___flmul@prod+1
  3911  000E3C  C021  F02C         	movff	??___flmul+2,___flmul@prod+2
  3912  000E40  C022  F02D         	movff	??___flmul+3,___flmul@prod+3
  3913  000E44  4A2E               	infsnz	___flmul@temp,f,c
  3914  000E46  2A2F               	incf	___flmul@temp+1,f,c
  3915  000E48                     l2451:
  3916  000E48  BE2F               	btfsc	___flmul@temp+1,7,c
  3917  000E4A  D00D               	goto	l2455
  3918  000E4C  502F               	movf	___flmul@temp+1,w,c
  3919  000E4E  E103               	bnz	u2410
  3920  000E50  282E               	incf	___flmul@temp,w,c
  3921  000E52  A0D8               	btfss	status,0,c
  3922  000E54  D008               	goto	l2455
  3923  000E56                     u2410:
  3924  000E56  0E00               	movlw	0
  3925  000E58  6E2A               	movwf	___flmul@prod,c
  3926  000E5A  0E00               	movlw	0
  3927  000E5C  6E2B               	movwf	___flmul@prod+1,c
  3928  000E5E  0E80               	movlw	128
  3929  000E60  6E2C               	movwf	___flmul@prod+2,c
  3930  000E62  0E7F               	movlw	127
  3931  000E64  D020               	goto	L2
  3932  000E66                     l2455:
  3933  000E66  BE2F               	btfsc	___flmul@temp+1,7,c
  3934  000E68  D005               	goto	u2420
  3935  000E6A  502F               	movf	___flmul@temp+1,w,c
  3936  000E6C  E10E               	bnz	l836
  3937  000E6E  042E               	decf	___flmul@temp,w,c
  3938  000E70  B0D8               	btfsc	status,0,c
  3939  000E72  D00B               	goto	l836
  3940  000E74                     u2420:
  3941  000E74  0E00               	movlw	0
  3942  000E76  6E2A               	movwf	___flmul@prod,c
  3943  000E78  0E00               	movlw	0
  3944  000E7A  6E2B               	movwf	___flmul@prod+1,c
  3945  000E7C  0E00               	movlw	0
  3946  000E7E  6E2C               	movwf	___flmul@prod+2,c
  3947  000E80  0E00               	movlw	0
  3948  000E82  6E2D               	movwf	___flmul@prod+3,c
  3949  000E84  0E00               	movlw	0
  3950  000E86  6E23               	movwf	___flmul@sign,c
  3951  000E88  D00F               	goto	l2467
  3952  000E8A                     l836:
  3953  000E8A  C02E  F029         	movff	___flmul@temp,___flmul@bexp
  3954  000E8E  0EFF               	movlw	255
  3955  000E90  162A               	andwf	___flmul@prod,f,c
  3956  000E92  0EFF               	movlw	255
  3957  000E94  162B               	andwf	___flmul@prod+1,f,c
  3958  000E96  0E7F               	movlw	127
  3959  000E98  162C               	andwf	___flmul@prod+2,f,c
  3960  000E9A  0E00               	movlw	0
  3961  000E9C  162D               	andwf	___flmul@prod+3,f,c
  3962  000E9E  B029               	btfsc	___flmul@bexp,0,c
  3963  000EA0  8E2C               	bsf	___flmul@prod+2,7,c
  3964  000EA2  90D8               	bcf	status,0,c
  3965  000EA4  3029               	rrcf	___flmul@bexp,w,c
  3966  000EA6                     L2:
  3967  000EA6  6E2D               	movwf	___flmul@prod+3,c
  3968  000EA8                     l2467:
  3969  000EA8  5023               	movf	___flmul@sign,w,c
  3970  000EAA  122D               	iorwf	___flmul@prod+3,f,c
  3971  000EAC  C02A  F017         	movff	___flmul@prod,?___flmul
  3972  000EB0  C02B  F018         	movff	___flmul@prod+1,?___flmul+1
  3973  000EB4  C02C  F019         	movff	___flmul@prod+2,?___flmul+2
  3974  000EB8  C02D  F01A         	movff	___flmul@prod+3,?___flmul+3
  3975  000EBC  0012               	return		;funcret
  3976  000EBE                     __end_of___flmul:
  3977                           	opt callstack 0
  3978                           
  3979 ;; *************** function ___flge *****************
  3980 ;; Defined at:
  3981 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  ff1             4    0[COMRAM] unsigned char 
  3984 ;;  ff2             4    4[COMRAM] unsigned char 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;		None               void
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3996 ;;      Params:         8       0       0       0       0       0       0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3998 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3999 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4000 ;;Total ram usage:       12 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_main
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text20
  4010  001A4C                     __ptext20:
  4011                           	opt callstack 0
  4012  001A4C                     ___flge:
  4013                           	opt callstack 30
  4014                           
  4015                           ;incstack = 0
  4016  001A4C  0E00               	movlw	0
  4017  001A4E  1401               	andwf	___flge@ff1,w,c
  4018  001A50  6E09               	movwf	??___flge& (0+255),c
  4019  001A52  0E00               	movlw	0
  4020  001A54  1402               	andwf	___flge@ff1+1,w,c
  4021  001A56  6E0A               	movwf	(??___flge+1)& (0+255),c
  4022  001A58  0E80               	movlw	128
  4023  001A5A  1403               	andwf	___flge@ff1+2,w,c
  4024  001A5C  6E0B               	movwf	(??___flge+2)& (0+255),c
  4025  001A5E  0E7F               	movlw	127
  4026  001A60  1404               	andwf	___flge@ff1+3,w,c
  4027  001A62  6E0C               	movwf	(??___flge+3)& (0+255),c
  4028  001A64  5009               	movf	??___flge,w,c
  4029  001A66  100A               	iorwf	??___flge+1,w,c
  4030  001A68  100B               	iorwf	??___flge+2,w,c
  4031  001A6A  100C               	iorwf	??___flge+3,w,c
  4032  001A6C  A4D8               	btfss	status,2,c
  4033  001A6E  D008               	goto	l2477
  4034  001A70  0E00               	movlw	0
  4035  001A72  6E01               	movwf	___flge@ff1,c
  4036  001A74  0E00               	movlw	0
  4037  001A76  6E02               	movwf	___flge@ff1+1,c
  4038  001A78  0E00               	movlw	0
  4039  001A7A  6E03               	movwf	___flge@ff1+2,c
  4040  001A7C  0E00               	movlw	0
  4041  001A7E  6E04               	movwf	___flge@ff1+3,c
  4042  001A80                     l2477:
  4043  001A80  0E00               	movlw	0
  4044  001A82  1405               	andwf	___flge@ff2,w,c
  4045  001A84  6E09               	movwf	??___flge& (0+255),c
  4046  001A86  0E00               	movlw	0
  4047  001A88  1406               	andwf	___flge@ff2+1,w,c
  4048  001A8A  6E0A               	movwf	(??___flge+1)& (0+255),c
  4049  001A8C  0E80               	movlw	128
  4050  001A8E  1407               	andwf	___flge@ff2+2,w,c
  4051  001A90  6E0B               	movwf	(??___flge+2)& (0+255),c
  4052  001A92  0E7F               	movlw	127
  4053  001A94  1408               	andwf	___flge@ff2+3,w,c
  4054  001A96  6E0C               	movwf	(??___flge+3)& (0+255),c
  4055  001A98  5009               	movf	??___flge,w,c
  4056  001A9A  100A               	iorwf	??___flge+1,w,c
  4057  001A9C  100B               	iorwf	??___flge+2,w,c
  4058  001A9E  100C               	iorwf	??___flge+3,w,c
  4059  001AA0  A4D8               	btfss	status,2,c
  4060  001AA2  D008               	goto	l2481
  4061  001AA4  0E00               	movlw	0
  4062  001AA6  6E05               	movwf	___flge@ff2,c
  4063  001AA8  0E00               	movlw	0
  4064  001AAA  6E06               	movwf	___flge@ff2+1,c
  4065  001AAC  0E00               	movlw	0
  4066  001AAE  6E07               	movwf	___flge@ff2+2,c
  4067  001AB0  0E00               	movlw	0
  4068  001AB2  6E08               	movwf	___flge@ff2+3,c
  4069  001AB4                     l2481:
  4070  001AB4  AE04               	btfss	___flge@ff1+3,7,c
  4071  001AB6  D009               	goto	l2485
  4072  001AB8  6C01               	negf	___flge@ff1,c
  4073  001ABA  1E02               	comf	___flge@ff1+1,f,c
  4074  001ABC  B0D8               	btfsc	status,0,c
  4075  001ABE  2A02               	incf	___flge@ff1+1,f,c
  4076  001AC0  1E03               	comf	___flge@ff1+2,f,c
  4077  001AC2  B0D8               	btfsc	status,0,c
  4078  001AC4  2A03               	incf	___flge@ff1+2,f,c
  4079  001AC6  0E80               	movlw	128
  4080  001AC8  5604               	subfwb	___flge@ff1+3,f,c
  4081  001ACA                     l2485:
  4082  001ACA  AE08               	btfss	___flge@ff2+3,7,c
  4083  001ACC  D009               	goto	l470
  4084  001ACE  6C05               	negf	___flge@ff2,c
  4085  001AD0  1E06               	comf	___flge@ff2+1,f,c
  4086  001AD2  B0D8               	btfsc	status,0,c
  4087  001AD4  2A06               	incf	___flge@ff2+1,f,c
  4088  001AD6  1E07               	comf	___flge@ff2+2,f,c
  4089  001AD8  B0D8               	btfsc	status,0,c
  4090  001ADA  2A07               	incf	___flge@ff2+2,f,c
  4091  001ADC  0E80               	movlw	128
  4092  001ADE  5608               	subfwb	___flge@ff2+3,f,c
  4093  001AE0                     l470:
  4094  001AE0  0E00               	movlw	0
  4095  001AE2  1A01               	xorwf	___flge@ff1,f,c
  4096  001AE4  0E00               	movlw	0
  4097  001AE6  1A02               	xorwf	___flge@ff1+1,f,c
  4098  001AE8  0E00               	movlw	0
  4099  001AEA  1A03               	xorwf	___flge@ff1+2,f,c
  4100  001AEC  0E80               	movlw	128
  4101  001AEE  1A04               	xorwf	___flge@ff1+3,f,c
  4102  001AF0  0E00               	movlw	0
  4103  001AF2  1A05               	xorwf	___flge@ff2,f,c
  4104  001AF4  0E00               	movlw	0
  4105  001AF6  1A06               	xorwf	___flge@ff2+1,f,c
  4106  001AF8  0E00               	movlw	0
  4107  001AFA  1A07               	xorwf	___flge@ff2+2,f,c
  4108  001AFC  0E80               	movlw	128
  4109  001AFE  1A08               	xorwf	___flge@ff2+3,f,c
  4110  001B00  5005               	movf	___flge@ff2,w,c
  4111  001B02  5C01               	subwf	___flge@ff1,w,c
  4112  001B04  5006               	movf	___flge@ff2+1,w,c
  4113  001B06  5802               	subwfb	___flge@ff1+1,w,c
  4114  001B08  5007               	movf	___flge@ff2+2,w,c
  4115  001B0A  5803               	subwfb	___flge@ff1+2,w,c
  4116  001B0C  5008               	movf	___flge@ff2+3,w,c
  4117  001B0E  5804               	subwfb	___flge@ff1+3,w,c
  4118  001B10  B0D8               	btfsc	status,0,c
  4119  001B12  D002               	goto	l2491
  4120  001B14  90D8               	bcf	status,0,c
  4121  001B16  0012               	return	
  4122  001B18                     l2491:
  4123  001B18  80D8               	bsf	status,0,c
  4124  001B1A  0012               	return		;funcret
  4125  001B1C                     __end_of___flge:
  4126                           	opt callstack 0
  4127                           
  4128 ;; *************** function ___fldiv *****************
  4129 ;; Defined at:
  4130 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  b               4   47[COMRAM] unsigned char 
  4133 ;;  a               4   51[COMRAM] unsigned char 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  grs             4   66[COMRAM] unsigned long 
  4136 ;;  rem             4   59[COMRAM] unsigned long 
  4137 ;;  new_exp         2   64[COMRAM] short 
  4138 ;;  aexp            1   71[COMRAM] unsigned char 
  4139 ;;  bexp            1   70[COMRAM] unsigned char 
  4140 ;;  sign            1   63[COMRAM] unsigned char 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  4   47[COMRAM] unsigned char 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4150 ;;      Params:         8       0       0       0       0       0       0       0       0
  4151 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4152 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4153 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4154 ;;Total ram usage:       25 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_main
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text21
  4164  000EBE                     __ptext21:
  4165                           	opt callstack 0
  4166  000EBE                     ___fldiv:
  4167                           	opt callstack 30
  4168                           
  4169                           ;incstack = 0
  4170  000EBE  5033               	movf	___fldiv@b+3,w,c
  4171  000EC0  0B80               	andlw	128
  4172  000EC2  6E40               	movwf	___fldiv@sign,c
  4173  000EC4  5033               	movf	___fldiv@b+3,w,c
  4174  000EC6  2433               	addwf	___fldiv@b+3,w,c
  4175  000EC8  6E47               	movwf	___fldiv@bexp,c
  4176  000ECA  BE32               	btfsc	___fldiv@b+2,7,c
  4177  000ECC  8047               	bsf	___fldiv@bexp,0,c
  4178  000ECE  5047               	movf	___fldiv@bexp,w,c
  4179  000ED0  B4D8               	btfsc	status,2,c
  4180  000ED2  D00D               	goto	l2221
  4181  000ED4  2847               	incf	___fldiv@bexp,w,c
  4182  000ED6  A4D8               	btfss	status,2,c
  4183  000ED8  D008               	goto	l2217
  4184  000EDA  0E00               	movlw	0
  4185  000EDC  6E30               	movwf	___fldiv@b,c
  4186  000EDE  0E00               	movlw	0
  4187  000EE0  6E31               	movwf	___fldiv@b+1,c
  4188  000EE2  0E00               	movlw	0
  4189  000EE4  6E32               	movwf	___fldiv@b+2,c
  4190  000EE6  0E00               	movlw	0
  4191  000EE8  6E33               	movwf	___fldiv@b+3,c
  4192  000EEA                     l2217:
  4193  000EEA  8E32               	bsf	___fldiv@b+2,7,c
  4194  000EEC  D006               	goto	L3
  4195  000EEE                     l2221:
  4196  000EEE  0E00               	movlw	0
  4197  000EF0  6E30               	movwf	___fldiv@b,c
  4198  000EF2  0E00               	movlw	0
  4199  000EF4  6E31               	movwf	___fldiv@b+1,c
  4200  000EF6  0E00               	movlw	0
  4201  000EF8  6E32               	movwf	___fldiv@b+2,c
  4202  000EFA                     L3:
  4203  000EFA  0E00               	movlw	0
  4204  000EFC  6E33               	movwf	___fldiv@b+3,c
  4205  000EFE  5037               	movf	___fldiv@a+3,w,c
  4206  000F00  0B80               	andlw	128
  4207  000F02  1A40               	xorwf	___fldiv@sign,f,c
  4208  000F04  5037               	movf	___fldiv@a+3,w,c
  4209  000F06  2437               	addwf	___fldiv@a+3,w,c
  4210  000F08  6E48               	movwf	___fldiv@aexp,c
  4211  000F0A  BE36               	btfsc	___fldiv@a+2,7,c
  4212  000F0C  8048               	bsf	___fldiv@aexp,0,c
  4213  000F0E  5048               	movf	___fldiv@aexp,w,c
  4214  000F10  B4D8               	btfsc	status,2,c
  4215  000F12  D00D               	goto	l2241
  4216  000F14  2848               	incf	___fldiv@aexp,w,c
  4217  000F16  A4D8               	btfss	status,2,c
  4218  000F18  D008               	goto	l2237
  4219  000F1A  0E00               	movlw	0
  4220  000F1C  6E34               	movwf	___fldiv@a,c
  4221  000F1E  0E00               	movlw	0
  4222  000F20  6E35               	movwf	___fldiv@a+1,c
  4223  000F22  0E00               	movlw	0
  4224  000F24  6E36               	movwf	___fldiv@a+2,c
  4225  000F26  0E00               	movlw	0
  4226  000F28  6E37               	movwf	___fldiv@a+3,c
  4227  000F2A                     l2237:
  4228  000F2A  8E36               	bsf	___fldiv@a+2,7,c
  4229  000F2C  D006               	goto	L4
  4230  000F2E                     l2241:
  4231  000F2E  0E00               	movlw	0
  4232  000F30  6E34               	movwf	___fldiv@a,c
  4233  000F32  0E00               	movlw	0
  4234  000F34  6E35               	movwf	___fldiv@a+1,c
  4235  000F36  0E00               	movlw	0
  4236  000F38  6E36               	movwf	___fldiv@a+2,c
  4237  000F3A                     L4:
  4238  000F3A  0E00               	movlw	0
  4239  000F3C  6E37               	movwf	___fldiv@a+3,c
  4240  000F3E  5034               	movf	___fldiv@a,w,c
  4241  000F40  1035               	iorwf	___fldiv@a+1,w,c
  4242  000F42  1036               	iorwf	___fldiv@a+2,w,c
  4243  000F44  1037               	iorwf	___fldiv@a+3,w,c
  4244  000F46  A4D8               	btfss	status,2,c
  4245  000F48  D017               	goto	l2255
  4246  000F4A  0E00               	movlw	0
  4247  000F4C  6E30               	movwf	___fldiv@b,c
  4248  000F4E  0E00               	movlw	0
  4249  000F50  6E31               	movwf	___fldiv@b+1,c
  4250  000F52  0E00               	movlw	0
  4251  000F54  6E32               	movwf	___fldiv@b+2,c
  4252  000F56  0E00               	movlw	0
  4253  000F58  6E33               	movwf	___fldiv@b+3,c
  4254  000F5A  0E80               	movlw	128
  4255  000F5C  1232               	iorwf	___fldiv@b+2,f,c
  4256  000F5E  0E7F               	movlw	127
  4257  000F60  1233               	iorwf	___fldiv@b+3,f,c
  4258  000F62                     l2249:
  4259  000F62  5040               	movf	___fldiv@sign,w,c
  4260  000F64  1233               	iorwf	___fldiv@b+3,f,c
  4261  000F66  C030  F030         	movff	___fldiv@b,?___fldiv
  4262  000F6A  C031  F031         	movff	___fldiv@b+1,?___fldiv+1
  4263  000F6E  C032  F032         	movff	___fldiv@b+2,?___fldiv+2
  4264  000F72  C033  F033         	movff	___fldiv@b+3,?___fldiv+3
  4265  000F76  0012               	return	
  4266  000F78                     l2255:
  4267  000F78  5047               	movf	___fldiv@bexp,w,c
  4268  000F7A  A4D8               	btfss	status,2,c
  4269  000F7C  D009               	goto	l2263
  4270  000F7E  0E00               	movlw	0
  4271  000F80  6E30               	movwf	?___fldiv,c
  4272  000F82  0E00               	movlw	0
  4273  000F84  6E31               	movwf	?___fldiv+1,c
  4274  000F86  0E00               	movlw	0
  4275  000F88  6E32               	movwf	?___fldiv+2,c
  4276  000F8A  0E00               	movlw	0
  4277  000F8C  6E33               	movwf	?___fldiv+3,c
  4278  000F8E  0012               	return	
  4279  000F90                     l2263:
  4280  000F90  5048               	movf	___fldiv@aexp,w,c
  4281  000F92  C047  F038         	movff	___fldiv@bexp,??___fldiv
  4282  000F96  6A39               	clrf	(??___fldiv+1)& (0+255),c
  4283  000F98  5E38               	subwf	??___fldiv,f,c
  4284  000F9A  0E00               	movlw	0
  4285  000F9C  5A39               	subwfb	??___fldiv+1,f,c
  4286  000F9E  0E7F               	movlw	127
  4287  000FA0  2438               	addwf	??___fldiv,w,c
  4288  000FA2  6E41               	movwf	___fldiv@new_exp,c
  4289  000FA4  0E00               	movlw	0
  4290  000FA6  2039               	addwfc	??___fldiv+1,w,c
  4291  000FA8  6E42               	movwf	___fldiv@new_exp+1,c
  4292  000FAA  C030  F03C         	movff	___fldiv@b,___fldiv@rem
  4293  000FAE  C031  F03D         	movff	___fldiv@b+1,___fldiv@rem+1
  4294  000FB2  C032  F03E         	movff	___fldiv@b+2,___fldiv@rem+2
  4295  000FB6  C033  F03F         	movff	___fldiv@b+3,___fldiv@rem+3
  4296  000FBA  0E00               	movlw	0
  4297  000FBC  6E30               	movwf	___fldiv@b,c
  4298  000FBE  0E00               	movlw	0
  4299  000FC0  6E31               	movwf	___fldiv@b+1,c
  4300  000FC2  0E00               	movlw	0
  4301  000FC4  6E32               	movwf	___fldiv@b+2,c
  4302  000FC6  0E00               	movlw	0
  4303  000FC8  6E33               	movwf	___fldiv@b+3,c
  4304  000FCA  0E00               	movlw	0
  4305  000FCC  6E43               	movwf	___fldiv@grs,c
  4306  000FCE  0E00               	movlw	0
  4307  000FD0  6E44               	movwf	___fldiv@grs+1,c
  4308  000FD2  0E00               	movlw	0
  4309  000FD4  6E45               	movwf	___fldiv@grs+2,c
  4310  000FD6  0E00               	movlw	0
  4311  000FD8  6E46               	movwf	___fldiv@grs+3,c
  4312  000FDA  0E00               	movlw	0
  4313  000FDC  6E48               	movwf	___fldiv@aexp,c
  4314  000FDE  D028               	goto	l789
  4315  000FE0                     l2273:
  4316  000FE0  5048               	movf	___fldiv@aexp,w,c
  4317  000FE2  B4D8               	btfsc	status,2,c
  4318  000FE4  D011               	goto	l2281
  4319  000FE6  90D8               	bcf	status,0,c
  4320  000FE8  363C               	rlcf	___fldiv@rem,f,c
  4321  000FEA  363D               	rlcf	___fldiv@rem+1,f,c
  4322  000FEC  363E               	rlcf	___fldiv@rem+2,f,c
  4323  000FEE  363F               	rlcf	___fldiv@rem+3,f,c
  4324  000FF0  90D8               	bcf	status,0,c
  4325  000FF2  3630               	rlcf	___fldiv@b,f,c
  4326  000FF4  3631               	rlcf	___fldiv@b+1,f,c
  4327  000FF6  3632               	rlcf	___fldiv@b+2,f,c
  4328  000FF8  3633               	rlcf	___fldiv@b+3,f,c
  4329  000FFA  BE46               	btfsc	___fldiv@grs+3,7,c
  4330  000FFC  8030               	bsf	___fldiv@b,0,c
  4331  000FFE  90D8               	bcf	status,0,c
  4332  001000  3643               	rlcf	___fldiv@grs,f,c
  4333  001002  3644               	rlcf	___fldiv@grs+1,f,c
  4334  001004  3645               	rlcf	___fldiv@grs+2,f,c
  4335  001006  3646               	rlcf	___fldiv@grs+3,f,c
  4336  001008                     l2281:
  4337  001008  5034               	movf	___fldiv@a,w,c
  4338  00100A  5C3C               	subwf	___fldiv@rem,w,c
  4339  00100C  5035               	movf	___fldiv@a+1,w,c
  4340  00100E  583D               	subwfb	___fldiv@rem+1,w,c
  4341  001010  5036               	movf	___fldiv@a+2,w,c
  4342  001012  583E               	subwfb	___fldiv@rem+2,w,c
  4343  001014  5037               	movf	___fldiv@a+3,w,c
  4344  001016  583F               	subwfb	___fldiv@rem+3,w,c
  4345  001018  A0D8               	btfss	status,0,c
  4346  00101A  D009               	goto	l2287
  4347  00101C  8C46               	bsf	___fldiv@grs+3,6,c
  4348  00101E  5034               	movf	___fldiv@a,w,c
  4349  001020  5E3C               	subwf	___fldiv@rem,f,c
  4350  001022  5035               	movf	___fldiv@a+1,w,c
  4351  001024  5A3D               	subwfb	___fldiv@rem+1,f,c
  4352  001026  5036               	movf	___fldiv@a+2,w,c
  4353  001028  5A3E               	subwfb	___fldiv@rem+2,f,c
  4354  00102A  5037               	movf	___fldiv@a+3,w,c
  4355  00102C  5A3F               	subwfb	___fldiv@rem+3,f,c
  4356  00102E                     l2287:
  4357  00102E  2A48               	incf	___fldiv@aexp,f,c
  4358  001030                     l789:
  4359  001030  0E19               	movlw	25
  4360  001032  6448               	cpfsgt	___fldiv@aexp,c
  4361  001034  D7D5               	goto	l2273
  4362  001036  503C               	movf	___fldiv@rem,w,c
  4363  001038  103D               	iorwf	___fldiv@rem+1,w,c
  4364  00103A  103E               	iorwf	___fldiv@rem+2,w,c
  4365  00103C  103F               	iorwf	___fldiv@rem+3,w,c
  4366  00103E  B4D8               	btfsc	status,2,c
  4367  001040  D011               	goto	l2299
  4368  001042  8043               	bsf	___fldiv@grs,0,c
  4369  001044  D00F               	goto	l2299
  4370  001046                     l2293:
  4371  001046  90D8               	bcf	status,0,c
  4372  001048  3630               	rlcf	___fldiv@b,f,c
  4373  00104A  3631               	rlcf	___fldiv@b+1,f,c
  4374  00104C  3632               	rlcf	___fldiv@b+2,f,c
  4375  00104E  3633               	rlcf	___fldiv@b+3,f,c
  4376  001050  BE46               	btfsc	___fldiv@grs+3,7,c
  4377  001052  8030               	bsf	___fldiv@b,0,c
  4378  001054  90D8               	bcf	status,0,c
  4379  001056  3643               	rlcf	___fldiv@grs,f,c
  4380  001058  3644               	rlcf	___fldiv@grs+1,f,c
  4381  00105A  3645               	rlcf	___fldiv@grs+2,f,c
  4382  00105C  3646               	rlcf	___fldiv@grs+3,f,c
  4383  00105E  0641               	decf	___fldiv@new_exp,f,c
  4384  001060  A0D8               	btfss	status,0,c
  4385  001062  0642               	decf	___fldiv@new_exp+1,f,c
  4386  001064                     l2299:
  4387  001064  AE32               	btfss	___fldiv@b+2,7,c
  4388  001066  D7EF               	goto	l2293
  4389  001068  0E00               	movlw	0
  4390  00106A  6E48               	movwf	___fldiv@aexp,c
  4391  00106C  AE46               	btfss	___fldiv@grs+3,7,c
  4392  00106E  D017               	goto	l800
  4393  001070  0EFF               	movlw	255
  4394  001072  1443               	andwf	___fldiv@grs,w,c
  4395  001074  6E38               	movwf	??___fldiv& (0+255),c
  4396  001076  0EFF               	movlw	255
  4397  001078  1444               	andwf	___fldiv@grs+1,w,c
  4398  00107A  6E39               	movwf	(??___fldiv+1)& (0+255),c
  4399  00107C  0EFF               	movlw	255
  4400  00107E  1445               	andwf	___fldiv@grs+2,w,c
  4401  001080  6E3A               	movwf	(??___fldiv+2)& (0+255),c
  4402  001082  0E7F               	movlw	127
  4403  001084  1446               	andwf	___fldiv@grs+3,w,c
  4404  001086  6E3B               	movwf	(??___fldiv+3)& (0+255),c
  4405  001088  5038               	movf	??___fldiv,w,c
  4406  00108A  1039               	iorwf	??___fldiv+1,w,c
  4407  00108C  103A               	iorwf	??___fldiv+2,w,c
  4408  00108E  103B               	iorwf	??___fldiv+3,w,c
  4409  001090  B4D8               	btfsc	status,2,c
  4410  001092  D003               	goto	l801
  4411  001094                     u2180:
  4412  001094  0E01               	movlw	1
  4413  001096  6E48               	movwf	___fldiv@aexp,c
  4414  001098  D002               	goto	l800
  4415  00109A                     l801:
  4416  00109A  B030               	btfsc	___fldiv@b,0,c
  4417  00109C  D7FB               	goto	u2180
  4418  00109E                     l800:
  4419  00109E  5048               	movf	___fldiv@aexp,w,c
  4420  0010A0  B4D8               	btfsc	status,2,c
  4421  0010A2  D01F               	goto	l2319
  4422  0010A4  0E01               	movlw	1
  4423  0010A6  2630               	addwf	___fldiv@b,f,c
  4424  0010A8  0E00               	movlw	0
  4425  0010AA  2231               	addwfc	___fldiv@b+1,f,c
  4426  0010AC  2232               	addwfc	___fldiv@b+2,f,c
  4427  0010AE  2233               	addwfc	___fldiv@b+3,f,c
  4428  0010B0  A033               	btfss	___fldiv@b+3,0,c
  4429  0010B2  D017               	goto	l2319
  4430  0010B4  C030  F038         	movff	___fldiv@b,??___fldiv
  4431  0010B8  C031  F039         	movff	___fldiv@b+1,??___fldiv+1
  4432  0010BC  C032  F03A         	movff	___fldiv@b+2,??___fldiv+2
  4433  0010C0  C033  F03B         	movff	___fldiv@b+3,??___fldiv+3
  4434  0010C4  343B               	rlcf	??___fldiv+3,w,c
  4435  0010C6  323B               	rrcf	??___fldiv+3,f,c
  4436  0010C8  323A               	rrcf	??___fldiv+2,f,c
  4437  0010CA  3239               	rrcf	??___fldiv+1,f,c
  4438  0010CC  3238               	rrcf	??___fldiv,f,c
  4439  0010CE  C038  F030         	movff	??___fldiv,___fldiv@b
  4440  0010D2  C039  F031         	movff	??___fldiv+1,___fldiv@b+1
  4441  0010D6  C03A  F032         	movff	??___fldiv+2,___fldiv@b+2
  4442  0010DA  C03B  F033         	movff	??___fldiv+3,___fldiv@b+3
  4443  0010DE  4A41               	infsnz	___fldiv@new_exp,f,c
  4444  0010E0  2A42               	incf	___fldiv@new_exp+1,f,c
  4445  0010E2                     l2319:
  4446  0010E2  BE42               	btfsc	___fldiv@new_exp+1,7,c
  4447  0010E4  D010               	goto	l2323
  4448  0010E6  5042               	movf	___fldiv@new_exp+1,w,c
  4449  0010E8  E103               	bnz	u2220
  4450  0010EA  2841               	incf	___fldiv@new_exp,w,c
  4451  0010EC  A0D8               	btfss	status,0,c
  4452  0010EE  D00B               	goto	l2323
  4453  0010F0                     u2220:
  4454  0010F0  0E00               	movlw	0
  4455  0010F2  6E42               	movwf	___fldiv@new_exp+1,c
  4456  0010F4  6841               	setf	___fldiv@new_exp,c
  4457  0010F6  0E00               	movlw	0
  4458  0010F8  6E30               	movwf	___fldiv@b,c
  4459  0010FA  0E00               	movlw	0
  4460  0010FC  6E31               	movwf	___fldiv@b+1,c
  4461  0010FE  0E00               	movlw	0
  4462  001100  6E32               	movwf	___fldiv@b+2,c
  4463  001102  0E00               	movlw	0
  4464  001104  6E33               	movwf	___fldiv@b+3,c
  4465  001106                     l2323:
  4466  001106  BE42               	btfsc	___fldiv@new_exp+1,7,c
  4467  001108  D005               	goto	u2230
  4468  00110A  5042               	movf	___fldiv@new_exp+1,w,c
  4469  00110C  E111               	bnz	l2327
  4470  00110E  0441               	decf	___fldiv@new_exp,w,c
  4471  001110  B0D8               	btfsc	status,0,c
  4472  001112  D00E               	goto	l2327
  4473  001114                     u2230:
  4474  001114  0E00               	movlw	0
  4475  001116  6E42               	movwf	___fldiv@new_exp+1,c
  4476  001118  0E00               	movlw	0
  4477  00111A  6E41               	movwf	___fldiv@new_exp,c
  4478  00111C  0E00               	movlw	0
  4479  00111E  6E30               	movwf	___fldiv@b,c
  4480  001120  0E00               	movlw	0
  4481  001122  6E31               	movwf	___fldiv@b+1,c
  4482  001124  0E00               	movlw	0
  4483  001126  6E32               	movwf	___fldiv@b+2,c
  4484  001128  0E00               	movlw	0
  4485  00112A  6E33               	movwf	___fldiv@b+3,c
  4486  00112C  0E00               	movlw	0
  4487  00112E  6E40               	movwf	___fldiv@sign,c
  4488  001130                     l2327:
  4489  001130  C041  F047         	movff	___fldiv@new_exp,___fldiv@bexp
  4490  001134  A047               	btfss	___fldiv@bexp,0,c
  4491  001136  D002               	goto	l2333
  4492  001138  8E32               	bsf	___fldiv@b+2,7,c
  4493  00113A  D001               	goto	l2335
  4494  00113C                     l2333:
  4495  00113C  9E32               	bcf	___fldiv@b+2,7,c
  4496  00113E                     l2335:
  4497  00113E  90D8               	bcf	status,0,c
  4498  001140  3047               	rrcf	___fldiv@bexp,w,c
  4499  001142  6E33               	movwf	___fldiv@b+3,c
  4500  001144  D70E               	goto	l2249
  4501  001146                     __end_of___fldiv:
  4502                           	opt callstack 0
  4503                           
  4504 ;; *************** function _LCD_String_xy *****************
  4505 ;; Defined at:
  4506 ;;		line 70 in file "lcd.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  row             1    wreg     unsigned char 
  4509 ;;  pos             1    4[COMRAM] unsigned char 
  4510 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  4511 ;;		 -> STR_4(4), STR_3(4), main@Soil(10), main@Temperature(10), 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  row             1    7[COMRAM] unsigned char 
  4514 ;;  location        1    8[COMRAM] unsigned char 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4524 ;;      Params:         3       0       0       0       0       0       0       0       0
  4525 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4527 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4528 ;;Total ram usage:        5 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    2
  4531 ;; This function calls:
  4532 ;;		_LCD_Command
  4533 ;;		_LCD_String
  4534 ;; This function is called by:
  4535 ;;		_main
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text22
  4540  001F82                     __ptext22:
  4541                           	opt callstack 0
  4542  001F82                     _LCD_String_xy:
  4543                           	opt callstack 28
  4544                           
  4545                           ;incstack = 0
  4546                           ;LCD_String_xy@row stored from wreg
  4547  001F82  6E08               	movwf	LCD_String_xy@row,c
  4548                           
  4549                           ;lcd.c: 73:     if(row<=1)
  4550  001F84  0E02               	movlw	2
  4551  001F86  6008               	cpfslt	LCD_String_xy@row,c
  4552  001F88  D008               	goto	l2143
  4553                           
  4554                           ;lcd.c: 74:     {;lcd.c: 75:         location=(0x80) | ((pos) & 0x0f);
  4555  001F8A  5005               	movf	LCD_String_xy@pos,w,c
  4556  001F8C  0B0F               	andlw	15
  4557  001F8E  0980               	iorlw	128
  4558  001F90  6E09               	movwf	LCD_String_xy@location,c
  4559                           
  4560                           ;lcd.c: 76:         LCD_Command(location);
  4561  001F92  5009               	movf	LCD_String_xy@location,w,c
  4562  001F94  EC42  F010         	call	_LCD_Command
  4563                           
  4564                           ;lcd.c: 77:     }
  4565  001F98  D007               	goto	l2147
  4566  001F9A                     l2143:
  4567                           
  4568                           ;lcd.c: 79:     {;lcd.c: 80:         location=(0xC0) | ((pos) & 0x0f);
  4569  001F9A  5005               	movf	LCD_String_xy@pos,w,c
  4570  001F9C  0B0F               	andlw	15
  4571  001F9E  09C0               	iorlw	192
  4572  001FA0  6E09               	movwf	LCD_String_xy@location,c
  4573                           
  4574                           ;lcd.c: 81:         LCD_Command(location);
  4575  001FA2  5009               	movf	LCD_String_xy@location,w,c
  4576  001FA4  EC42  F010         	call	_LCD_Command
  4577  001FA8                     l2147:
  4578                           
  4579                           ;lcd.c: 83:     LCD_String(msg);
  4580  001FA8  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  4581  001FAC  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  4582  001FB0  EC17  F00F         	call	_LCD_String	;wreg free
  4583  001FB4  0012               	return		;funcret
  4584  001FB6                     __end_of_LCD_String_xy:
  4585                           	opt callstack 0
  4586                           
  4587 ;; *************** function _LCD_String *****************
  4588 ;; Defined at:
  4589 ;;		line 61 in file "lcd.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  4592 ;;		 -> STR_4(4), STR_3(4), main@Soil(10), main@Temperature(10), 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4604 ;;      Params:         2       0       0       0       0       0       0       0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4607 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4608 ;;Total ram usage:        2 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    1
  4611 ;; This function calls:
  4612 ;;		_LCD_Char
  4613 ;; This function is called by:
  4614 ;;		_LCD_String_xy
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text23
  4619  001E2E                     __ptext23:
  4620                           	opt callstack 0
  4621  001E2E                     _LCD_String:
  4622                           	opt callstack 28
  4623                           
  4624                           ;lcd.c: 61: void LCD_String(const char *msg);lcd.c: 62: {;lcd.c: 63:  while((*msg)!=0)
  4625                           
  4626                           ;incstack = 0
  4627  001E2E  D014               	goto	l2085
  4628  001E30                     l2081:
  4629                           
  4630                           ;lcd.c: 64:  {;lcd.c: 65:    LCD_Char(*msg);
  4631  001E30  C003  FFF6         	movff	LCD_String@msg,tblptrl
  4632  001E34  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4633  001E38  6AF8               	clrf	tblptru,c
  4634  001E3A  0E07               	movlw	(high __ramtop+-1)
  4635  001E3C  64F7               	cpfsgt	tblptrh,c
  4636  001E3E  D003               	bra	u1837
  4637  001E40  0008               	tblrd		*
  4638  001E42  50F5               	movf	tablat,w,c
  4639  001E44  D005               	bra	u1830
  4640  001E46                     u1837:
  4641  001E46  CFF6 FFE1          	movff	tblptrl,fsr1l
  4642  001E4A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4643  001E4E  50E7               	movf	indf1,w,c
  4644  001E50                     u1830:
  4645  001E50  EC33  F010         	call	_LCD_Char
  4646                           
  4647                           ;lcd.c: 66:    msg++;
  4648  001E54  4A03               	infsnz	LCD_String@msg,f,c
  4649  001E56  2A04               	incf	LCD_String@msg+1,f,c
  4650  001E58                     l2085:
  4651                           
  4652                           ;lcd.c: 63:  while((*msg)!=0)
  4653  001E58  C003  FFF6         	movff	LCD_String@msg,tblptrl
  4654  001E5C  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4655  001E60  6AF8               	clrf	tblptru,c
  4656  001E62  0E07               	movlw	(high __ramtop+-1)
  4657  001E64  64F7               	cpfsgt	tblptrh,c
  4658  001E66  D003               	bra	u1847
  4659  001E68  0008               	tblrd		*
  4660  001E6A  50F5               	movf	tablat,w,c
  4661  001E6C  D005               	bra	u1840
  4662  001E6E                     u1847:
  4663  001E6E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4664  001E72  CFF7 FFE2          	movff	tblptrh,fsr1h
  4665  001E76  50E7               	movf	indf1,w,c
  4666  001E78                     u1840:
  4667  001E78  0900               	iorlw	0
  4668  001E7A  B4D8               	btfsc	status,2,c
  4669  001E7C  0012               	return	
  4670  001E7E  D7D8               	goto	l2081
  4671  001E80                     __end_of_LCD_String:
  4672                           	opt callstack 0
  4673                           
  4674 ;; *************** function _LCD_Char *****************
  4675 ;; Defined at:
  4676 ;;		line 50 in file "lcd.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  dat             1    wreg     unsigned char 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  dat             1    1[COMRAM] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4690 ;;      Params:         0       0       0       0       0       0       0       0       0
  4691 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4692 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4693 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4694 ;;Total ram usage:        2 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_LCD_String
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text24
  4704  002066                     __ptext24:
  4705                           	opt callstack 0
  4706  002066                     _LCD_Char:
  4707                           	opt callstack 28
  4708                           
  4709                           ;incstack = 0
  4710                           ;LCD_Char@dat stored from wreg
  4711  002066  6E02               	movwf	LCD_Char@dat,c
  4712                           
  4713                           ;lcd.c: 50: void LCD_Char(char dat);lcd.c: 51: {;lcd.c: 52:  LATB= dat;
  4714  002068  C002  FF8A         	movff	LCD_Char@dat,3978	;volatile
  4715                           
  4716                           ;lcd.c: 53:  LATD0 = 1;
  4717  00206C  808C               	bsf	3980,0,c	;volatile
  4718                           
  4719                           ;lcd.c: 54:  LATD1=1;
  4720  00206E  828C               	bsf	3980,1,c	;volatile
  4721                           
  4722                           ;lcd.c: 55:  __nop();
  4723  002070  F000               	nop	
  4724                           
  4725                           ;lcd.c: 56:  LATD1=0;
  4726  002072  928C               	bcf	3980,1,c	;volatile
  4727                           
  4728                           ;lcd.c: 57:     _delay((unsigned long)((1)*(8000000/4000.0)));
  4729  002074  0E03               	movlw	3
  4730  002076  6E01               	movwf	??_LCD_Char& (0+255),c
  4731  002078  0E98               	movlw	152
  4732  00207A                     u2797:
  4733  00207A  2EE8               	decfsz	wreg,f,c
  4734  00207C  D7FE               	bra	u2797
  4735  00207E  2E01               	decfsz	??_LCD_Char& (0+255),f,c
  4736  002080  D7FC               	bra	u2797
  4737  002082  0012               	return		;funcret
  4738  002084                     __end_of_LCD_Char:
  4739                           	opt callstack 0
  4740                           
  4741 ;; *************** function _LCD_Init *****************
  4742 ;; Defined at:
  4743 ;;		line 24 in file "lcd.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;		None
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4757 ;;      Params:         0       0       0       0       0       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4759 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4760 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4761 ;;Total ram usage:        1 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    1
  4764 ;; This function calls:
  4765 ;;		_LCD_Command
  4766 ;; This function is called by:
  4767 ;;		_main
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text25
  4772  001FE8                     __ptext25:
  4773                           	opt callstack 0
  4774  001FE8                     _LCD_Init:
  4775                           	opt callstack 29
  4776                           
  4777                           ;lcd.c: 26:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4778                           
  4779                           ;incstack = 0
  4780  001FE8  0E27               	movlw	39
  4781  001FEA  6E03               	movwf	??_LCD_Init& (0+255),c
  4782  001FEC  0EF5               	movlw	245
  4783  001FEE                     u2807:
  4784  001FEE  2EE8               	decfsz	wreg,f,c
  4785  001FF0  D7FE               	bra	u2807
  4786  001FF2  2E03               	decfsz	??_LCD_Init& (0+255),f,c
  4787  001FF4  D7FC               	bra	u2807
  4788  001FF6  F000               	nop	
  4789                           
  4790                           ;lcd.c: 27:     TRISB = 0x00;
  4791  001FF8  0E00               	movlw	0
  4792  001FFA  6E93               	movwf	3987,c	;volatile
  4793                           
  4794                           ;lcd.c: 28:     TRISD = 0x00;
  4795  001FFC  0E00               	movlw	0
  4796  001FFE  6E95               	movwf	3989,c	;volatile
  4797                           
  4798                           ;lcd.c: 29:  LCD_Command(0x38);
  4799  002000  0E38               	movlw	56
  4800  002002  EC42  F010         	call	_LCD_Command
  4801                           
  4802                           ;lcd.c: 30:     LCD_Command(0x01);
  4803  002006  0E01               	movlw	1
  4804  002008  EC42  F010         	call	_LCD_Command
  4805                           
  4806                           ;lcd.c: 31:     LCD_Command(0x0c);
  4807  00200C  0E0C               	movlw	12
  4808  00200E  EC42  F010         	call	_LCD_Command
  4809                           
  4810                           ;lcd.c: 32:     LCD_Command(0x06);
  4811  002012  0E06               	movlw	6
  4812  002014  EC42  F010         	call	_LCD_Command
  4813  002018  0012               	return		;funcret
  4814  00201A                     __end_of_LCD_Init:
  4815                           	opt callstack 0
  4816                           
  4817 ;; *************** function _LCD_Clear *****************
  4818 ;; Defined at:
  4819 ;;		line 35 in file "lcd.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4833 ;;      Params:         0       0       0       0       0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4836 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4837 ;;Total ram usage:        0 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    1
  4840 ;; This function calls:
  4841 ;;		_LCD_Command
  4842 ;; This function is called by:
  4843 ;;		_main
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text26
  4848  0020B6                     __ptext26:
  4849                           	opt callstack 0
  4850  0020B6                     _LCD_Clear:
  4851                           	opt callstack 29
  4852                           
  4853                           ;lcd.c: 37:     LCD_Command(0x01);
  4854                           
  4855                           ;incstack = 0
  4856  0020B6  0E01               	movlw	1
  4857  0020B8  EC42  F010         	call	_LCD_Command
  4858  0020BC  0012               	return		;funcret
  4859  0020BE                     __end_of_LCD_Clear:
  4860                           	opt callstack 0
  4861                           
  4862 ;; *************** function _LCD_Command *****************
  4863 ;; Defined at:
  4864 ;;		line 40 in file "lcd.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  cmd             1    wreg     unsigned char 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  cmd             1    1[COMRAM] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4878 ;;      Params:         0       0       0       0       0       0       0       0       0
  4879 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4880 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4881 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4882 ;;Total ram usage:        2 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_LCD_Init
  4888 ;;		_LCD_Clear
  4889 ;;		_LCD_String_xy
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text27
  4894  002084                     __ptext27:
  4895                           	opt callstack 0
  4896  002084                     _LCD_Command:
  4897                           	opt callstack 29
  4898                           
  4899                           ;incstack = 0
  4900                           ;LCD_Command@cmd stored from wreg
  4901  002084  6E02               	movwf	LCD_Command@cmd,c
  4902                           
  4903                           ;lcd.c: 40: void LCD_Command(char cmd );lcd.c: 41: {;lcd.c: 42:  LATB= cmd;
  4904  002086  C002  FF8A         	movff	LCD_Command@cmd,3978	;volatile
  4905                           
  4906                           ;lcd.c: 43:  LATD0 = 0;
  4907  00208A  908C               	bcf	3980,0,c	;volatile
  4908                           
  4909                           ;lcd.c: 44:  LATD1 = 1;
  4910  00208C  828C               	bsf	3980,1,c	;volatile
  4911                           
  4912                           ;lcd.c: 45:  __nop();
  4913  00208E  F000               	nop	
  4914                           
  4915                           ;lcd.c: 46:  LATD1 = 0;
  4916  002090  928C               	bcf	3980,1,c	;volatile
  4917                           
  4918                           ;lcd.c: 47:  _delay((unsigned long)((3)*(8000000/4000.0)));
  4919  002092  0E08               	movlw	8
  4920  002094  6E01               	movwf	??_LCD_Command& (0+255),c
  4921  002096  0ECA               	movlw	202
  4922  002098                     u2817:
  4923  002098  2EE8               	decfsz	wreg,f,c
  4924  00209A  D7FE               	bra	u2817
  4925  00209C  2E01               	decfsz	??_LCD_Command& (0+255),f,c
  4926  00209E  D7FC               	bra	u2817
  4927  0020A0  0012               	return		;funcret
  4928  0020A2                     __end_of_LCD_Command:
  4929                           	opt callstack 0
  4930                           
  4931 ;; *************** function _ADC_Read *****************
  4932 ;; Defined at:
  4933 ;;		line 19 in file "adc_source.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  channel         2    0[COMRAM] int 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  digital         2    6[COMRAM] int 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  2    0[COMRAM] int 
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, status,0
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4947 ;;      Params:         2       0       0       0       0       0       0       0       0
  4948 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4949 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4950 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4951 ;;Total ram usage:        8 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_main
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text28
  4961  001D0C                     __ptext28:
  4962                           	opt callstack 0
  4963  001D0C                     _ADC_Read:
  4964                           	opt callstack 30
  4965                           
  4966                           ;adc_source.c: 19: int ADC_Read(int channel);adc_source.c: 20: {;adc_source.c: 21:     i
      +                          nt digital;;adc_source.c: 22:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b001111
      +                          00);
  4967                           
  4968                           ;incstack = 0
  4969  001D0C  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  4970  001D10  90D8               	bcf	status,0,c
  4971  001D12  3603               	rlcf	??_ADC_Read,f,c
  4972  001D14  90D8               	bcf	status,0,c
  4973  001D16  3603               	rlcf	??_ADC_Read,f,c
  4974  001D18  0E3C               	movlw	60
  4975  001D1A  1603               	andwf	??_ADC_Read,f,c
  4976  001D1C  50C2               	movf	4034,w,c	;volatile
  4977  001D1E  0BC3               	andlw	195
  4978  001D20  1003               	iorwf	??_ADC_Read,w,c
  4979  001D22  6EC2               	movwf	4034,c	;volatile
  4980                           
  4981                           ;adc_source.c: 24:     ADCON0 |= ((1<<ADON)|(1<<GO));
  4982  001D24  A2C2               	btfss	4034,1,c	;volatile
  4983  001D26  D003               	goto	u1870
  4984  001D28  6A03               	clrf	??_ADC_Read& (0+255),c
  4985  001D2A  2A03               	incf	??_ADC_Read& (0+255),f,c
  4986  001D2C  D001               	goto	u1888
  4987  001D2E                     u1870:
  4988  001D2E  6A03               	clrf	??_ADC_Read& (0+255),c
  4989  001D30                     u1888:
  4990  001D30  0E01               	movlw	1
  4991  001D32  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  4992  001D34  2A03               	incf	??_ADC_Read,f,c
  4993  001D36  D002               	goto	u1894
  4994  001D38                     u1895:
  4995  001D38  90D8               	bcf	status,0,c
  4996  001D3A  3604               	rlcf	??_ADC_Read+1,f,c
  4997  001D3C                     u1894:
  4998  001D3C  2E03               	decfsz	??_ADC_Read,f,c
  4999  001D3E  D7FC               	goto	u1895
  5000  001D40  A0C2               	btfss	4034,0,c	;volatile
  5001  001D42  D003               	goto	u1900
  5002  001D44  6A05               	clrf	(??_ADC_Read+2)& (0+255),c
  5003  001D46  2A05               	incf	(??_ADC_Read+2)& (0+255),f,c
  5004  001D48  D001               	goto	u1918
  5005  001D4A                     u1900:
  5006  001D4A  6A05               	clrf	(??_ADC_Read+2)& (0+255),c
  5007  001D4C                     u1918:
  5008  001D4C  0E01               	movlw	1
  5009  001D4E  6E06               	movwf	(??_ADC_Read+3)& (0+255),c
  5010  001D50  2A05               	incf	??_ADC_Read+2,f,c
  5011  001D52  D002               	goto	u1924
  5012  001D54                     u1925:
  5013  001D54  90D8               	bcf	status,0,c
  5014  001D56  3606               	rlcf	??_ADC_Read+3,f,c
  5015  001D58                     u1924:
  5016  001D58  2E05               	decfsz	??_ADC_Read+2,f,c
  5017  001D5A  D7FC               	goto	u1925
  5018  001D5C  5006               	movf	??_ADC_Read+3,w,c
  5019  001D5E  1004               	iorwf	??_ADC_Read+1,w,c
  5020  001D60  12C2               	iorwf	4034,f,c	;volatile
  5021  001D62                     l66:
  5022  001D62  B2C2               	btfsc	4034,1,c	;volatile
  5023  001D64  D7FE               	goto	l66
  5024                           
  5025                           ;adc_source.c: 26:     digital = (ADRESH*256) | (ADRESL);
  5026  001D66  50C3               	movf	4035,w,c	;volatile
  5027  001D68  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  5028  001D6C  6A04               	clrf	(??_ADC_Read+1)& (0+255),c
  5029  001D6E  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  5030  001D72  6A03               	clrf	??_ADC_Read,c
  5031  001D74  1003               	iorwf	??_ADC_Read,w,c
  5032  001D76  6E07               	movwf	ADC_Read@digital,c
  5033  001D78  5004               	movf	??_ADC_Read+1,w,c
  5034  001D7A  6E08               	movwf	ADC_Read@digital+1,c
  5035                           
  5036                           ;adc_source.c: 27:     return(digital);
  5037  001D7C  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  5038  001D80  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  5039  001D84  0012               	return		;funcret
  5040  001D86                     __end_of_ADC_Read:
  5041                           	opt callstack 0
  5042                           
  5043 ;; *************** function _ADC_Init *****************
  5044 ;; Defined at:
  5045 ;;		line 10 in file "adc_source.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;		None
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1    wreg      void 
  5052 ;; Registers used:
  5053 ;;		wreg, status,2
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5059 ;;      Params:         0       0       0       0       0       0       0       0       0
  5060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5062 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5063 ;;Total ram usage:        0 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; This function calls:
  5066 ;;		Nothing
  5067 ;; This function is called by:
  5068 ;;		_main
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text29
  5073  0020A2                     __ptext29:
  5074                           	opt callstack 0
  5075  0020A2                     _ADC_Init:
  5076                           	opt callstack 30
  5077                           
  5078                           ;adc_source.c: 12:     TRISA = 0xff;
  5079                           
  5080                           ;incstack = 0
  5081  0020A2  6892               	setf	3986,c	;volatile
  5082                           
  5083                           ;adc_source.c: 13:     ADCON1 = 0x00;
  5084  0020A4  0E00               	movlw	0
  5085  0020A6  6EC1               	movwf	4033,c	;volatile
  5086                           
  5087                           ;adc_source.c: 14:     ADCON2 = 0x92;
  5088  0020A8  0E92               	movlw	146
  5089  0020AA  6EC0               	movwf	4032,c	;volatile
  5090                           
  5091                           ;adc_source.c: 15:     ADRESH=0;
  5092  0020AC  0E00               	movlw	0
  5093  0020AE  6EC4               	movwf	4036,c	;volatile
  5094                           
  5095                           ;adc_source.c: 16:     ADRESL=0;
  5096  0020B0  0E00               	movlw	0
  5097  0020B2  6EC3               	movwf	4035,c	;volatile
  5098  0020B4  0012               	return		;funcret
  5099  0020B6                     __end_of_ADC_Init:
  5100                           	opt callstack 0
  5101                           
  5102                           	psect	rparam
  5103  0000                     tosu	equ	0xFFF
  5104                           tosh	equ	0xFFE
  5105                           tosl	equ	0xFFD
  5106                           stkptr	equ	0xFFC
  5107                           pclatu	equ	0xFFB
  5108                           pclath	equ	0xFFA
  5109                           pcl	equ	0xFF9
  5110                           tblptru	equ	0xFF8
  5111                           tblptrh	equ	0xFF7
  5112                           tblptrl	equ	0xFF6
  5113                           tablat	equ	0xFF5
  5114                           prodh	equ	0xFF4
  5115                           prodl	equ	0xFF3
  5116                           indf0	equ	0xFEF
  5117                           postinc0	equ	0xFEE
  5118                           postdec0	equ	0xFED
  5119                           preinc0	equ	0xFEC
  5120                           plusw0	equ	0xFEB
  5121                           fsr0h	equ	0xFEA
  5122                           fsr0l	equ	0xFE9
  5123                           wreg	equ	0xFE8
  5124                           indf1	equ	0xFE7
  5125                           postinc1	equ	0xFE6
  5126                           postdec1	equ	0xFE5
  5127                           preinc1	equ	0xFE4
  5128                           plusw1	equ	0xFE3
  5129                           fsr1h	equ	0xFE2
  5130                           fsr1l	equ	0xFE1
  5131                           bsr	equ	0xFE0
  5132                           indf2	equ	0xFDF
  5133                           postinc2	equ	0xFDE
  5134                           postdec2	equ	0xFDD
  5135                           preinc2	equ	0xFDC
  5136                           plusw2	equ	0xFDB
  5137                           fsr2h	equ	0xFDA
  5138                           fsr2l	equ	0xFD9
  5139                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      95
    BANK0           160     47      81
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S855_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    memset@dest	PTR void  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    memset@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[4]), STR_3(CODE[4]), main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[4]), STR_3(CODE[4]), main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 

    sp__memset	PTR void  size(2) Largest target is 10
		 -> main@Soil(BANK0[10]), main@Temperature(BANK0[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___xxtofl->_ADC_Read
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   18303
                                             88 COMRAM     1     1      0
                                             18 BANK0     29    29      0
                           _ADC_Init
                           _ADC_Read
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _memset
                       _servoRotate0
                      _servoRotate90
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   10109
                                              0 BANK0     18    10      8
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9604
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    9247
                                             63 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3157
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _servoRotate90                                        3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate0                                         3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    1175
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              8 COMRAM    14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             22 COMRAM    25    17      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    1094
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1551
                                             47 COMRAM    25    17      8
                           _ADC_Read (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     908
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     143
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      22
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             8     6      2     197
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   ___fldiv
     _ADC_Read (ARG)
     ___flmul (ARG)
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl (ARG)
       _ADC_Read (ARG)
   ___flge
   ___flmul
     _ADC_Read (ARG)
     ___xxtofl (ARG)
       _ADC_Read (ARG)
   ___fltol
   ___xxtofl
     _ADC_Read (ARG)
   _memset
   _servoRotate0
   _servoRotate90
   _sprintf
     ___fltol (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2F      51       5       50.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B0      20        0.0%
DATA                 0      0      B0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jun 03 01:43:40 2019

           ___fldiv@aexp 0048             ___fldiv@bexp 0047             ___fldiv@sign 0040  
           ?_LCD_Command 0001                       l66 1D62                       _GO 007E11  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000              ?_LCD_String 0003  
          servoRotate0@i 0002             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
            __CFG_WDT$ON 000000                      l120 1ED6                      l115 1F14  
                    l149 1CA4                      l167 11B8                      l169 11C0  
                    l470 1AE0                      l800 109E                      l801 109A  
                    l819 0BEC                      l836 0E8A                      l828 0E04  
                    l860 16F4                      l829 0E00                      l880 1FDE  
                    l867 1772                      l789 1030             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _abs 1FB6                      _pad 1C76  
                    wreg 000FE8             ___flmul@aexp 0028             ___flmul@bexp 0029  
         servoRotate90@i 0002             ___flmul@sign 0023             ___flmul@temp 002E  
           ___flmul@prod 002A              LCD_Char@dat 0002             ___fltol@exp1 000A  
                   l2001 135E                     ?_abs 0013                     l2033 142A  
                   l2043 14DC                     l2221 0EEE                     l2053 1522  
                   l2143 1F9A                     l2081 1E30                     l2241 0F2E  
                   l2217 0EEA                     l2049 1518                     l2147 1FA8  
                   l2323 1106                     l2171 18D6                     l2059 153A  
                   l2091 1D9A                     l2085 1E58                     l2333 113C  
                   l2237 0F2A                     l2501 1B3A                     l2173 1908  
                   l2165 189E                     l2093 1DC0                     l2335 113E  
                   l2327 1130                     l2319 10E2                     l2263 0F90  
                   l2255 0F78                     l2431 0DCA                     l2159 183A  
                   l2281 1008                     l2273 0FE0                     l2249 0F62  
                   l2425 0DAC                     l2521 1B94                     l2451 0E48  
                   l2355 0B98                     l2179 191E                     l1811 1F6A  
                   l2293 1046                     l2373 0BD8                     l2357 0B9C  
                   l2517 1B84                     l1901 1954                     l2287 102E  
                   l2455 0E66                     l2383 0C0A                     l2375 0BDC  
                   l2359 0BAC                     l2535 1BC4                     l2527 1B9C  
                   l2551 1722                     l1807 1F54                     l1815 2024  
                   l1831 1C9C                     l1911 19A6                     l2607 083A  
                   l2481 1AB4                     l2529 1BA8                     l2553 1728  
                   l2545 1704                     l1817 2028                     l1841 1CF2  
                   l1833 1CAE                     l1921 1A04                     l1905 1978  
                   l2299 1064                     l2491 1B18                     l2467 0EA8  
                   l2563 1798                     l2555 1734                     l1827 1C8E  
                   l2635 0AD2                     l2485 1ACA                     l2477 1A80  
                   l2581 17E4                     l2565 17A4                     l2557 175A  
                   l1837 1CC6                     l1933 1E92                     l1925 1A2A  
                   l1917 19EE                     l1909 1992                     l2637 0AD6  
                   l1935 1E9E                     l1871 15FC                     l1863 15C2  
                   l2647 0B5A                     l1881 1658                     l1857 159A  
                   l1963 11DA                     l1797 1BEE                     l1869 15E8  
                   l1885 166E                     l1949 119C                     ?_pad 0011  
                   l1967 11EA                     l1889 1694                     l1977 12E2  
                   l1997 1346                     _ADON 007E10                     STR_1 0801  
                   STR_2 0807                     STR_3 0810                     STR_4 080C  
                   u2000 1F48                     u2010 1F0A                     u1410 1C2E  
                   u2220 10F0                     u2230 1114                     _LATB 000F8A  
                   u1511 15C8                     u2320 0BF8                     u2410 0E56  
                   u2330 0D6E                     u1530 1600                     u2180 1094  
                   u2420 0E74                     u2500 1B58                     u1700 12F0  
                   u1390 1BE6                     u1630 116E                     u2335 0D64  
                   u1480 1FC4                     u1720 1312                     u1640 1170  
                   u2505 1B4E                     u1721 1310                     u2370 0DFA  
                   u1730 1320                     u1810 145E                     u1900 1D4A  
                   u2540 1BAE                     u2620 17AE                     u1740 1324  
                   u1830 1E50                     u1590 19AA                     u1670 11AE  
                   u1840 1E78                     u1760 1330                     u2490 1B28  
                   u1690 11D4                     u1924 1D58                     u2660 0960  
                   u1925 1D54                     u1837 1E46                     u1918 1D4C  
                   u1870 1D2E                     u2807 1FEE                     u1847 1E6E  
                   u2680 099C                     u2817 2098                     u2745 0B64  
                   u2746 0B66                     u2757 1EDE                     u1894 1D3C  
                   u2678 0962                     u1895 1D38                     u2767 1EEE  
                   u1888 1D30                     u2777 1F1C                     u2698 099E  
                   u2787 1F2E                     u2797 207A                     abs@a 0013  
                   _dbuf 0091                     _ctoa 1E80                     _main 0816  
                   _dtoa 1146       __size_of_LCD_Clear 0008                     _prec 005C  
                   _nout 008F                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9         __end_of_ADC_Init 20B6         __end_of_ADC_Read 1D86  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000          ___fldiv@new_exp 0041          ??_servoRotate90 0001  
          _LCD_String_xy 1F82            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_abs 0015                    ??_pad 0017         __end_of_LCD_Char 2084  
       __end_of_LCD_Init 201A            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
          ___fltol@sign1 0009          __end_of___aodiv 16B6                    ?_ctoa 001C  
                  ?_main 0001                    ?_dtoa 001C          __end_of___aomod 1A4C  
        __end_of___fldiv 1146          __end_of___flmul 0EBE          __end_of___fltol 1BD6  
                  _LATD0 007C60                    _LATD1 007C61             vfpfcnvrt@fmt 0042  
          __CFG_USBDIV$1 000000                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _flags 005E                    _fputc 1BD6  
                  _fputs 1F4A                    pad@fp 0011                    _width 005A  
                  ctoa@c 001E                    _putch 20BE                    ctoa@w 001F  
                  dtoa@d 001E                    dtoa@i 003E                    dtoa@n 0036  
                  dtoa@p 0030                    dtoa@s 0034                    dtoa@w 0032  
                  tablat 000FF5                    status 000FD8      __size_of_LCD_String 0052  
        __end_of_sprintf 1E2E           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
         ?_LCD_String_xy 0005          __initialization 2044             __end_of_ctoa 1ECE  
           __end_of_main 0B6C             __end_of_dtoa 1388                   ??_ctoa 001F  
                 ??_main 0059                   ??_dtoa 0026        __end_of_LCD_Clear 20BE  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 0001                   ?_fputs 000A  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   ?_putch 0001  
       LCD_String_xy@msg 0006         LCD_String_xy@pos 0005         LCD_String_xy@row 0008  
                 _OSCCON 000FD3         __end_of___xxtofl 17F6           __CFG_XINST$OFF 000000  
           vfprintf@cfmt 0057                   ___flge 1A4C                ??___aodiv 0011  
              ??___aomod 0011                ??___fldiv 0038           __CFG_STVREN$ON 000000  
              ??___flmul 001F                ??___fltol 0005          ADC_Read@channel 0001  
                 _memset 17F6          ADC_Read@digital 0007                   clear_0 204A  
                 pad@buf 0013                   ctoa@fp 001C     __size_of_LCD_Command 001E  
                 dtoa@fp 001C                   _strlen 201A                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
              ?_ADC_Init 0001                ?_ADC_Read 0001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 1DDC                ??_sprintf 0059  
        __CFG_FOSC$EC_EC 000000               ___flge@ff1 0001               ___flge@ff2 0005  
           ___xxtofl@arg 0013             ___xxtofl@exp 0012             ___xxtofl@val 0009  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 205C  
              ?_LCD_Init 0001          ??_LCD_String_xy 0008            ___rparam_used 000001  
             ___fltol@f1 0001           __pcstackCOMRAM 0001            __end_of_fputc 1C76  
          __end_of_fputs 1F82            __end_of_putch 20C0             ??_LCD_String 0005  
             ??_ADC_Init 0001               ??_ADC_Read 0003                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001               __pbssBANK0 008F  
             ??_LCD_Char 0001               ??_LCD_Init 0003       __end_of_LCD_String 1E80  
                ?___flge 0001          main@Temperature 0072                  ?_memset 0001  
                ?_strlen 0001                ?___xxtofl 0009       __size_of_vfpfcnvrt 01E6  
        __CFG_VREGEN$OFF 000000            LCD_String@msg 0003                  __Hparam 0000  
                __Lparam 0000    __end_of_servoRotate90 1F0C          __size_of___flge 00D0  
                ___aodiv 156E                  ___aomod 1928                  ___fldiv 0EBE  
                ___flmul 0B6C                  ___fltol 1B1C                ?_vfprintf 0051  
           __psmallconst 0800                  __pcinit 2044          __size_of_memset 0132  
                __ramtop 0800                  __ptext0 0816                  __ptext1 1DDC  
                __ptext2 1D86                  __ptext3 1388                  __ptext4 1146  
                __ptext5 1FB6                  __ptext6 1928                  __ptext7 156E  
                __ptext8 1E80                  __ptext9 1C76          __size_of_strlen 002A  
           __size_of_abs 0032             __size_of_pad 0096               ??___xxtofl 000D  
              _LCD_Clear 20B6                  _sprintf 1DDC     end_of_initialization 205C  
                fputc@fp 0003                  memset@c 0003                  memset@k 0009  
                memset@n 0005                  memset@s 000B           LCD_Command@cmd 0002  
          __Lmediumconst 0000                  fputs@fp 000C        __end_of_vfpfcnvrt 156E  
          ?_servoRotate0 0001                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0057  
                strlen@a 0003                  strlen@s 0001            ___xxtofl@sign 0011  
              _TRISAbits 000F92               ?_LCD_Clear 0001              ___fldiv@grs 0043  
            ___fldiv@rem 003C        __size_of_ADC_Init 0014        __size_of_ADC_Read 007A  
            ___flmul@grs 0024        __size_of_LCD_Char 001E        __size_of_LCD_Init 0032  
         ??_servoRotate0 0001            ??_LCD_Command 0001           __end_of___flge 1B1C  
            vfpfcnvrt@ap 0044              vfpfcnvrt@fp 0040              vfpfcnvrt@ll 0048  
         __end_of_memset 1928           __end_of_strlen 2044      start_initialization 2044  
            __end_of_abs 1FE8              __end_of_pad 1D0C    __end_of_LCD_String_xy 1FB6  
            vfprintf@fmt 0053                 ??___flge 0009         __CFG_LPT1OSC$OFF 000000  
               ??_memset 0007               memset@dest 0001                 ??_strlen 0003  
              ___fldiv@a 0034                ___fldiv@b 0030      __end_of_LCD_Command 20A2  
              ___flmul@a 001B                ___flmul@b 0017              __pbssCOMRAM 005A  
          __pcstackBANK0 0060         ___aodiv@dividend 0001              ??_LCD_Clear 0003  
      __size_of___xxtofl 0140                 ?___aodiv 0001                 ?___aomod 0001  
               ?___fldiv 0030         ___aodiv@quotient 0013                 ?___flmul 0017  
               ?___fltol 0001        __size_of_vfprintf 0056              __smallconst 0800  
               _ADC_Init 20A2                 _ADC_Read 1D0C     __end_of_servoRotate0 1F4A  
  LCD_String_xy@location 0009                 ?_sprintf 0060           __size_of_fputc 00A0  
         __size_of_fputs 0038           __size_of_putch 0002                 _LCD_Char 2066  
               _LCD_Init 1FE8                 _LATAbits 000F89                 _LATCbits 000F8B  
       __CFG_WDTPS$32768 000000              _LCD_Command 2084                _vfpfcnvrt 1388  
             _ADCON0bits 000FC2               vfpfcnvrt@c 0050   __size_of_servoRotate90 003E  
               __Hrparam 0000               vfprintf@ap 0055                 __Lrparam 0000  
             vfprintf@fp 0051         __size_of___aodiv 0148         __size_of___aomod 0124  
       __size_of___fldiv 0288         __size_of___flmul 0352         __size_of___fltol 00BA  
             ?_vfpfcnvrt 0040          ___aodiv@divisor 0009          ___aodiv@counter 0011  
             sprintf@fmt 0062                 ___xxtofl 16B6                 _main$171 0086  
               _dtoa$387 002E                 __ptext10 201A                 __ptext11 1F4A  
               __ptext20 1A4C                 __ptext12 1BD6                 __ptext21 0EBE  
               __ptext13 20BE                 __ptext22 1F82                 __ptext14 1ECE  
               __ptext23 1E2E                 __ptext15 1F0C                 __ptext24 2066  
               __ptext16 17F6                 __ptext25 1FE8                 __ptext17 16B6  
               __ptext26 20B6                 __ptext18 1B1C                 __ptext27 2084  
               __ptext19 0B6C                 __ptext28 1D0C                 __ptext29 20A2  
       __size_of_sprintf 0052            __size_of_ctoa 004E            __size_of_main 0356  
          __size_of_dtoa 0242            _servoRotate90 1ECE                 _vfprintf 1D86  
               main@Soil 007C                 main@temp 008B                 main@soil 0087  
             _LCD_String 1E2E         ___aomod@dividend 0001    __CFG_CPUDIV$OSC1_PLL2 000000  
  __size_of_servoRotate0 003E                sprintf@ap 006A           ?_servoRotate90 0001  
           _servoRotate0 1F0C          ___aomod@divisor 0009              ??_vfpfcnvrt 0046  
        ___aomod@counter 0011                 sprintf@f 006C                 sprintf@s 0060  
 __size_of_LCD_String_xy 0034             ___aodiv@sign 0012             ___aomod@sign 0012  
